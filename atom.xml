<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-11T14:18:15.973Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>头皮发麻</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux进程监控管理工具详解</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E8%BF%9B%E7%A8%8B%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/05/05/Linux进程监控管理工具详解/</id>
    <published>2018-05-05T14:00:00.000Z</published>
    <updated>2018-07-11T14:18:15.973Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、top——进程监控工具"><a href="#一、top——进程监控工具" class="headerlink" title="一、top——进程监控工具"></a>一、top——进程监控工具</h3><p>相对于ps而言，ps显示的是某个时间点的进程状态信息，top命令工具类似于windows系统的任务管理器，可以动态的持续监控进程的运行状态<br><img src="http://www.178linux.com/wp-content/uploads/2018/05/top.png" alt="enter image description here"></p><p>每一行的代表的含义为：</p><p>第一行：</p><ul><li><p>1.当前系统时间</p></li><li><p>2.系统已启动的时间</p></li><li><p>3.当前登录用户数</p></li><li><p>4.系统平均负载（1min、5min、15min），超过1表示负载过高</p></li></ul><p>第二行：</p><p>当前进程的总量，以及处于各种状态的进程的数量，要注意最后的zombie，不为0</p><p>要及时查看哪个进程处于僵死状态</p><p>第三行：CPU的整体负载，多核CPU可按1切换不同CPU的负载率</p><ul><li><p>us：user space       用户运行程序占用CPU百分比</p></li><li><p>sy：system     用于运行内核占用CPU百分比</p></li><li><p>ni：nice用户进程空间所改变过优先级的进程占用CPU百分比</p></li><li><p>id：idle   空闲CPU百分比</p></li><li><p>wa：wait to   等待I/O花费时间</p></li><li><p>hi：hardware interrupt 硬件中断占用CPU的百分比</p></li><li><p>si：software interrupt 软件中断占用CPU的百分比</p></li><li><p>st：stolen       被偷走的CPU百分比，一般为虚拟机占用</p></li></ul><p>第四行：表示物理内存的使用情况</p><p>第五行：表示交换分区的使用情况</p><p>第六行：这里默认显示空白，可以输入指令，包括：</p><ul><li><p>P       以占据的CPU百分比大小排序</p></li><li><p>M     以内存占比大小排序</p></li><li><p>T       CPU累加占用时间排序</p></li><li><p>l        是否显示系统负载行</p></li><li><p>t       是否显示进程摘要信息及CPU负载状态</p></li><li><p>1       数字1，平均或单独显示各CPU负载信息</p></li><li><p>m     是否显示内存相关状态信息</p></li><li><p>q       退出</p></li><li><p>s       修改延迟时长</p></li><li><p>k       终止指定进程</p></li></ul><p>top输出下面的部分：</p><ul><li><p>PID   进程ID</p></li><li><p>USER        进程所有者</p></li><li><p>PR    进程优先级，越小优先级越高</p></li><li><p>NI     nice优先级，越小优先级越高</p></li><li><p>VIRT         进程需要占用的内存大小</p></li><li><p>RES  进程当前实际占用内存大小</p></li><li><p>SHR  进程与其他进程恭喜的内存大小</p></li><li><p>S       进程状态</p></li><li><p>%CPU       CPU占有率</p></li><li><p>%MEM     内存使用率</p></li><li><p>TIME+      进行CPU使用时间累加</p></li><li><p>COMMAND 进程或命令名称</p></li></ul><p>二、htop——top增强版进程监控工具<br>htop是top命令工具的增强版，系统默认没有按照，需epel源进行安装<br><img src="http://www.178linux.com/wp-content/uploads/2018/05/htop.png" alt="enter image description here"><br>交互式命令：</p><ul><li><p>u       选择显示指定用户的进程</p></li><li><p>l        显示光标所在进程缩打开的文件列表</p></li><li><p>s       显示光标所在进程执行的系统调用</p></li><li><p>a       绑定进程到指定cpu（退出htop失效）</p></li><li><p>#       快速定位光标至PID为#的进程上</p></li></ul><p>htop支持的一些信息</p><ul><li><p>-d #  延迟时长</p></li><li><p>-u USERNAME：显示指定用户的进程</p></li><li><p>-s COLUMN：根据指定字段进行排序</p></li></ul><h3 id="三、iotop、iostat——磁盘读写监控工具"><a href="#三、iotop、iostat——磁盘读写监控工具" class="headerlink" title="三、iotop、iostat——磁盘读写监控工具"></a>三、iotop、iostat——磁盘读写监控工具</h3><p>iotop命令是一个用来监视磁盘I/O使用状况的top类工具iotop具有与top相似的UI，其</p><p>中包括PID、用户、I/O、进程等相关信息，可查看每个进程是如何使用IO\</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/05/iotop.png" alt="enter image description here"></p><p>每一行的代表的含义为：</p><p>第一行：Read和Write速率总计</p><p>第二行：实际的Read和Write速率</p><p>第三行：参数如下：</p><ul><li><p>TID                    线程ID（按p切换为进程ID）</p></li><li><p>PRIO                          优先级</p></li><li><p>USER                         用户</p></li><li><p>DISK READ                磁盘读速率</p></li><li><p>DISK WRITE              磁盘写速率</p></li><li><p>SWPIN                       swap交换百分比</p></li><li><p>IO&gt;                    IO等待所占的百分比</p></li><li><p>COMMAND                       线程/进程命令</p></li></ul><p>交互按键</p><p>left和right方向键：改变排序</p><ul><li><p>r：反向排序</p></li><li><p>o：切换至选项–only</p></li><li><p>p：切换至–processes选项</p></li><li><p>a：切换至–accumulated选项</p></li><li><p>q：退出</p></li><li><p>i：改变线程的优先级</p></li></ul><p>iotop支持的选项：</p><ul><li><p>-o, –only         只显示正在产生I/O的进程或线程，除了传参，可以在运行过程中按o生效</p></li><li><p>-b, –batch                非交互模式，一般用来记录日志</p></li><li><p>-n NUM, –iter=NUM      设置监测的次数，默认无限。在非交互模式下很有用</p></li><li><p>-d SEC, –delay=SEC        设置每次监测的间隔，默认1秒，接受非整形数据例如1.1</p></li><li><p>-p PID, –pid=PID     指定监测的进程/线程</p></li><li><p>-u USER, –user=USER    指定监测某个用户产生的I/O</p></li><li><p>-P, –processes                 仅显示进程，默认iotop显示所有线程</p></li><li><p>-a, –accumulated   显示累积的I/O，而不是带宽</p></li><li><p>-k, –kilobytes          使用kB单位，而不是对人友好的单位。在非交互模式下，脚本编程有用</p></li><li><p>-t, –time                 加上时间戳，非交互非模式</p></li><li><p>-q, –quiet                禁止头几行，非交互模式，有三种指定方式</p></li><li><p>-q             只在第一次监测时显示列名</p></li><li><p>-qq          永远不显示列名</p></li><li><p>-qqq                 永远不显示I/O汇总</p></li></ul><p>iostat                统计cpu和设备IO信息<br><img src="http://www.178linux.com/wp-content/uploads/2018/05/iostat.png" alt="enter image description here"></p><p>第一段显示：内核版本（主机名） 当前日期  架构类型  核心数</p><p>第二段显示：cpu平均利用率</p><p>第三段显示：磁盘读写速度（kb/s）</p><p>四、vmstat——虚拟内存统计工具<br>通过top、htop我们可以获得一些进程对系统资源的使用情况，而vmstat则可以通过</p><p>内存、磁盘、网络、CPU来动态显示系统资源的使用情况。</p><p>格式：vmstat [options][delay [count]]</p><p>选项：</p><ul><li><p>-s              显示内存的统计数据</p></li><li><p>-d              显示磁盘的统计数据</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/05/vmstat.png" alt="enter image description here"></p><p>vmstat输出含义：</p><p>procs：</p><ul><li><p>r：可运行进程的个数，和核心数有关</p></li><li><p>b：处于不可终端睡眠状态</p></li></ul><p>memory：</p><ul><li><p>swpd：交换内存的使用总量</p></li><li><p>free：空闲物理内存总量</p></li><li><p>buffer：用于buffer的内存总量</p></li><li><p>cache：用于cache的内存总量</p></li></ul><p>swap：</p><ul><li><p>si：从磁盘交换进内存的数据速率（kb/s）</p></li><li><p>so：从内存交换至磁盘的数据速率（kb/s）</p></li></ul><p>io：</p><ul><li><p>bi：从块设备读入数据到系统的速率（kb/s）</p></li><li><p>bo：保存数据至块设备的速率（kb/s）</p></li></ul><p>system：</p><ul><li><p>in：interrupts 中断速率，包括时钟</p></li><li><p>cs：进程切换速率</p></li></ul><p>cpu：</p><ul><li><p>us：user space       用户运行程序占用CPU百分比</p></li><li><p>sy：system     用于运行内核占用CPU百分比</p></li><li><p>id：idle   空闲CPU百分比</p></li><li><p>wa：wait to   等待I/O花费时间</p></li><li><p>st：stolen       被偷走的CPU百分比，一般为虚拟机占用</p></li></ul><h3 id="五、glances——可跨平台系统监控工具"><a href="#五、glances——可跨平台系统监控工具" class="headerlink" title="五、glances——可跨平台系统监控工具"></a>五、glances——可跨平台系统监控工具</h3><p>glances是一款系统监视工具，能够监视CPU、负载、内存、磁盘I/O、网络流量、文件</p><p>系统、系统温度等信息。centos系统默认不安装glances工具，需手动安装（epel源）</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/05/glances-1.png" alt="enter image description here"></p><p>glances可提供的监视和分析性能数据功能包括：</p><ul><li><p>1.CPU使用率</p></li><li><p>2.内存使用情况</p></li><li><p>3.内核统计信息和运行队列信息</p></li><li><p>4.磁盘I/O速度、传输和读/写比率</p></li><li><p>5.文件系统中的可用空间</p></li><li><p>6.磁盘适配器</p></li><li><p>7.网络I/O速度、传输和读/写比率</p></li><li><p>8.页面空间和页面速度</p></li><li><p>9.消耗资源最多的进程</p></li><li><p>10.计算机信息和系统资源</p></li></ul><p>常用选项：</p><ul><li><p>-b： 以Byte为单位显示网卡数据速率</p></li><li><p>-d： 关闭磁盘I/O模块</p></li><li><p>-f： /path/to/somefile: 设定输入文件位置</p></li><li><p>-o： {HTML|CSV}：输出格式</p></li><li><p>-m： 禁用mount模块</p></li><li><p>-n： 禁用网络模块</p></li><li><p>-t #： 延迟时间间隔</p></li><li><p>-1：  每个CPU的相关数据单独显示</p></li></ul><p>支持远程模式，可在C/S模式下运行glances命令：</p><p>注：glances版本最好一样</p><p>服务器模式：</p><p>glances -s -B IPADDR</p><p>IPADDR: 指明监听的本机哪个地址</p><p>客户端模式：</p><p>glances -c IPADDR</p><p>IPADDR：要连入的服务器端地址</p><h3 id="六、dstat——多功能整合系统监控工具"><a href="#六、dstat——多功能整合系统监控工具" class="headerlink" title="六、dstat——多功能整合系统监控工具"></a>六、dstat——多功能整合系统监控工具</h3><p>dstat是一个多功能工具，他包含了vmstat，iostat，netstat这些命令的功能，并</p><p>增加了监控项，变得更加灵活。dstat可用于基准测试和排除故障。</p><p>默认情况下，dstat每秒刷新一次并显示结果，可按ctrl+c退出</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/05/dstat.png" alt="enter image description here"></p><p>每一区列代表的含义：</p><ul><li><p>total-cpu-usage               CPU使用率</p></li><li><p>dsk/total          磁盘读写总数</p></li><li><p>net/total          网络设备发送和接收数据的总数</p></li><li><p>paging                       系统的分页活动，大多数情况我们希望此处两项为0</p></li><li><p>system                      显示中断和上下文切换。只在有比较基线时才有意义。这一栏较高的统计值通常表示大量进程造成拥塞</p></li></ul><p>dstat支持的选项：</p><ul><li><p>-c     显示cpu性能指标相关统计数据</p></li><li><p>-d     显示磁盘disk相关速率</p></li><li><p>-g     显示page相关速率数据</p></li><li><p>-m    显示内存memory相关统计数据</p></li><li><p>-n     显示网络network相关统计数据</p></li><li><p>-p     显示进程process相关统计数据</p></li><li><p>-r      显示io请求相关统计数据</p></li><li><p>-s      显示swap的相关数据</p></li></ul><p>长选项：</p><ul><li><p>–top-cpu         显示最占用CPU的进程</p></li><li><p>–top-io   显示最占用io的进程</p></li><li><p>–top-mem      显示最占用内存的进程</p></li><li><p>–top-latency  显示延迟最大的进程</p></li><li><p>–tcp                  显示tcp套接字相关数据</p></li><li><p>–udp                 显示udp套接字相关数据</p></li><li><p>–unix                显示unix sock接口相关统计数据</p></li><li><p>–raw                显示raw套接的相关数据</p></li><li><p>–socket 显示套接相关数据</p></li><li><p>–ipc         显示进程间通信相关的速率数据</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、top——进程监控工具&quot;&gt;&lt;a href=&quot;#一、top——进程监控工具&quot; class=&quot;headerlink&quot; title=&quot;一、top——进程监控工具&quot;&gt;&lt;/a&gt;一、top——进程监控工具&lt;/h3&gt;&lt;p&gt;相对于ps而言，ps显示的是某个时间点的进程状态信息
      
    
    </summary>
    
    
      <category term="进程" scheme="http://yoursite.com/tags/%E8%BF%9B%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统进程管理及作业操作</title>
    <link href="http://yoursite.com/2018/05/05/Linux%E7%B3%BB%E7%BB%9F%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%8F%8A%E4%BD%9C%E4%B8%9A%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/05/05/Linux系统进程管理及作业操作/</id>
    <published>2018-05-05T12:00:00.000Z</published>
    <updated>2018-07-11T14:04:39.018Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、进程相关概念："><a href="#一、进程相关概念：" class="headerlink" title="一、进程相关概念："></a>一、进程相关概念：</h3><p>进程是正在运行的程序实体，并且包括这个运行的程序中占据的所有系统资源，比如说CPU，IO,内存，网络资源等。通过学习Linux系统进程管理来协调多道程序之间的关系，使CPU得到充分的利用。</p><p>进程和程序的区别是什么？</p><p>进程是一个动态的概念，当用户把一个程序或命令执行起来的时候，才有进程的概念，系统会自动分配一个编号PID给进程。</p><p>程序是一个静态的概念，表现为一个文件</p><p>进程的分类：<br>根据进程与系统终端的关系：</p><ul><li><p>（1）守护进程：在系统引导过程中启动的进程，即跟终端无关的进程。</p></li><li><p>（2）前台进程：跟终端相关，通过终端启动的进程；</p></li></ul><p>注：守护进程和前台进程可相互转化</p><p>根据进程占用资源的多少分为：</p><ul><li><p>（1）CPU密集型：对cpu占用率高的进程</p></li><li><p>（2）IO密集型：占用磁盘读写高的进程</p></li></ul><p>进程的状态：<br>进程在被内核调度过程中的状态可分为很多种：</p><ul><li><p>1.运行态：running 进程正在运行中</p></li><li><p>2.就绪态：ready</p></li><li><p>3.睡眠态：sleeping</p></li><li><p>可中断睡眠：interruptible  大部分进程处于此状态，随时可唤醒</p></li><li><p>不可中断睡眠：uninterruptible</p></li><li><p>4.僵尸态：zombie 找不到归属的进程，或父进程已不存在</p></li><li><p>5.停止态：stopped 不可被调度并运行</p></li></ul><p>进程优先级<br>进程优先级：</p><p>系统优先级：数字越小，优先级越高</p><p>0-139（CentOS4,5）</p><p>各有140个运行队列和过期队列</p><p>0-98，99（CentOS6）</p><p>实时优先级: 99-0 值最大优先级最高</p><p>nice值：-20到19，对应系统优先级100-139或99</p><p>Big O：时间复杂度，用时和规模的关系（越往左越好）</p><p>O(1), O(logn), O(n)线性, O(n^2)抛物线, O(2^n)</p><p>进程内存：</p><ul><li><p>Page Frame: 页框，用存储页面数据，存储Page 4k</p></li><li><p>LRU：Least Recently Used 近期最少使用算法,释放内存</p></li></ul><p>物理地址空间和线性地址空间</p><ul><li><p>MMU：Memory Management Unit负责转换线性和物理地址</p></li><li><p>TLB:Translation Lookaside Buffer 翻译后备缓冲器,用于保存虚拟地址和物理地址</p></li></ul><p>映射关系的缓存</p><ul><li><p>IPC: Inter Process Communication</p></li><li><p>同一主机: signal:信号</p></li><li><p>shm: shared memory</p></li><li><p>semaphore:信号量，一种计数器</p></li><li><p>不同主机：socket: IP和端口号</p></li><li><p>RPC: remote procedure call       远程过程调用</p></li><li><p>MQ：消息队列，Kafka，ActiveMQ</p></li></ul><h3 id="二、信号操作管理"><a href="#二、信号操作管理" class="headerlink" title="二、信号操作管理"></a>二、信号操作管理</h3><p>我们指定同一主机间的程序是通过信号来进行通讯的，那么我们也可以通过发送信号的方式对进程进行管理。</p><p>使用kill  -l 命令可以查看当前支持的信号类型：<br><img src="http://www.178linux.com/wp-content/uploads/2018/05/%E4%BF%A1%E5%8F%B7.png" alt="enter image description here"></p><p>信号的表示方式：</p><ul><li><p>（1）数字表示：1,2,9</p></li><li><p>（2）完整名称：SIGHUP</p></li><li><p>（3）简写名称：HUP</p></li></ul><p>Linux系统支持的型号类型多达60余种，常用信号类型有：</p><ul><li><p>SIGHUP：1，无须关闭进程而让其重新读取配置文件，使新配置生效</p></li><li><p>SIGINT：2，打断正在运行中的进程，相当于Ctrl+c</p></li><li><p>SIGQUIT：3，相当Ctrl+\</p></li><li><p>SIGKILL：9，强制杀死正在运行的进程</p></li><li><p>SIGTERN：15，终止正在运行的进程（kill命令默认信号）</p></li><li><p>SIGCONT：18，继续运行指定进程</p></li><li><p>SIGSTOP：19，后台休眠</p></li></ul><p>信号管理命令<br>常用的信号管理命令有kill，killall，pkill：</p><p>kill命令可用来向进程发送信号指令，以及显示当前系统可用的信号</p><p>kill发送信号格式：</p><p>kill [-SIGNAL] PID</p><p>如：kill -9 123                 强制杀死PID为123的进程</p><p>killall发送信号格式：</p><p>killall [-SIGNAL] PROCESS</p><p>如：kill -9 sleep      强制杀死sleep进程</p><p>注意：kill命令跟PID，killall命令跟进程名</p><p>pkill发送信号格式：</p><p>pkill [options] pattern</p><p>options：</p><ul><li><p>-SIGNAL</p></li><li><p>-u uid                生效者</p></li><li><p>-U uid               真正发起运行命令者</p></li><li><p>-t terminal       与指定终端相关的进程</p></li><li><p>-P pid                显示指定进程的子进程</p></li></ul><p>如：pkill -9 -t tty2  强制杀死tty2终端下的所有进程</p><h3 id="三、作业管理（job-control）"><a href="#三、作业管理（job-control）" class="headerlink" title="三、作业管理（job control）"></a>三、作业管理（job control）</h3><p>我们知道，在登录系统后每一个工作进程都是当前bash的子进程，通过作业管理我们可以实现多个进程同时运行，这里我们要涉及到两个新的名词：前台作业和后台作业</p><ul><li><p>前台作业：通过终端前，且启动后一直占据终端</p></li><li><p>后台作业：可通过终端启动，但启动后即转入后台运行（释放前端）</p></li></ul><p>作业状态切换：<br>作用运行一共有三种状态，分别为：前台执行、后台执行与后台休眠（stoped）</p><p>jobs命令         显示当前作业编号以及作业状态</p><p>让作业运行于后台：</p><ul><li><p>（1）尚未启动的作业：COMMAND &amp;</p></li><li><p>（2）运行中的作业：Ctrl+z，后台休眠状态</p></li></ul><p>将后台休眠|运行作业调回前台运行：</p><p>fg job_num      将作业在前台运行（foreground）</p><p>将后台休眠作业执行后台运行：</p><p>bg job_num     将作业在后台运行（background）</p><p>关闭后台执行：</p><ul><li><p>（1）fg job_num；ctrl+c</p></li><li><p>（2）kill %job_num</p></li></ul><p>并行运行<br>同时运行多个进程，提高效率</p><p>方法1：</p><p>利用脚本</p><p>vi all.sh</p><pre><code>f1.sh&amp;f2.sh&amp;f3.sh&amp;</code></pre><p>方法2：</p><p>  (CMD1&amp;);(CMD2&amp;);(CMD3&amp;)</p><p>方法3：</p><p>{ CMD1&amp; CMD2&amp; CMD3&amp; }</p><p>执行长时间任务时防止网络中断造成操作中断<br>方法1：剥离命令与终端的联系，终端中断后进程将转移至1进程上，再恢复</p><p>nohup COMMAND &amp;&gt;/dev/null &amp;</p><p>方法2：开启一个screen会话，重新进入后screen -r即可恢复</p><p>screen；COMMAND；screen -r 恢复</p><p>四、Linux进程管理常用命令<br>进程的管理命令有：</p><p>pstree、ps、pidof、pgrep、pkill、pmap、kill、killall、job、bg、fg等</p><p>进程的管理工具：</p><p>top、htop、vmstat、dstat、iostat、glances等（下节介绍）</p><p>ps                   显示进程状态</p><p>BSD选项：</p><ul><li><p>a               所有终端中的进程</p></li><li><p>x                不连接终端的进程</p></li><li><p>u               显示进程所有者的信息</p></li><li><p>f                显示进程树</p></li><li><p>k|–sort 属性 对属性排列，属性前加-表示倒序</p></li><li><p>L       显示支持的属性</p></li></ul><p>显示PID,tty，cmd，cpu占用率，内存占用列表，并按%mem排序</p><ul><li><p>ps xo pid,tty,cmd,%cpu,%mem –sort %mem</p></li><li><p>ps xo pid,tty,cmd,%cpu,%mem k%mem</p></li></ul><p>按%cpu排序，“-”表示倒序</p><p>ps xo pid,tty,cmd,%cpu,%mem –sort -%cpu</p><p>短选项：</p><ul><li><p>-e              显示所有进程</p></li><li><p>-f               显示完整格式程序信息</p></li><li><p>-F              显示更完整格式的进程信息</p></li><li><p>-C              查看指定CMD或脚本的进程，多个命令用“，”分开</p></li></ul><p>显示PID，命令，pri优先级（数字越大，优先级越高），nice优先级，realtime优先级</p><p>ps xo pid,cmd,pri,nice,rtprio</p><p>根据进程编号查询CMD命令</p><ul><li><p>ps -p 3245  -o comm=           查找PID3245对应的命令名称</p></li><li><p>ps -C sleep -o pid=           根据命令查找pid</p></li></ul><p>常用组合：</p><ul><li><p>ps aux                        显示所有进程的详细信息</p></li><li><p>ps -ef                         类似于aux，缺少cpu%，mem%</p></li><li><p>ps -eF</p></li></ul><p>pstree              显示进程树</p><ul><li><p>-p                       显示PID</p></li><li><p>-h                      高亮标注当前使用的进程</p></li></ul><p>pgrep                进程搜索命令，支持正则表达式</p><p>格式：pgrep [options] pattern</p><p>options：</p><ul><li><p>-u uid                effective user,生效者</p></li><li><p>-U uid               real user，真正发起运行命令者</p></li><li><p>-t terminal       与指定终端相关的进程</p></li><li><p>-l               显示进程名</p></li><li><p>-a              显示完整格式的进程名</p></li><li><p>-P pid                显示指定进程的子进程</p></li></ul><p>pidof                 查找正在运行进程的PID</p><p>如：pidof bash                显示bash进程的PID</p><p>uptime 命令</p><p>显示当前时间，系统已启动时间，当前上线人数，系统平均负载（1、5、10分钟，一般不超过1）</p><p>free          显示内存空间使用状态</p><p>options</p><ul><li><p>-b              以字节为单位</p></li><li><p>-m             以MB为单位</p></li><li><p>-g              以GB为单位</p></li><li><p>-h              人类已读格式</p></li></ul><p>pmap       比较专业的查看内存与进程对应关系工具</p><ul><li><p>pmap    12         查看进程号12的内存与进程对应关系</p></li><li><p>-x     显示详细格式的信息</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、进程相关概念：&quot;&gt;&lt;a href=&quot;#一、进程相关概念：&quot; class=&quot;headerlink&quot; title=&quot;一、进程相关概念：&quot;&gt;&lt;/a&gt;一、进程相关概念：&lt;/h3&gt;&lt;p&gt;进程是正在运行的程序实体，并且包括这个运行的程序中占据的所有系统资源，比如说CPU，
      
    
    </summary>
    
    
      <category term="进程" scheme="http://yoursite.com/tags/%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="job" scheme="http://yoursite.com/tags/job/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统网络管理</title>
    <link href="http://yoursite.com/2018/05/03/Linux%E7%B3%BB%E7%BB%9F%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/05/03/Linux系统网络管理/</id>
    <published>2018-05-03T12:00:00.000Z</published>
    <updated>2018-07-11T13:50:56.968Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、基本网络配置："><a href="#一、基本网络配置：" class="headerlink" title="一、基本网络配置："></a>一、基本网络配置：</h3><p>将Linux主机接入网络，需要配置网络相关设置</p><p>一般包括以下内容：</p><ul><li><p>主机名</p></li><li><p>IP/netmask</p></li><li><p>路由：默认网关</p></li><li><p>DNS服务器：</p></li><li><p>主DNS服务器</p></li><li><p>次DNS服务器</p></li></ul><h4 id="网络配置文件："><a href="#网络配置文件：" class="headerlink" title="网络配置文件："></a>网络配置文件：</h4><p>IP、MASK、GW、DNS相关配置文件：/etc/sysconfig/networkscripts/ifcfg-IFACE：</p><ul><li><p>DEVICE=eth0                   针对网卡名称（必须有）</p></li><li><p>ONTBOOT=yes                 yes表示开机自动启动网卡，默认yes</p></li><li><p>BOOTPROTO=dhcp         自动获取，生产中一般改为手动配置static|none（必须有）</p></li><li><p>IPADDR=172.20.0.6        设置IP（必须有）</p></li><li><p>NETMASK=255.255.0.0  传统方式配置掩码（必须有）</p></li><li><p>PREFIX=16                CIDR法设置掩码（必须有）</p></li><li><p>DEFROUTE=yes            是否将此配置的网关设为默认路由</p></li><li><p>GATEWAY=172.20.0.1    设置网关</p></li><li><p>DNS1=114.114.114.114 设置DNS1</p></li><li><p>DNS2=8.8.8.8          设置DNS2</p></li><li><p>TYPE                          接口类型，常见有Ethernet，Bridge</p></li><li><p>UUID                         设备唯一表示</p></li></ul><p>路由相关的配置文件：/etc/sysconfig/network-scripts/route-IFACE</p><p>注意：需service network restart生效</p><p>两种风格：</p><p>(1) TARGET via GW</p><p>如：10.0.0.0/8 via 172.16.0.1</p><p>(2) 每三行定义一条路由</p><pre><code>ADDRESS#=TARGETNETMASK#=maskGATEWAY#=GW</code></pre><p>网络配置方式：<br>静态指定：</p><p>ifconfig，route，netstat</p><p>ip：object{link，addr，route}，ss，tc</p><p>system-config-network-tui，setup      图形工具</p><p>直接修改配置文件</p><p>动态分配：</p><p>DHCP： Dynamic Host Configuration Protocol</p><h3 id="二、主机、网卡名称管理"><a href="#二、主机、网卡名称管理" class="headerlink" title="二、主机、网卡名称管理"></a>二、主机、网卡名称管理</h3><p>CentOS6网卡名称</p><p>接口命名方式：</p><p>以太网：eth[0,1,2…]</p><p>ppp：ppp[0,1,2…]</p><p>网络接口识别并命名相关的udev配置文件：</p><p>/etc/udev/rules.d/70-persistent-net.rules</p><p>查看网卡：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dmesg |grep –i eth</span><br><span class="line"></span><br><span class="line">ethtool -i eth0</span><br></pre></td></tr></table></figure><p>卸载网卡驱动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">modprobe -r e1000</span><br><span class="line"></span><br><span class="line">rmmod e1000</span><br></pre></td></tr></table></figure><p>装载网卡驱动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modprobe e1000</span><br></pre></td></tr></table></figure><p>修改主机名：<br>hostname [NEWNAME] 临时生效，重启恢复</p><p>永久生效：</p><p>CentOS6：</p><p>修改/etc/sysconfig/network</p><p>CentOS7：</p><p>修改/etc/hostname</p><p>或：hostnamectl set-hostname [NEWNAME]</p><p>hostname [NEWNAME] 使配置文件生效</p><p>修改CentOS7网卡命名为传统命名方式，实现自动化运维<br>(1) 编辑/etc/default/grub配置文件</p><p>GRUB_CMDLINE_LINUX=”rhgb quiet net.ifnames=0″</p><p>或：修改/boot/grub2/grub.cfg   linux 16 行尾添加 net.ifnames=0</p><p>(2) 为grub2生成其配置文件</p><p>grub2-mkconfig -o /etc/grub2.cfg</p><p>(3) 重启系统</p><p>修改本地解析器：<br>/etc/hosts</p><p>本地主机名数据库和IP地址的映像</p><p>对小型独立网络有用</p><p>通常，在使用DNS前检查</p><p>一般建议在127.0.0.1的行尾加上本机的hostname</p><p>注：如果hostname发生更改，一定要记得同时更改/etc/hosts里的原添加内容</p><p>搭建网站也建议将网站地址与网页名称对应写入到/etc/hosts文件中，避免解析出错</p><p>设置DNS：</p><p>/etc/resolv.conf</p><p>nameserver DNS_SERVER_IP1</p><p>nameserver DNS_SERVER_IP2</p><p>nameserver DNS_SERVER_IP3</p><h3 id="三、网卡别名"><a href="#三、网卡别名" class="headerlink" title="三、网卡别名"></a>三、网卡别名</h3><p>对虚拟环境有用，可将多个IP地址绑定到一个网卡上</p><p>eth0：1、eth0：2、eth0：3</p><p>ifconfig命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0:0 192.168.1.100/24 up</span><br><span class="line"></span><br><span class="line">ifconfig eth0:0 down</span><br></pre></td></tr></table></figure><p>ip命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 172.16.1.2/16 dev eth0</span><br><span class="line"></span><br><span class="line">ip addr add 172.16.1.1/16 dev eth0 label eth0:0</span><br><span class="line"></span><br><span class="line">ip addr add 172.16.1.2/16 dev eth0 label eth0:0</span><br><span class="line"></span><br><span class="line">ip addr del 172.16.1.1/16 dev eth0 label eth0:0</span><br><span class="line"></span><br><span class="line">ip addr flush dev eth0 label eth0:0</span><br></pre></td></tr></table></figure><p>为别名设备添加配置文件，永久生效</p><ul><li><p>（1）service NetworkManager stop      关闭图形界面网络管理</p></li><li><p>（2）ifctg-ethX：xxx</p></li><li><p>（3）必须使用静态IP配置</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0：0</span><br><span class="line"></span><br><span class="line">IPADDR=10.10.10.10</span><br><span class="line"></span><br><span class="line">NETMASK=255.0.0.0</span><br><span class="line"></span><br><span class="line">ONPARENT=yes</span><br></pre></td></tr></table></figure><ul><li>（4）最后重启网络服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure><h3 id="四、网络接口配置bonding"><a href="#四、网络接口配置bonding" class="headerlink" title="四、网络接口配置bonding"></a>四、网络接口配置bonding</h3><p>Bonding是将多个网卡绑定同一IP地址对外提供服务，可以实现高可用或者负载均衡。直接给两块网卡</p><p>设置同一IP地址是不可以的。通过bonding，虚拟一块网卡对外提供链接，物理网卡被修改为相同的MAC</p><p>地址</p><p>Bonding工作模式：</p><p>Mode 0 (balance-rr)</p><p>轮转（Round-robin）策略：从头到尾顺序的在每个slave接口上发送数据包。提供负载均衡和容错的能力</p><p>Mode 1 (active-backup)</p><p>活动-备份（主备）策略：只有一个slave被激活，当且仅当活动的slave接口失败时才会激活其他slave。</p><p>为了避免交换机发生混乱此时绑定的MAC地址只有一个外部端口上可见</p><p>Mode 3 (broadcast)</p><p>广播策略：在所有的slave接口上传送所有的报文,提供容错能力</p><p>查看bond0主备状态：/proc/net/bonding/bond0</p><p>创建bonding设备的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network-scripts/ifcfg-bond0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=bond0</span><br><span class="line"></span><br><span class="line">BOOTPROTO=none</span><br><span class="line"></span><br><span class="line">BONDING_OPTS= “miimon=100 mode=0”</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line"></span><br><span class="line">DEVICE=eth0</span><br><span class="line"></span><br><span class="line">BOOTPROTO=none</span><br><span class="line"></span><br><span class="line">MASTER=bond0</span><br><span class="line"></span><br><span class="line">SLAVE=yes</span><br><span class="line"></span><br><span class="line">USERCTL=no</span><br></pre></td></tr></table></figure><p>也可使用nmcli实现bonding</p><p>添加bonding接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con add type bond con-name mybond0 ifname mybond0 mode active-backup</span><br></pre></td></tr></table></figure><p>添加从属接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmcli con add type bond-slave ifname ens7 master mybond0</span><br><span class="line"></span><br><span class="line">nmcli con add type bond-slave ifname ens3 master mybond0</span><br></pre></td></tr></table></figure><p>注：如无为从属接口提供连接名，则该名称是接口名称加类型构成，要启动绑定，则必须</p><p>首先启动从属接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmcli con up bond-slave-eth0</span><br><span class="line"></span><br><span class="line">nmcli con up bond-slave-eth1</span><br></pre></td></tr></table></figure><p>启动绑定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con up mybond0</span><br></pre></td></tr></table></figure><p>取消bonding</p><p>1.卸载驱动模块</p><ul><li><p>lsmod                        显示所有已加载的驱动模块</p></li><li><p>lsmod | grep bond</p></li><li><p>ifconfig bond0 down      禁用网卡</p></li><li><p>modproble -r bonding</p></li></ul><p>2.删除和修改文件</p><ul><li><p>rm -r ifcfg-bond0</p></li><li><p>vim ifcfg-eth{0,1}</p></li><li><p>service     network restart       重启网络服务</p></li></ul><h3 id="五、实现网络组"><a href="#五、实现网络组" class="headerlink" title="五、实现网络组"></a>五、实现网络组</h3><p>代替bonding的一种技术</p><p>网络组：将多个网卡聚合在一起的方法，从而实现冗错和提高吞吐量</p><p>多种方式运行：</p><ul><li><p>broadcast                 广播模式</p></li><li><p>roundrobin               轮播模式</p></li><li><p>activebackup           主备模式</p></li><li><p>loadbalance              负载均衡模式</p></li><li><p>lacp (implements the 802.3ad Link Aggregation Control Protocol)</p></li></ul><p>创建网络组Network Teaming（RHCE）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con add type team con-name team0 ifname team0 config</span><br></pre></td></tr></table></figure><p>‘{“runner”: {“name”: “loadbalance”}}’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">nmcli con mod team0 ipv4.addresses 192.168.1.100/24</span><br><span class="line"></span><br><span class="line">nmcli con mod team0 ipv4.method manual</span><br><span class="line"></span><br><span class="line">nmcli connection show</span><br><span class="line"></span><br><span class="line">nmcli con add con-name team0-eth1 type team-slave ifname eth1 master team0</span><br><span class="line"></span><br><span class="line">nmcli con add con-name team0-eth2 type team-slave ifname eth2 master team0</span><br><span class="line"></span><br><span class="line">nmcli con up team0</span><br><span class="line"></span><br><span class="line">nmcli con up team0-eth1</span><br><span class="line"></span><br><span class="line">nmcli con up team0-eth2</span><br><span class="line"></span><br><span class="line">nmcli connection show</span><br><span class="line"></span><br><span class="line">teamdctl team0 state</span><br></pre></td></tr></table></figure><p>删除网络组：</p><ul><li><p>第一种方法：删除network-scripts下配置文件</p></li><li><p>第二种方法：<code>nmcli connection delete team0 team0-eth1 team0-eth2</code></p></li></ul><h3 id="六、Linux网络管理常用命令："><a href="#六、Linux网络管理常用命令：" class="headerlink" title="六、Linux网络管理常用命令："></a>六、Linux网络管理常用命令：</h3><h4 id="ifconfig-命令-配置网络接口"><a href="#ifconfig-命令-配置网络接口" class="headerlink" title="ifconfig 命令          配置网络接口"></a>ifconfig 命令          配置网络接口</h4><p>-a                       查看所有接口信息</p><p>interface up|down 禁用|启用接口</p><p>设置IP地址</p><p>ifconfig IFACE IP/netmask      支持两种掩码设置IP</p><p>IP netmask</p><p>注意：此命令执行将立即生效</p><h4 id="route-命令-路由管理命令"><a href="#route-命令-路由管理命令" class="headerlink" title="route  命令                       路由管理命令"></a>route  命令                       路由管理命令</h4><p>-n                       查看路由表</p><p>添加路由：</p><p>route add [-net|-host] target [netmask Nm] [gw Gw] [[dev] if]    </p><p>添加目标：192.168.1.3 网关：172.16.0.1到路由表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add -host 192.168.1.3 gw 172.16.0.1 dev eth0</span><br></pre></td></tr></table></figure><p>添加目标：192.168.0.0 网关：172.16.0.1到路由表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add -net 192.168.0.0 netmask 255.255.255.0 gw 172.16.0.1 dev eth0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add -net 192.168.0.0/24 gw 172.16.0.1 dev eth0</span><br></pre></td></tr></table></figure><p>添加默认路由，网关：172.16.0.1到路由表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">route add -net 0.0.0.0 netmask 0.0.0.0 gw 172.16.0.1</span><br><span class="line"></span><br><span class="line">route add default gw 172.16.0.1</span><br></pre></td></tr></table></figure><p>删除路由：</p><p>route del [-net|-host] target [netmask Nm] [gw Gw] [[dev] if]</p><p>配置动态路由</p><p>通过首行进程获取动态路由</p><p>安装quagga包</p><p>支持多种路由协议：RIP（根据跳数）、OSPF（综合带宽、跳数等）和BGP</p><p>命令vtysh配置</p><h4 id="netstat-命令-查看网络连接，路由表，接口统计等信息"><a href="#netstat-命令-查看网络连接，路由表，接口统计等信息" class="headerlink" title="netstat   命令                   查看网络连接，路由表，接口统计等信息"></a>netstat   命令                   查看网络连接，路由表，接口统计等信息</h4><p>option：</p><ul><li><p>-t                       tcp协议相关</p></li><li><p>-u                       udp协议相关</p></li><li><p>-w                      raw socket相关</p></li><li><p>-l                        处于监听状态</p></li><li><p>-a                       所有状态</p></li><li><p>-n                       以数字显示所有IP和端口</p></li><li><p>-e                       扩展格式</p></li><li><p>-p                       显示相关进程及PID</p></li></ul><p>常用组合选项：</p><ul><li><p>-nr                     查看路由表</p></li><li><p>-nt                     查看TCP进程</p></li><li><p>-ntu                   查看TCP及UDP进程</p></li><li><p>-ntul                           查看处于监听状态LISTEN的服务</p></li><li><p>-tul                    端口程序不进行名称解析显示</p></li><li><p>-ntua                         查看所有状态的服务</p></li><li><p>-ntuap                       查看哪个进程打开的此端口</p></li><li><p>-ntuape                     扩展信息，包括使用用户UID</p></li></ul><p>统计端口数据</p><ul><li><p>-i                        查看网卡收发包信息</p></li><li><p>-I=eth0                      只显示eth0网卡收发包信息等同于ifconfig -s eth0</p></li></ul><h4 id="ss-命令"><a href="#ss-命令" class="headerlink" title="ss 命令"></a>ss 命令</h4><p>格式：ss [option]…[FILTER]</p><p>用来代替netstat的新命令，netstat通过遍历proc来获取socket信息，ss使用netlink与内核tcp_diag</p><p>模块通信获取socket信息。</p><p>option：</p><ul><li><p>-t                       tcp协议相关</p></li><li><p>-u                       udp协议相关</p></li><li><p>-w                      裸套接字相关</p></li><li><p>-x                       unix sock相关</p></li><li><p>-l                        listen状态的链接</p></li><li><p>-a                       所有链接</p></li><li><p>-n                       以数字格式显示</p></li><li><p>-p                       相关的程序及PID</p></li><li><p>-e                       扩展的信息</p></li><li><p>-m                     内存用量</p></li><li><p>-o                      计时器信息</p></li></ul><p>TCP常见状态：</p><ul><li><p>LISTEN                      监听</p></li><li><p>ESTABLISHED           已建立的链接</p></li><li><p>FIN_WAIT_1</p></li><li><p>FIN_WAIT_2</p></li><li><p>SYN_SENT</p></li><li><p>CLOSED</p></li></ul><p>支持EXPRESSION：</p><ul><li><p>dport=                       目标端口</p></li><li><p>sport=                       源端口</p></li></ul><p>常用组合用法与netstat类似</p><p>-tan，-tanl等</p><p>常见用法：</p><ul><li><p>ss -l                           显示本地打开的所有端口</p></li><li><p>ss -pl                         显示每个进程具体打开的socket</p></li><li><p>ss -t -a             显示所有tcp socket</p></li><li><p>ss -u -a            显示所有的UDP Socekt</p></li></ul><p><code>ss -o state established ‘( dport = :ssh or sport = :ssh )’</code> 显示所有已建立的ssh连接</p><p><code>ss -o state established ‘( dport = :http or sport = :http )’</code> 显示所有已建立的HTTP连接</p><p>ss -s 列出当前socket详细信息</p><h4 id="ip-命令-配置Linux网络属性"><a href="#ip-命令-配置Linux网络属性" class="headerlink" title="ip  命令    配置Linux网络属性"></a>ip  命令    配置Linux网络属性</h4><p>格式：ip [OPTIONS] OBJECT {COMMAND|help}</p><pre><code>OBJECT={link|addr|route}</code></pre><p>网络设备配置：</p><ul><li><p>ip link       set IFACE down|up 禁用|启用网卡</p></li><li><p>ip link       show [up]                 显示数据链路层信息[仅显示处于激活状态接口]</p></li></ul><p>ip地址设置：</p><ul><li><p>ip addr {add|del} IP dev IFACE</p></li><li><p>ip address add IP dev IFACE label ALIASIFACE              添加地址时指定网卡别名</p></li><li><p>ip address add IP dev IFACE scpe{global|link|host}    指明作用域</p></li><li><p>global：全局可用</p></li><li><p>link：仅链接可用</p></li><li><p>host：本机可用</p></li><li><p>ip address flush dev IFACe  清空IP地址</p></li></ul><p>路由管理：</p><ul><li><p>ip r|route [show|list]                               查看路由表</p></li><li><p>ip route add|del TARGET via GW dev IFACE 添加|删除路由</p></li><li><p>ip route flush dev IFACE                         清空路由表</p></li></ul><p>常用命令：</p><ul><li><p>ip help                                                 查看ip命令使用帮助</p></li><li><p>ip link                                                   查看数据链路层信息</p></li><li><p>ip link set eth1 up|down                          设置eth1网卡启用|禁用</p></li><li><p>ip address|a                                       查看网卡信息</p></li><li><p>ip route|r                                            查看路由信息</p></li><li><p>ip route add|del IP/24 via gateway                添加路由</p></li><li><p>ip address add 2.2.2.2/24 dev eth0                添加IP地址</p></li><li><p>ip address add 2.2.2.2/24 dev eth0 label eth0：2添加别名网卡IP地址</p></li><li><p>ip address flush dev eth0                         清空eth0网卡上所有ip地址</p></li></ul><p>nmcli                 管理网络管理器的命令行工具<br>格式：nmcli [OPTIONS] OBJECT COMMAND</p><p>OBJECT：</p><ul><li><p>device                       显示和管理网络接口</p></li><li><p>connection|con               管理网络连接</p></li></ul><p>修改IP地址等属性：</p><ul><li>nmcli connection modify IFACE [+|-]setting.property value</li></ul><p>setting.property：</p><ul><li><p>ipv4.addresses</p></li><li><p>ipv4.gateway</p></li><li><p>ipv4.dns1</p></li><li><p>ipv4.method manual | auto</p></li></ul><p>修改配置文件执行生效：</p><ul><li><p>systemctl restart network</p></li><li><p>nmcli con reload</p></li></ul><p>设备即网络接口，连接是对网络接口的配置。一个网络接口可有多个连接配置，</p><p>但同时只有一个连接配置生效</p><p>使连接配置生效|失效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con up|down eth0</span><br></pre></td></tr></table></figure><p>显示所有包括不活动连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con show</span><br></pre></td></tr></table></figure><p>显示所有活动连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con show –active</span><br></pre></td></tr></table></figure><p>显示网络连接配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con show “System eth0“</span><br></pre></td></tr></table></figure><p>显示设备状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli dev status</span><br></pre></td></tr></table></figure><p>显示网络接口属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli dev show eth0</span><br></pre></td></tr></table></figure><p>创建新连接default，IP自动通过dhcp获取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con add con-name default type Ethernet ifname eth0</span><br></pre></td></tr></table></figure><p>删除连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con del default</span><br></pre></td></tr></table></figure><p>创建新连接static ，指定静态IP，不自动连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmcti con add con-name static ifname eth0 autoconnect no type</span><br><span class="line"></span><br><span class="line">Ethernet ipv4.addresses 172.25.X.10/24 ipv4.gateway 172.25.X.254</span><br></pre></td></tr></table></figure><p>启用static连接配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con up static</span><br></pre></td></tr></table></figure><p>启用default连接配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con up default</span><br></pre></td></tr></table></figure><p>查看帮助</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con add help</span><br></pre></td></tr></table></figure><p>修改连接设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nmcli con mod“static” connection.autoconnect no</span><br><span class="line"></span><br><span class="line">nmcli con mod “static” ipv4.dns 172.25.X.254</span><br><span class="line"></span><br><span class="line">nmcli con mod “static” +ipv4.dns 8.8.8.8</span><br><span class="line"></span><br><span class="line">nmcli con mod “static” -ipv4.dns 8.8.8.8</span><br><span class="line"></span><br><span class="line">nmcli con mod “static” ipv4.addresses “172.25.X.10/24 172.25.X.254”</span><br><span class="line"></span><br><span class="line">nmcli con mod “static” +ipv4.addresses 10.10.10.10/16</span><br></pre></td></tr></table></figure><p>DNS设置，存放在/etc/resolv.conf文件中</p><p>PEERDNS=no 表示当IP通过dhcp自动获取时，dns仍是手动设置，不自动获取。等价于下</p><p>面命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con mod “system eth0” ipv4.ignore-auto-dns yes</span><br></pre></td></tr></table></figure><p>修改连接配置后，需要重新加载配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli con reload</span><br></pre></td></tr></table></figure><p>nmcli con down “system eth0” 可被自动激活</p><p>nmcli con up “system eth0”</p><p>nmcli dev dis eth0 禁用网卡，访止被自动激活</p><p>图形工具</p><p>nm-connection-editor</p><p>字符工具</p><p>nmtui</p><p>nmtui-connect</p><p>nmtui-edit</p><p>nmtui-hostname</p><p>测试网络<br>在命令行下测试网络的连通性</p><p>显示主机名</p><p>hostname</p><p>测试网络连通性</p><p>ping</p><p>mtr</p><p>显示正确的路由表</p><p>ip route</p><p>确定名称服务器使用：</p><p>nslookup</p><p>host</p><p>dig</p><p>跟踪路由</p><p>traceroute</p><p>tracepath</p><p>网络客户端工具<br>ftp，lftp：子命令：get、mget、ls、help</p><p>ftp [-p port] [-u user[,password]] SERVER</p><p>lftpget URL      直接跟URL地址下载</p><p>wget [option]… [URL]…</p><ul><li><p>-q: 静默模式</p></li><li><p>-c: 断点续传</p></li><li><p>-P：保存在指定目录</p></li><li><p>-O: 保存为指定的文件名</p></li><li><p>–limit-rate=: 指定传输速率，单位K,M等，生产中最好限速</p></li></ul><p>links URL          图形界面浏览器</p><ul><li><p>–dump            只显示文字</p></li><li><p>–source          查看网页源码</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、基本网络配置：&quot;&gt;&lt;a href=&quot;#一、基本网络配置：&quot; class=&quot;headerlink&quot; title=&quot;一、基本网络配置：&quot;&gt;&lt;/a&gt;一、基本网络配置：&lt;/h3&gt;&lt;p&gt;将Linux主机接入网络，需要配置网络相关设置&lt;/p&gt;
&lt;p&gt;一般包括以下内容：&lt;/
      
    
    </summary>
    
    
      <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>网络基本概念及OSI参考模型、TCP/IP协议简介</title>
    <link href="http://yoursite.com/2018/05/02/%E7%BD%91%E7%BB%9C%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%8F%8AOSI%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B%E3%80%81TCPIP%E5%8D%8F%E8%AE%AE%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2018/05/02/网络基本概念及OSI参考模型、TCPIP协议简介/</id>
    <published>2018-05-02T12:00:00.000Z</published>
    <updated>2018-07-03T13:58:12.508Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、网络概念"><a href="#一、网络概念" class="headerlink" title="一、网络概念"></a>一、网络概念</h4><p>什么是网络？</p><p>网络是由节点和连线构成，表示诸多对象及其相互联系。在计算机领域中，网络是信息传输、接收、</p><p>共享的虚拟平台，通过它把各个点、面、体的信息联系到一起，从而实现这些资源的共享。</p><p>网络是人类发展史来最重要的发明，提高了科技和人类社会的发展。</p><p>网络应用程序：</p><ul><li><p>Web 浏览器（Chrome、IE、Firefox等）</p></li><li><p>即时消息（QQ、微信、钉钉等）</p></li><li><p>电子邮件（Outlook、foxmail 等）</p></li><li><p>协作（视频会议、VNC、Netmeeting、WebEx 等）</p></li><li><p>web网络服务（apache,nginx,IIS）</p></li><li><p>文件网络服务（ftp,nfs,samba）</p></li><li><p>数据库服务（ MySQL,MariaDB, MongoDB)</p></li><li><p>中间件服务（Tomcat，JBoss）</p></li><li><p>安全服务（ Netfilter）</p></li></ul><p>网络的特征：</p><ul><li><p>速度</p></li><li><p>成本</p></li><li><p>安全性</p></li><li><p>可用性</p></li><li><p>可扩展性</p></li><li><p>可靠性</p></li><li><p>拓扑</p></li></ul><p>拓扑结构：</p><ul><li><p>网络拓扑可分为物理拓扑和逻辑拓扑</p></li><li><p>物理拓扑描述了物理设备的布线方式</p></li><li><p>逻辑拓扑描述了信息在网络中的流动方式</p></li></ul><p>物理拓扑中又分为多种拓扑结构，常见类型有：</p><ul><li><p>总线拓扑：所有设备均可接收信号</p></li><li><p>星型拓扑：通过中心点传输；单一故障点</p></li><li><p>拓展星型拓扑：比星型拓扑的复原能力更强</p></li><li><p>环拓扑：信号绕环传输；单一故障点</p></li><li><p>双环拓扑：信号沿相反方向传输；比单环复原能力更强</p></li><li><p>全网状拓扑：容错能力强；但实施成本高</p></li><li><p>部分网状拓扑：在容错能力与成本之间寻求平衡</p></li></ul><p>三种通讯模式：</p><ul><li><p>单播unicast</p></li><li><p>广播broadcast</p></li><li><p>组播multicast</p></li></ul><p>非屏蔽式双绞线UTP：交叉线，直通线</p><p>UTP交叉线线序</p><ul><li><p>T568B：橙白 橙 绿白 蓝 蓝白 绿 棕白 棕</p></li><li><p>T568A：绿白 绿 橙白 蓝 蓝白 橙 棕白 棕</p></li></ul><p>网络通讯传输模式</p><ul><li><p>单工：单词传播，如收音机，广播电台</p></li><li><p>双工：双向</p></li><li><p>全双工：同时双向，如手机</p></li><li><p>半双工：轮流双向，如对讲机</p></li></ul><h4 id="二、OSI参考模型"><a href="#二、OSI参考模型" class="headerlink" title="二、OSI参考模型"></a>二、OSI参考模型</h4><p>OSI(Open System Interconnect）开放系统互连参考模型是国际标准化组织(ISO)和国际电报电话咨询委员会(CCITT)联合制定的开放系统互连参考模型，为开放式互连信息系统提供了一种功能结构的框架。它从低到高分别是：物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。</p><p>其目的是为异种计算机互连提供一个共同的基础和标准框架，并为保持相关标准的一致性和兼容性提供共同的参考。OSI参考模型如下图所示：<br><img src="http://www.178linux.com/wp-content/uploads/2018/05/%E6%A8%A1%E5%9E%8B.gif" alt="enter image description here"></p><p>OSI模型的七层结构：下层为相邻的上层提供服务</p><p>应用层：</p><ul><li><p>作用：针对特定应用的协议</p></li><li><p>PDU：message</p></li><li><p>协议有：HTTP FTP TFTP SMTP SNMP DNS TELNET HTTPS POP3 DHCP</p></li><li><p>特性：网络进程访问应用层</p></li><li><p>为应用程序进行（如电子邮件、文件传输和终端仿真）提供网络服务</p></li><li><p>提供用户身份验证</p></li></ul><p>表示层：</p><ul><li><p>作用：设备固有数据格式和网络标准数据格式的转换</p></li><li><p>PDU：message</p></li><li><p>格式有，JPEG、ASCll、DECOIC、加密格式等</p></li><li><p>特性：数据表示</p></li><li><p>确保接收系统可以读出该数据</p></li><li><p>格式化数据</p></li><li><p>构建数据</p></li><li><p>协商用于应用层的数据传输语法</p></li><li><p>提供加密</p></li></ul><p>会话层：</p><ul><li><p>作用：通信管理。负责建立和断开通信连接（数据流动的逻辑通路）。管理传输层以下的分层</p></li><li><p>PDU：message</p></li><li><p>对应主机进程，指本地主机与远程主机正在进行的会话</p></li><li><p>特性：主机间通信</p></li><li><p>建立、管理和终止在应用程序之间的会话</p></li></ul><p>传输层：</p><ul><li>作用：管理两个节点之间的数据传输，负责可靠传输（确保数据被可靠的传送到目</li></ul><p>的地址）。</p><ul><li><p>PDU：段segment</p></li><li><p>协议有：TCP UDP，数据包一旦离开网卡即进入网络传输层</p></li><li><p>特性：传输问题</p></li><li><p>确保数据传输的可靠性</p></li><li><p>建立、维护和终止虚拟电路</p></li><li><p>通过错误检测和恢复</p></li><li><p>信息流控制来保障可靠性</p></li></ul><p>网络层：</p><ul><li><p>作用：地址管理与路由选择</p></li><li><p>PDU：包packet</p></li><li><p>逻辑地址：IP地址</p></li><li><p>协议有：ICMP IGMP IP（IPV4 IPV6） ARP RARP</p></li><li><p>特性：数据传输</p></li><li><p>路由数据包</p></li><li><p>选择传递数据的最佳路径</p></li><li><p>支持逻辑寻址和路径选择</p></li></ul><p>数据链路层：</p><ul><li><p>作用：互连设备之间传送和识别数据帧</p></li><li><p>PDU：帧frame</p></li><li><p>物理地址：MAC地址</p></li><li><p>特性：访问介质</p></li><li><p>定义如何格式化数据以便进行传输以及如何控制对网络的访问</p></li><li><p>支持错误检测</p></li></ul><p>物理层：</p><ul><li><p>作用：以“0”、“1”代表电压的高低、灯光的闪灭。界定连接器和网线的规格</p></li><li><p>PDU：节bit</p></li><li><p>特性：二进制传输</p></li><li><p>为启动、维护已经关闭物流链路定义了电气规范、机械规范、过程规范和功能规范</p></li><li><p>单位：位bit</p></li></ul><p>PDU: Protocol Data Unit,协议数据单元是指对等层次之间传递的数据单位</p><ul><li><p>物理层的 PDU是数据位 bit</p></li><li><p>数据链路层的 PDU是数据帧 frame</p></li><li><p>网络层的PDU是数据包 packet</p></li><li><p>传输层的 PDU是数据段 segment</p></li><li><p>其他更高层次的PDU是消息 message</p></li></ul><h4 id="三、TCP-IP协议"><a href="#三、TCP-IP协议" class="headerlink" title="三、TCP/IP协议"></a>三、TCP/IP协议</h4><p>TCP/IP也称”国际协议簇”， 即不仅指 TCP/IP协议本身，而且包括与其有关的协议。 TCP<br>为传输控制协议，IP为网际协议，是网络层最重要的协议。采用TCP/IP协议通过互联网传送信息可减少网络中的传输阻塞，方便大批量的数据在网上传输，从而提高网络的传输效率。</p><p>TCP/IP协议簇的主要协议有TCP、IP、UDP、ICMP、RIP、TELNET、FTP、SMTP、ARP等</p><p>TCP/IP模型共定义了四层，分别是应用层，和OSI参考模型的分层有对应关系：</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/05/%E6%A8%A1%E5%9E%8B%E5%AF%B9%E5%BA%94.png" alt="enter image description here"></p><p>网络访问层(Network Access Layer)与OSI模型中的物理层以及数据链路层对应，在TCP/IP参考模型中并没有详细描述，只是指出主机必须使用某种协议与网络相连。</p><p>Internet层(Internet Layer)是整个体系结构的关键部分，其功能是使主机可以把分组发往任何网络，并使分组独立地传向目标。这些分组可能经由不同的网络，到达的顺序和发送的顺序也可能不同。高层如果需要顺序收发，那么就必须自行处理对分组的排序。互联网层使用因特网协议(IP，Internet Protocol)。TCP/IP参考模型的互联网层和OSI参考模型的网络层在功能上非常相似。</p><p>传输层(Tramsport Layer)使源端和目的端机器上的对等实体可以进行会话。在这一层定义了两个端到端的协议：传输控制协议(TCP，Transmission Control Protocol)和用户数据报协议(UDP，User Datagram Protocol)。</p><p>应用层(Application Layer)包含所有的高层协议，包括：虚拟终端协议(TELNET，TELecommunications NETwork)、文件传输协议(FTP，File Transfer Protocol)、电子邮件传输协议(SMTP，Simple，Mail Transfer Protocol)、域名服务(DNS，Domain Name Service)、网上新闻传输协议(NNTP，Net News Transfer Protocol)和超文本传送协议(HTTP，HyperText Transfer Protocol)等。<br><img src="http://www.178linux.com/wp-content/uploads/2018/05/EQXYWBXAA8VXEEVTBN.png" alt="enter image description here"></p><h4 id="四、常见网络设备"><a href="#四、常见网络设备" class="headerlink" title="四、常见网络设备"></a>四、常见网络设备</h4><p>Hub集线器</p><p>Hub：多端口中继器，现已基本淘汰</p><ul><li>Hub并不记忆该信息包是由哪个MAC地址发出，哪个MAC地址在Hub的哪个端口</li></ul><p>Hub的特点：</p><ul><li><p>共享带宽</p></li><li><p>半双工</p></li></ul><p>以太网桥</p><ul><li><p>交换式以太网的优势</p></li><li><p>扩展了网络带宽</p></li><li><p>分割了网络冲突域，使网络冲突被限制在最小的范围内</p></li><li><p>交换机作为更加智能的交换设备，能够提供更多用户所要求的功能：优先级、虚拟网、远程检测…</p></li></ul><ul><li><p>学习时源MAC地址，转发时目的MAC地址</p></li><li><p>网桥是不能隔断广播的</p></li><li><p>同一广播域主机数量越多，网络性能越差</p></li></ul><p>交换机（switch）</p><p>交换机是一种基于MAC（网卡的硬件地址）识别，能完成封装转发数据包功能的网络设备。交换机可以“学习”MAC地址，并把其存放在内部地址表中，通过在数据帧的始发者和目标接收者之间建立临时的交换路径，使数据帧直接由源地址到达目的地址。</p><p>Hub和交换机区别</p><p>集线器属于OSI的第一层物理层设备，而网桥属于OSI的第二层数据链路层设备</p><p>从工作方式来看，集线器是一种广播模式，所有端口在一个冲突域里面。网桥</p><p>的可以通过端口隔离冲突</p><p>Hub是所有共享总线和共享带宽。网桥每个端口占一个带宽</p><p>路由器（router）</p><p>路由：把一个数据包从一个设备发送到不同网络里的另一个设备上去。这些工作</p><p>依靠路由器来完成。路由器只关心网络的状态和决定网络中的最佳路径。路由的实</p><p>现依靠路由器中的路由表来完成。为了实现路由,路由器需要做下列事情:</p><ul><li><p>分隔广播域</p></li><li><p>选择路由表中到达目标最好的路径</p></li><li><p>维护和检查路由信息</p></li><li><p>连接广域网</p></li></ul><p>双绞线物理层</p><ul><li><p>wifi网络层</p></li><li><p>以太网数据链路层</p></li></ul><p>搭建网络的分层网络架构：核心层、分布层、访问层</p><ul><li><p>核心层Core Layer：企业级应用快速转发</p></li><li><p>分布层Distribution Layer：广播域，路由，安全，远程接入，访问层汇聚</p></li><li><p>访问层AccessLayer：终端接入</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、网络概念&quot;&gt;&lt;a href=&quot;#一、网络概念&quot; class=&quot;headerlink&quot; title=&quot;一、网络概念&quot;&gt;&lt;/a&gt;一、网络概念&lt;/h4&gt;&lt;p&gt;什么是网络？&lt;/p&gt;
&lt;p&gt;网络是由节点和连线构成，表示诸多对象及其相互联系。在计算机领域中，网络是信息传输
      
    
    </summary>
    
    
      <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="OSi" scheme="http://yoursite.com/tags/OSi/"/>
    
      <category term="TCP/IP" scheme="http://yoursite.com/tags/TCP-IP/"/>
    
  </entry>
  
  <entry>
    <title>在软件RAID搭建LVM逻辑卷进行管理</title>
    <link href="http://yoursite.com/2018/04/27/%E5%9C%A8%E8%BD%AF%E4%BB%B6RAID%E6%90%AD%E5%BB%BALVM%E9%80%BB%E8%BE%91%E5%8D%B7%E8%BF%9B%E8%A1%8C%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/04/27/在软件RAID搭建LVM逻辑卷进行管理/</id>
    <published>2018-04-27T12:00:00.000Z</published>
    <updated>2018-07-03T13:42:21.509Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实验预期："><a href="#实验预期：" class="headerlink" title="实验预期："></a>实验预期：</h3><p>在CentOS6.9系统上搭建两个RAID级别，分别为RAID0,及RAID5，将两个RAID合并为卷组并创建逻辑卷，实现冗余、性能提升、及弹性拓展。</p><h3 id="实验准备环境："><a href="#实验准备环境：" class="headerlink" title="实验准备环境："></a>实验准备环境：</h3><p>CentOS6.9服务器一台，3块硬盘，分别为40G,60G,80G，并在每块磁盘创建分区sdx1容量为1G，sdx2容量为2G，创建挂载用空目录/test。</p><h4 id="实验一：在软件RAID创建LVM逻辑卷"><a href="#实验一：在软件RAID创建LVM逻辑卷" class="headerlink" title="实验一：在软件RAID创建LVM逻辑卷"></a>实验一：在软件RAID创建LVM逻辑卷</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87.png" alt="enter image description here"></p><p>1.<code>mdadm -C   /dev/md1  -a  yes  -l5  -n3   /dev/sd{b1,c1,d1}</code></p><p>将三个容量为1G的分区sdb1，sdc1，sdd1组成一个名称为md1的RAID5<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BARAID5.png" alt="enter image description here"></p><p>2.<code>mdadm -C   /dev/md2  -a  yes  -l0 -n3   /dev/sd{b2,c2,d2}</code></p><p>将三个容量为2G的分区sdb2，sdc2，sdd2组成一个名称为md2的条形卷RAID0</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BARAID0.png" alt="enter image description here"></p><p>3.<code>mdadm   -D   /dev/md1</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm   -D   /dev/md2</span><br></pre></td></tr></table></figure><p>查看RAID5、RAID0，确定已创建成功，md1设备可用容量为2G，md2设备可用容量为6G</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%9F%A5%E7%9C%8BRAID5.png" alt="enter image description here"></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%9F%A5%E7%9C%8BRAID0.png" alt="enter image description here"></p><p>4.<code>pvcreate   /dev/md1   /dev/md2</code></p><p>将md1、md2设备创建为物理卷</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E7%89%A9%E7%90%86%E5%8D%B7.png" alt="enter image description here"></p><p>5.<code>vgcreate   vg_md   /dev/md1   /dev/md2</code></p><p>创建由md1、md2组成的卷组vg_md，可用容量为8G</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E5%8D%B7%E7%BB%84.png" alt="enter image description here"></p><p>6.<code>lvcreate  -L  7G  -n  lv_md  vg_md</code></p><p>在卷组vg_md上创建一个名称为lv_md，大小为7G的逻辑卷</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/05/%E5%88%9B%E5%BB%BA%E9%80%BB%E8%BE%91%E5%8D%B7.png" alt="enter image description here"></p><p>7.<code>mke2fs    -t   ext4   /dev/vg_md/lv_md</code></p><p>创建逻辑卷lv_md的文件系统为ext4</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F.png" alt="enter image description here"></p><p>8.<code>mount    /dev/vg_md/lv_md     /test/</code></p><p>将逻辑卷lv_md挂载至提前准备好的空目录/test，这时我们看到逻辑卷lv_md已搭建在RAID0与RAID5共同组成的分区上</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%8C%82%E8%BD%BD.png" alt="enter image description here"></p><p>9.<code>vim  /etc/fstab</code></p><p>将挂载信息写入/etc/fstab文件，实现开机自动挂载</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD.png" alt="enter image description here"></p><p>10.<code>dd  if=/dev/zero  of=/test/1G.file  bs=1024k  count=1000</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd  if=/dev/zero  of=/data/1G.file  bs=1024k  count=1000</span><br></pre></td></tr></table></figure><p>测试磁盘写速度，可见/test目录下写性能相比普通磁盘挂载的/data目录确实有显著提升</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%B5%8B%E8%AF%95%E9%80%9F%E5%BA%A6.png" alt="enter image description here"></p><h4 id="实验二：扩展逻辑卷到15G"><a href="#实验二：扩展逻辑卷到15G" class="headerlink" title="实验二：扩展逻辑卷到15G"></a>实验二：扩展逻辑卷到15G</h4><p>由于原有卷组总容量只有8G，我们选择新创建一个10G分区sda6并添加至原卷组中</p><ul><li><p>1.pvcreate  /dev/sda6              创建卷组</p></li><li><p>2.vgextend    vg_md    /dev/sda6            将10G分区sda6添加至vg_md卷组</p></li><li><p>3.lvextend   -r  -L  15G   /dev/vg_md/lv_md      拓展逻辑卷lv_md到15G</p></li></ul><p>注：命令3中-r选项代表同步文件系统大小与逻辑卷大小相同，也可用resize2fs     /dev/sda6命令代替</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%89%A9%E5%AE%B9.png" alt="enter image description here"></p><h4 id="实验三：缩减逻辑卷到5G"><a href="#实验三：缩减逻辑卷到5G" class="headerlink" title="实验三：缩减逻辑卷到5G"></a>实验三：缩减逻辑卷到5G</h4><p>注意：只有ext4系列文件系统可进行LVM缩容，xfs文件系统无法缩减，缩容前先保证缩容后分区容量大于数据容量，否则数据将被破坏，生产环境中一般不进行缩容LVM操作。</p><p>1.<code>umount   /test/</code>       卸载</p><p><code>resize2fs   /dev/vg_md/lv_md   5G</code>        缩减文件系统到5G</p><p>提示应先使用命令e2fsck  -f检查文件系统</p><p>注意文件系统与逻辑卷的执行顺序，扩容时为先扩容逻辑卷再扩容文件系统，缩容时为先缩容文件</p><p>系统再缩容逻辑卷，否则，执行e2fsck  -f检查文件系统将失败<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%8D%B8%E8%BD%BD.png" alt="enter image description here"></p><p>2.<code>e2fsck  -f    /dev/vg_md/lv_md</code>               检查文件系统</p><p>3.<code>resize2fs   /dev/vg_md/lv_md   5G</code>        缩减文件系统到5G<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%A3%80%E6%9F%A5%E6%96%87%E4%BB%B6.png" alt="enter image description here"></p><p>4.<code>lvreduce  -L  5G   /dev/vg_md/lv_md</code>       缩减逻辑卷到5G</p><p>5.<code>lvdisplay</code>            显示逻辑卷已缩减成功</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%AE%8C%E6%88%90.png" alt="enter image description here"></p><p>总结：可见实验RAID和LVM配合使用，确实提升了磁盘的读写性能，实现了冗余，并且可弹性管理分区大小</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;实验预期：&quot;&gt;&lt;a href=&quot;#实验预期：&quot; class=&quot;headerlink&quot; title=&quot;实验预期：&quot;&gt;&lt;/a&gt;实验预期：&lt;/h3&gt;&lt;p&gt;在CentOS6.9系统上搭建两个RAID级别，分别为RAID0,及RAID5，将两个RAID合并为卷组并创建逻辑卷
      
    
    </summary>
    
    
      <category term="RAID" scheme="http://yoursite.com/tags/RAID/"/>
    
      <category term="LVM" scheme="http://yoursite.com/tags/LVM/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统中RAID及LVM管理</title>
    <link href="http://yoursite.com/2018/04/26/Linux%E7%B3%BB%E7%BB%9F%E4%B8%ADRAID%E5%8F%8ALVM%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/04/26/Linux系统中RAID及LVM管理/</id>
    <published>2018-04-26T12:00:00.000Z</published>
    <updated>2018-07-03T13:30:27.447Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、RAID概念及管理"><a href="#一、RAID概念及管理" class="headerlink" title="一、RAID概念及管理"></a>一、RAID概念及管理</h4><p>RAID:Redundant Arrays of Inexpensive（Independent） Disks 廉价（独立）磁盘冗余阵列</p><p>使用多个磁盘合成一个“阵列”来提供更好的性能、冗余，或者两种都提供。<br>RAID的作用：</p><ul><li><p>提高IO能力</p></li><li><p>磁盘并行读写</p></li><li><p>提高耐用性</p></li><li><p>磁盘冗余来实现</p></li></ul><p>级别：多块磁盘组织在一起的工作方式有所不同</p><p>RAID实现的方式：</p><ul><li><p>外接式磁盘阵列：通过扩展卡提供适配能力</p></li><li><p>内接式RAID：主板集成RAID控制器</p></li><li><p>安装OS前在BIOS里配置</p></li><li><p>软件RAID：通过OS实现（生产环境很少用，一般用来测试模拟）</p></li></ul><p>RAID级别</p><ul><li><p>RAID-0              条带卷，strip</p></li><li><p>RAID-1              镜像卷，mirror</p></li><li><p>RAID-2</p></li></ul><ul><li><p>RAID-5</p></li><li><p>RAID-6</p></li><li><p>RAID-10</p></li><li><p>RAID-01</p></li><li><p>JBOD                 将多块磁盘的空间合并成一个连续空间使用</p></li></ul><p>注：目前RAID2-4已基本淘汰，RAID0生产中也少用，RAID1,RAID5,RAID10,RAID01常见</p><ul><li><p>RAID0      条带卷，读写能力提升，但无容错能力，最少需2块磁盘组成，磁盘利用率100%</p></li><li><p>RAID1       镜像卷，具有一块硬盘的容错性，需要2,2N块磁盘组成，磁盘利用率50%</p></li><li><p>RAID4      牺牲了1块硬盘实现冗余，至少3块磁盘组成，磁盘利用率（n-1）n</p></li><li><p>RAID5      带奇偶校验的条带集，至少3块磁盘组成，磁盘利用率（n-1）n，一块硬盘损坏，将大幅消耗系统性能，造成宕机，应及时更换硬盘，性价比高</p></li><li><p>RAID6      牺牲了2块硬盘实现冗余，至少4块磁盘组成，磁盘利用率（n-2）n</p></li><li><p>RAID10    先做RAID1,再做RAID0，容错性相较于RAID01更强，至少4块磁盘组成，空间利用率50%。生产中有条件情况下建议使用RAID10</p></li><li><p>RAID01    先做RAID0,再做RAID1，至少4块磁盘组成，容错性较RAID10稍弱，空间利用率50%</p></li><li><p>RAID50    先做RAID5,再做RAID0，提供了接近RAID 10性能、可用性以及接近RAID 5成本的特性，具有较好的整体性价比，至少6块磁盘组成，空间利用率（n-2）n</p></li><li><p>JBOD        可用空间sum（S1,S2…），性能无提升，至少需要2块磁盘，磁盘利用率100%</p></li></ul><p>常见RAID图形示意<br>RAID0      条带卷，读写能力提升，但无容错能力，最少需2块磁盘组成，磁盘利用率100%</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/0.jpg" alt="enter image description here"></p><p>RAID1       镜像卷，读性能提升，写性能下降具有一块硬盘的容错性，需要2,2N块磁盘组成，磁盘利用率50%</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/1-5.jpg" alt="enter image description here"></p><p>RAID5      带奇偶校验的条带集，与RAID4校验位固定在一个磁盘上相比，RAID5校验位在不同磁盘上不断更替；至少3块磁盘组成，磁盘利用率（n-1）n，一块硬盘损坏，将大幅消耗系统性能，造成宕机，应及时更换硬盘，性价比高</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/5-2.jpg" alt="enter image description here"></p><p>RAID01    先做RAID0,再做RAID1，至少4块磁盘组成，容错性较RAID10稍弱，空间利用率50%</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/wKioL1bpX-KSDT33AAC2vBgWLfg951.jpg" alt="enter image description here"></p><p>RAID10    先做RAID1,再做RAID0，容错性相较于RAID01更强，至少4块磁盘组成，空间利用率50%。生产中有条件情况下建议使用RAID10</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/10.jpg" alt="enter image description here"></p><p>RAID50    先做RAID5,再做RAID0，提供了接近RAID 10性能、可用性以及接近RAID 5成本的特性，具有较好的整体性价比，至少6块磁盘组成，空间利用率（n-2）n</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/50.jpg" alt="enter image description here"></p><p>JBOD        可用空间sum（S1,S2…），性能无提升，无冗余能力，至少需要2块磁盘，磁盘利用率100%</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/jb.jpg" alt="enter image description here"></p><p>RAID按实现方式的不同一般分为硬件RAID和软件RAID，生产环境中多数使用硬件RAID，在下面的实</p><p>验测试环境中我们使用软件RAID。</p><p>软件RAID<br>mdadm 命令   为软RAID提供管理界面</p><p>为空余磁盘添加冗余</p><p>结合内核中的md（multi devices）</p><p>RAID设备可命名为/dev/md0、/dev/md1、/dev/md2、/dev/md3等</p><p><code>dd if=/dev/zero  of=/dev/sdb1</code>             破坏文件系统</p><p><code>mdadm -C /dev/md0 -a yes  -l5 -n4 -x1  /dev/sd{b,c,d,e}1</code>     创建一个RAID5,包含4块硬盘，一块空闲盘</p><p><code>mdadm -D /dev/md0</code>                   查看raid信息</p><p><code>mkfs.ext4 /dev/md0 -L raid</code>     添加文件系统，添加卷标为raid</p><p>停用</p><p>umount /mnt/raid/</p><p>mdadm    -S  /dev/md0         禁用raid</p><p>-A              启用raid</p><p>模拟损坏硬盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm    /dev/md0 -f /dev/sdd1</span><br></pre></td></tr></table></figure><p>移除损坏硬盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm   /dev/md0 -r /dev/sdd1</span><br></pre></td></tr></table></figure><p>更换一个新硬盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm    /dev/md0 -a /dev/sda1</span><br></pre></td></tr></table></figure><p>拓展RAID一个硬盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -G /dev/md0 -n4 -a /dev/sdb3</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /etc/mdadm/conf</span><br></pre></td></tr></table></figure><p><code>mdadm -Ds /dev/md0 &gt; /etc/mdadm/conf</code>      保存配置文件</p><p>将来重启或停止raid服务不会出现找不到配置文件的情况</p><h4 id="二、LVM逻辑卷介绍及使用"><a href="#二、LVM逻辑卷介绍及使用" class="headerlink" title="二、LVM逻辑卷介绍及使用"></a>二、LVM逻辑卷介绍及使用</h4><p>   logical Volumes                                                  逻辑卷</p><ul><li>lvcreae  ↑                                                      创建逻辑卷  ↑</li></ul><p>Volime Group                                                     卷组</p><ul><li>vgcreate ↑                                                       创建卷组    ↑</li></ul><p>Physical Volumes                                              物理卷</p><ul><li>pvcreate ↑                                                     创建物理卷  ↑</li></ul><p>Linux Block Devices                                         Linux块设备</p><h5 id="pv管理工具"><a href="#pv管理工具" class="headerlink" title="pv管理工具"></a>pv管理工具</h5><p>显示物理卷</p><ul><li><p>pvs            简要</p></li><li><p>pvdisplay 详细</p></li></ul><p>创建卷组</p><ul><li>pvcreate  /dev/DEVICE</li></ul><h5 id="vg管理工具"><a href="#vg管理工具" class="headerlink" title="vg管理工具"></a>vg管理工具</h5><p>显示卷组</p><ul><li><p>vgs</p></li><li><p>vgdisplay</p></li></ul><p>创建卷组</p><ul><li>vgcreate [-s #[kKmMgGtTpPeE]] 卷组名 各分区物理路径</li></ul><h5 id="lv管理工具"><a href="#lv管理工具" class="headerlink" title="lv管理工具"></a>lv管理工具</h5><p>显示逻辑卷</p><ul><li><p>lvs</p></li><li><p>Lvdisplay</p></li></ul><p>创建逻辑卷</p><ul><li><p>lvcreate -L #[mMgGtT] -n 逻辑卷名 卷组名</p></li><li><p>lvcreate -l 60%VG -n mylv testvg</p></li><li><p>lvcreate -l 100%FREE -n yourlv testvg</p></li></ul><p>lvcreate </p><p>常用选项</p><ul><li><p>-c     指定chunk大小</p></li><li><p>-l      指定PE数创建逻辑卷，或[%{VG|FREE|ORIGIN}]</p></li><li><p>-L    指定大小创建逻辑卷</p></li><li><p>-n     指定逻辑卷名称</p></li><li><p>-p{r|rw}指定逻辑卷权限</p></li><li><p>-t      测试</p></li></ul><p>删除逻辑卷</p><ul><li>lvremove /dev/VG_NAME/LV_NAME</li></ul><p>重设文件系统大小</p><ul><li><p>fsadm [options] resize device [new_size[BKMGTEP]]</p></li><li><p>resize2fs [-f] [-F] [-M] [-P] [-p] device [new_size]</p></li></ul><p>LVM快照<br>快照是特殊的逻辑卷，它是在生成快照时存在的逻辑卷的准确拷贝</p><p>要注意快照不能替代备份作用，但可用于测试环境，在特殊情况下可代替备份效果。</p><p>快照生成时需要分配给它一定的空间，这些空间只有在原来的逻辑卷或者快照有所改变才会使用这些空间，建立快照的卷大小只需要原始逻辑卷的15%-20%就可以了，也可以使用lvextend放大快照空间要注意快照必须与被快照的LV在同一个卷组中，系统恢复时文件数量不能高于快照区的实际容量。</p><p>为现有逻辑卷创建快照与添加逻辑卷命令相同</p><p>lvcreate</p><p>创建快照常用选项：</p><ul><li><p>-l      指定PE数创建快照，或[%{VG|FREE|ORIGIN}]</p></li><li><p>-L    指定大小创建快照逻辑卷</p></li><li><p>-n     指定快照名称</p></li><li><p>-p{r|rw}指定快照权限，一般设为只读</p></li></ul><p>ext系列：</p><ul><li><p>lvcreate -n centoslv0-snapshot -s -L 1G -p r /dev/centos6lv0</p></li><li><p>lvdisplay</p></li><li><p>mkdir /mnt/snap</p></li><li><p>mount /dev/centos6vg0/centos6lv0-snapshot  /mnt/snap</p></li></ul><p>xfs文件系统：</p><ul><li><p>lvcreate -n centoslv0-snapshot -s -L 1G -p r /dev/lv0</p></li><li><p>lvdisplay</p></li><li><p>mkdir /mnt/snap</p></li><li><p>xfs文件系统不予许相同UUID设备进行挂载</p></li><li><p>mount -o nouuid  /dev/vg0/lv0-snopshot /mnt/lv0-snap</p></li></ul><p>恢复快照</p><ul><li><p>umount /mnt/snap/</p></li><li><p>umount /mnt/centos6lv0/</p></li><li><p>lvconvert  –merge  /dev/centos6vg0/centos6lv0-snapshot</p></li></ul><p>注：快照会在合并恢复后自动删除</p><p>删除快照</p><ul><li><p>umount /mnt/vg0/lv0</p></li><li><p>lvremove /dev/mnt/lv0-snap</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、RAID概念及管理&quot;&gt;&lt;a href=&quot;#一、RAID概念及管理&quot; class=&quot;headerlink&quot; title=&quot;一、RAID概念及管理&quot;&gt;&lt;/a&gt;一、RAID概念及管理&lt;/h4&gt;&lt;p&gt;RAID:Redundant Arrays of Inexpensi
      
    
    </summary>
    
    
      <category term="RAID" scheme="http://yoursite.com/tags/RAID/"/>
    
      <category term="LVM" scheme="http://yoursite.com/tags/LVM/"/>
    
  </entry>
  
  <entry>
    <title>交换分区swap管理及特殊介质的使用</title>
    <link href="http://yoursite.com/2018/04/25/%E4%BA%A4%E6%8D%A2%E5%88%86%E5%8C%BAswap%E7%AE%A1%E7%90%86%E5%8F%8A%E7%89%B9%E6%AE%8A%E4%BB%8B%E8%B4%A8%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/25/交换分区swap管理及特殊介质的使用/</id>
    <published>2018-04-25T12:00:00.000Z</published>
    <updated>2018-07-03T13:13:13.955Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、交换分区swap管理："><a href="#一、交换分区swap管理：" class="headerlink" title="一、交换分区swap管理："></a>一、交换分区swap管理：</h4><p>交换分区是系统RAM的补充，相当于Windows系统中的虚拟内存，当系统RAM不够用的时候将使用交换</p><p>分区来代替内存使用。</p><p>基本设置包括：</p><ul><li><p>创建交换分区或者文件</p></li><li><p>使用mkswap写入特殊签名</p></li><li><p>在/etc/fstab文件中添加适当的条目</p></li><li><p>使用swapon -a激活交换分区</p></li></ul><p>swapon                     启用交换分区</p><p>格式：swapon [OPTION]…[DEVICE]</p><ul><li><p>-a              激活所有交换分区</p></li><li><p>-p priority        指定优先级</p></li><li><p>/etc/fstab:pri=value</p></li></ul><p>swapoff [OPTION]…[DEVICE]       禁用指定交换分区</p><p>swap的优先级<br>可以指定swap分区0到32767的优先级，值越大优先级越高</p><p>系统默认会给没有指定的swap指定一个优先级，从-1开始，每加入一个新的没有指定优先级的swap，</p><p>会给这个优先级减一</p><p>先添加的swap的缺省优先级比较高，除非用户自己指定一个优先级，而用户</p><p>指定的优先级(是正数)永远高于核心缺省指定的优先级(是负数)</p><p>优化性能：分布存放，高性能磁盘存放</p><h5 id="场景1：增加一个新的swap分区"><a href="#场景1：增加一个新的swap分区" class="headerlink" title="场景1：增加一个新的swap分区"></a>场景1：增加一个新的swap分区</h5><h6 id="1-fdisk-dev-sdb-创建新的swap分区，tyep-82-Linux-swap"><a href="#1-fdisk-dev-sdb-创建新的swap分区，tyep-82-Linux-swap" class="headerlink" title="1.fdisk  /dev/sdb                                    创建新的swap分区，tyep=82=Linux swap"></a>1.fdisk  /dev/sdb                                    创建新的swap分区，tyep=82=Linux swap</h6><p>注：如果文件系统分区没有同步成功，需我们手动同步分区</p><p>CentOS5,7版本：partx   -a  /dev/sdb</p><p>CentOS7版本：partprobe  /dev/sdb</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/fdisk.png" alt="enter image description here"></p><h6 id="2-mkswap-dev-sdb1-L-swap-sdb2-添加swap文件系统"><a href="#2-mkswap-dev-sdb1-L-swap-sdb2-添加swap文件系统" class="headerlink" title="2.mkswap       /dev/sdb1 -L swap_sdb2                 添加swap文件系统"></a>2.mkswap       /dev/sdb1 -L swap_sdb2                 添加swap文件系统</h6><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/mkswap.png" alt="enter image description here"></p><h6 id="3-vim-etc-fstab"><a href="#3-vim-etc-fstab" class="headerlink" title="3.vim /etc/fstab"></a>3.vim /etc/fstab</h6><p>UUID=xxx          swap    swap        defaults   0       0<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/vim-1.png" alt="enter image description here"></p><h6 id="4-swapon-a-使swap分区生效"><a href="#4-swapon-a-使swap分区生效" class="headerlink" title="4.swapon -a                                       使swap分区生效"></a>4.swapon -a                                       使swap分区生效</h6><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/swapona.png" alt="enter image description here"></p><h6 id="5-swapon-s-查看是否生效"><a href="#5-swapon-s-查看是否生效" class="headerlink" title="5.swapon -s                                       查看是否生效"></a>5.swapon -s                                       查看是否生效</h6><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/swapons.png" alt="enter image description here"></p><h5 id="场景2：使用一个文件当做新的swap分区"><a href="#场景2：使用一个文件当做新的swap分区" class="headerlink" title="场景2：使用一个文件当做新的swap分区"></a>场景2：使用一个文件当做新的swap分区</h5><ul><li><p>1.dd if=/dev/zero of=/swapfile  bs=1024M  count=2      创建一个2G文件</p></li><li><p>2.mkswap     /swapfile                                                         添加文件的文件系统为swap</p></li><li><p>blkid  /swapfile                                                                      查看文件系统添加成功</p></li><li><p>3.vim /etc/fstab                                                                   修改/etc/fstab文件</p></li><li><p>/swapfile       swap       swap      defaults      0       0 注：挂载文件名，不能使用UUID  </p></li><li><p>4.swapon -a</p></li><li><p>5.swapon -s</p></li></ul><h4 id="二、Linux系统光盘使用"><a href="#二、Linux系统光盘使用" class="headerlink" title="二、Linux系统光盘使用"></a>二、Linux系统光盘使用</h4><p>光盘在Linux图形环境下将自动挂载</p><p>否则就必须手动进行挂</p><p>挂载命令：   mount  /dev/cdrom   /mnt/</p><p>ejetc                          卸载或弹出光盘</p><p>创建ISO文件</p><pre><code>cp  -a  /dev/cdrom   /root/centos7.isomkisofs  -r  -o  /root/etc.iso     /etc</code></pre><p>刻录光盘</p><pre><code>wodim     -v   -eject   centos.iso</code></pre><p>mkisofs -r -o /root/etc.iso    /etc</p><p>这种制作光盘方法可作为yum源，但不可做启动光盘</p><p>centos官网<a href="https://wiki.centos.org" target="_blank" rel="noopener">https://wiki.centos.org</a>  可搜索mkdvdiso.sh脚本</p><p>即可引导又可当yum源</p><h4 id="三、Linux系统USB介质使用"><a href="#三、Linux系统USB介质使用" class="headerlink" title="三、Linux系统USB介质使用"></a>三、Linux系统USB介质使用</h4><p>查看USB设备是否识别</p><p>lsusb</p><p>被内核探测为SCSI设备</p><p>/dev/sdaX、/dev/sdbX、或类似的设备文件</p><p>在图形环境中自动挂载</p><p>图标在[计算机]窗口中创建</p><p>挂载在/run/media/<user>/<label></label></user></p><p>手动挂载</p><p>mount /dev/sdb1   /mnt</p><h4 id="四、强大的dd工具"><a href="#四、强大的dd工具" class="headerlink" title="四、强大的dd工具"></a>四、强大的dd工具</h4><p>dd命令：convert and copy a file</p><p>用法：</p><ul><li><p>dd if=/PATH/FROM/SRC    of=/PATH/TO/DEST</p></li><li><p>bs=#：block size, 复制单元大小</p></li><li><p>count=#：                复制多少个bs</p></li><li><p>of=file             写到所命名的文件而不是到标准输出</p></li><li><p>if=file               从所命名文件读取而不是从标准输入</p></li><li><p>bs=size            指定块大小（既是是ibs也是obs)</p></li><li><p>ibs=size           一次读size个byte</p></li><li><p>obs=size                  一次写size个byte</p></li><li><p>cbs=size                   一次转化size个byte</p></li><li><p>skip=blocks             从开头忽略blocks个ibs大小的块</p></li><li><p>seek=blocks            从开头忽略blocks个obs大小的块</p></li><li><p>count=n                   只拷贝n个记录</p></li><li><p>conv=conversion[,conversion…] 用指定的参数转换文件</p></li></ul><p>转换参数:</p><ul><li><p>ascii                          转换 EBCDIC 为 ASCII</p></li><li><p>ebcdic                      转换 ASCII 为 EBCDIC</p></li><li><p>lcase                         把大写字符转换为小写字符</p></li><li><p>ucase                       把小写字符转换为大写字符</p></li><li><p>nocreat           不创建输出文件</p></li><li><p>noerror           出错时不停止</p></li><li><p>notrunc           不截短输出文件</p></li><li><p>sync                          把每个输入块填充到ibs个字节，不足部分用空(NUL)字符补齐</p></li></ul><p>备份MBR：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/sda of=/tmp/mbr.bak bs=512 count=1</span><br></pre></td></tr></table></figure><p>破坏MBR中的bootloader：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=/dev/sda bs=64 count=1 seek=446</span><br></pre></td></tr></table></figure><p>有一个大与2K的二进制文件fileA。现在想从第64个字节位置开始读取，需要读取的大小是128Byts。</p><p>又有fileB, 想把上面读取到的128Bytes写到第32个字节开始的位置，替换128Bytes，实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=fileA of=fileB bs=1 count=128 skip=63 seek=31 conv=notrunc</span><br></pre></td></tr></table></figure><p>备份：</p><p><code>dd if=/dev/sdx of=/dev/sdy</code>                     将本地的/dev/sdx整盘备份到/dev/sdy</p><p><code>dd if=/dev/sdx of=/path/to/image</code>                 将/dev/sdx全盘数据备份到指定路径的image文件</p><p><code>dd if=/dev/sdx | gzip &gt;/path/to/image.gz</code>   备份/dev/sdx全盘数据，并利用gzip压缩，保存到指定路径</p><p>恢复：</p><p><code>dd if=/path/to/image of=/dev/sdx</code>                 将备份文件恢复到指定盘</p><p><code>gzip -dc /path/to/image.gz | dd of=/dev/sdx</code>       将压缩的备份文件恢复到指定盘</p><p>拷贝内存资料到硬盘</p><p><code>dd if=/dev/mem of=/root/mem.bin bs=1024</code>                将内存里的数据拷贝到root目录下的mem.bin文件</p><p>从光盘拷贝iso镜像</p><p><code>dd if=/dev/cdrom of=/root/cd.iso</code>                 拷贝光盘数据到root文件夹下，并保存为cd.iso文件</p><p>销毁磁盘数据，文件系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/urandom of=/dev/sda1</span><br></pre></td></tr></table></figure><p>利用随机的数据填充硬盘，在某些必要的场合可以用来销毁数据，执行此操作以后，/dev/sda1将无法挂</p><p>载，创建和拷贝操作无法执行。</p><p>得到最恰当的block size</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero bs=1024 count=1000000 of=/root/1Gb.file</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero bs=2048 count=500000 of=/root/1Gb.file</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero bs=4096 count=250000 of=/root/1Gb.file</span><br></pre></td></tr></table></figure><p>通过比较dd指令输出中命令的执行时间，即可确定系统最佳的block size大小</p><p>测试硬盘写速度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=/root/1Gb.file bs=1024 count=1000000</span><br></pre></td></tr></table></figure><p>测试硬盘读速度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/root/1Gb.file bs=64k | dd of=/dev/null</span><br></pre></td></tr></table></figure><p>修复硬盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/sda of=/dev/sda</span><br></pre></td></tr></table></figure><p>当硬盘较长时间（比如1,2年）放置不使用后，磁盘上会产生消磁点。当磁头读</p><p>到这些区域时会遇到困难，并可能导致I/O错误。当这种情况影响到硬盘的第一</p><p>个扇区时，可能导致硬盘报废。上边的命令有可能使这些数据起死回生,且这个</p><p>过程是安全高效的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、交换分区swap管理：&quot;&gt;&lt;a href=&quot;#一、交换分区swap管理：&quot; class=&quot;headerlink&quot; title=&quot;一、交换分区swap管理：&quot;&gt;&lt;/a&gt;一、交换分区swap管理：&lt;/h4&gt;&lt;p&gt;交换分区是系统RAM的补充，相当于Windows系统
      
    
    </summary>
    
    
      <category term="swap" scheme="http://yoursite.com/tags/swap/"/>
    
      <category term="分区" scheme="http://yoursite.com/tags/%E5%88%86%E5%8C%BA/"/>
    
  </entry>
  
  <entry>
    <title>搭建自己的yum源服务器</title>
    <link href="http://yoursite.com/2018/04/20/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84yum%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2018/04/20/搭建自己的yum源服务器/</id>
    <published>2018-04-20T15:00:00.000Z</published>
    <updated>2018-06-26T11:33:58.139Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>通过yum安装程序包最重要的一步就是指定yum仓库，今天我来教大家如何搭建自己的yum源服务器。  </p></blockquote><h3 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h3><p>准备两台Linux服务器，本文所用的服务器为CentOS6.9，及CentOS7.4服务器各一台，将演示CentOS7服务器作为yum源服务器，用CentOS6服务器进行yum访问。</p><h3 id="二、开启CentOS7自动挂载光盘服务"><a href="#二、开启CentOS7自动挂载光盘服务" class="headerlink" title="二、开启CentOS7自动挂载光盘服务"></a>二、开启CentOS7自动挂载光盘服务</h3><p>我们知道在CentOS6版本系统中，有一个“神奇”的目录/misc可实现光盘的自动挂载，但在CentOS7版本中默认并不支持此服务，需要我们进行手动安装autofs服务</p><ul><li><p>yum install autofs                             安装autofs包</p></li><li><p>systemctl start autofs                       开启自动挂载</p></li><li><p>systemctl enable autofs                    下次开机默认开启自动挂载</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%AE%89%E8%A3%85autofs.png" alt="enter image description here"></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%89%93%E5%BC%80autofs.png" alt="enter image description here"></p><h3 id="三、关闭防火墙"><a href="#三、关闭防火墙" class="headerlink" title="三、关闭防火墙"></a>三、关闭防火墙</h3><p>要注意CentOS6版本与CentOS7版本关闭防火墙的命令有所不同：</p><p>CentOS6：</p><ul><li><p>service iptables stop                      关闭防火墙</p></li><li><p>chkconfig iptables off                   下次启动时自动关闭防火墙</p></li></ul><p>CentOS7：</p><ul><li><p>systemctl stop firewalld                关闭防火墙</p></li><li><p>systemctl disable firewalld          下次启动时自动关闭防火墙</p></li></ul><h3 id="四、安装httpd服务"><a href="#四、安装httpd服务" class="headerlink" title="四、安装httpd服务"></a>四、安装httpd服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%AE%89%E8%A3%85httpd.png" alt="enter image description here"></p><h3 id="五、开启httpd服务"><a href="#五、开启httpd服务" class="headerlink" title="五、开启httpd服务"></a>五、开启httpd服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service httpd start</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%BC%80%E5%90%AFhttpd%E6%9C%8D%E5%8A%A1.png" alt="enter image description here"></p><p>将本机ip地址输入浏览器，不出意外就能访问我们搭建的测试页面啦！</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/httpd.png" alt="enter image description here"></p><h3 id="六、创建网页目录"><a href="#六、创建网页目录" class="headerlink" title="六、创建网页目录"></a>六、创建网页目录</h3><p>打开httpd包的文件列表，我们看到/var/www/html的文件夹，这里就是存放网页内容的目录了</p><ul><li><p>rpm -ql httpd                        查看httpd包的文件列表</p></li><li><p>cd /var/www/html              进入html目录</p></li><li><p>mkdir -pv centos/{6,7}/os/x86_64/                    创建挂载6，7yum源的目录</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="enter image description here"></p><h3 id="七、挂载yum源"><a href="#七、挂载yum源" class="headerlink" title="七、挂载yum源"></a>七、挂载yum源</h3><ul><li><p>mount      /dev/sr0       /var/www/centos/7/os/x86_64/           将6光盘挂载至6网络下</p></li><li><p>mount      /dev/sr1        /var/www/centos/6/os/x86_64/           将7光盘挂载至7目录下</p></li></ul><p>此时，在浏览器输入：ipadress/centos/版本号/os/x86_64/  就能看到我们挂载的yum源了</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/6-10.png" alt="enter image description here"></p><h3 id="八、在CentOS搭建yum仓库"><a href="#八、在CentOS搭建yum仓库" class="headerlink" title="八、在CentOS搭建yum仓库"></a>八、在CentOS搭建yum仓库</h3><ul><li><p>[test]                     仓库名</p></li><li><p>name=test           描述名，不设置不影响包的安装，但会报错</p></li><li><p>baseurl=<a href="http://172.20.102.79/centos/6/os/x86_64/" target="_blank" rel="noopener">http://172.20.102.79/centos/6/os/x86_64/</a>                    设置仓库地址链接</p></li><li><p>gpgcheck=0         默认为1，表示数字密钥安全检查，0表示不进行安全检查</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E5%AE%B6yum%E5%BA%93.png" alt="enter image description here"></p><p>九、更新yum仓库</p><ul><li><p>yum clean all          清空全部yum缓存</p></li><li><p>yum repolist           显示yum仓库列表</p></li></ul><p>此时我们看到test仓库下已经更新出有6706个包列表，现在我们就可以通过自己搭建的yum源服务器来安装程序包了！</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/yum%E8%AE%BF%E9%97%AE.png" alt="enter image description here"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;通过yum安装程序包最重要的一步就是指定yum仓库，今天我来教大家如何搭建自己的yum源服务器。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一、前期准备&quot;&gt;&lt;a href=&quot;#一、前期准备&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="yum" scheme="http://yoursite.com/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统磁盘及文件系统管理</title>
    <link href="http://yoursite.com/2018/04/20/Linux%E7%B3%BB%E7%BB%9F%E7%A3%81%E7%9B%98%E5%8F%8A%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/04/20/Linux系统磁盘及文件系统管理/</id>
    <published>2018-04-20T15:00:00.000Z</published>
    <updated>2018-06-26T12:03:07.291Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、磁盘基本概念"><a href="#一、磁盘基本概念" class="headerlink" title="一、磁盘基本概念"></a>一、磁盘基本概念</h3><h4 id="设备文件："><a href="#设备文件：" class="headerlink" title="设备文件："></a>设备文件：</h4><p>Linux中一切皆文件：open（），read（），write（），close（）</p><h4 id="设备类型："><a href="#设备类型：" class="headerlink" title="设备类型："></a>设备类型：</h4><ul><li><p>块设备：block，存储单位“块”，磁盘</p></li><li><p>字符设备：char，存储单位“字符”，键盘</p></li><li><p>设备文件：关联至一个设备驱动程序，进而能够跟与之对应硬件设备进行通信</p></li></ul><h4 id="设备号码："><a href="#设备号码：" class="headerlink" title="设备号码："></a>设备号码：</h4><ul><li><p>主设备号：maj，标识设备类型</p></li><li><p>次设备号：min，标识同一类型下的不同设备</p></li></ul><h4 id="磁盘结构"><a href="#磁盘结构" class="headerlink" title="磁盘结构"></a>磁盘结构</h4><p>并行：</p><ul><li><p>IDE：133MB/s</p></li><li><p>SCSI：640MB/s</p></li></ul><p>串口：</p><ul><li><p>SATA：6Gbps</p></li><li><p>SAS：6Gbps</p></li><li><p>USB：480MB/s</p></li></ul><h4 id="硬盘："><a href="#硬盘：" class="headerlink" title="硬盘："></a>硬盘：</h4><p> 机械硬盘（HDD）：传统普通硬盘，主要由：盘片，磁头，马达等组成</p><p>优势：相比固态硬盘，价格低，容量大，使用寿命长</p><p>固态硬盘（SSD）：用固态电子存储芯片阵列而制成的硬盘。</p><p>优势：相比机械硬盘，防震抗摔，传输速率，功率，噪音有优势，目前SSD不能完全取代HHD</p><h4 id="磁盘设备文件命名："><a href="#磁盘设备文件命名：" class="headerlink" title="磁盘设备文件命名："></a>磁盘设备文件命名：</h4><ul><li><p>/dev/DEV_FILE</p></li><li><p>SCSI,SATA,SAS,IDE,USB：      /dev/sd</p></li><li><p>虚拟磁盘：             /dev/vd</p></li><li><p>不同磁盘标识：            a-z，aa，ab…</p></li><li><p>/dev/sda,/dev/sdb</p></li><li><p>同一设备的不同分区：        1,2，…</p></li><li><p>/dev/sda1,/dev/sda5</p></li></ul><p>注：在脚本中，尽量避免使用磁盘设备文件名诸如sda，名称不稳定，应使用UUID</p><h4 id="磁盘存储术语："><a href="#磁盘存储术语：" class="headerlink" title="磁盘存储术语："></a>磁盘存储术语：</h4><ul><li><p>head：磁头；                 8bit寻址 2**8=256</p></li><li><p>track：磁道；</p></li><li><p>ctlinder：柱面                 10bit寻址       2**10=1024</p></li><li><p>sector：扇区          6bit寻址 2**6=64</p></li></ul><ul><li>chs：磁盘三维。柱面、磁头、扇区</li></ul><p>一个扇区共有512Byte，CHS可定义255<em>63</em>1024个扇区信息</p><p>echo 512<em>63</em>1024*255/1024/1024 | bc</p><p>8032M</p><p>CHS：老的命名方式，不超过8G</p><p>LBA：逻辑的块寻址，超过8G</p><h3 id="二、磁盘分区管理"><a href="#二、磁盘分区管理" class="headerlink" title="二、磁盘分区管理"></a>二、磁盘分区管理</h3><h4 id="我们知道使用磁盘有三个步骤："><a href="#我们知道使用磁盘有三个步骤：" class="headerlink" title="我们知道使用磁盘有三个步骤："></a>我们知道使用磁盘有三个步骤：</h4><ul><li><p>1、创建分区</p></li><li><p>2、创建文件系统：格式化</p></li><li><p>3、挂载：分配目录名</p></li></ul><h4 id="为什么要对磁盘进行分区？"><a href="#为什么要对磁盘进行分区？" class="headerlink" title="为什么要对磁盘进行分区？"></a>为什么要对磁盘进行分区？</h4><ul><li><p>1、优化I/O性能</p></li><li><p>2、实现磁盘空间配额限制</p></li><li><p>3、提高修复速度</p></li><li><p>4、隔离系统和程序</p></li><li><p>5、安装多个OS</p></li><li><p>6、采用不同的文件系统</p></li></ul><h4 id="分区类型"><a href="#分区类型" class="headerlink" title="分区类型"></a>分区类型</h4><p>两种分区方式：MBR，GPT</p><h5 id="MBR：Master-Boot-Record"><a href="#MBR：Master-Boot-Record" class="headerlink" title="MBR：Master Boot Record"></a>MBR：Master Boot Record</h5><p>诞生于1982年，使用32位表示扇区数，分区不能超过2T</p><p>MBR如何分区：按柱面</p><p>0磁道0扇区：512bytes</p><p>446bytes：boot loader</p><p>64bytes：分区表</p><p>16bytes：标识一个分区（最多4个分区）</p><p>2bytes：55AA（分区标识位）</p><p>支持4个主分区；3个主分区+1扩展分区（N个逻辑分区）</p><p>注：生产中最好给MBR分区表进行备份</p><p>BIOS+MBR</p><p>传统BIOS运行流程：</p><p>开机–&gt;BIOS初始化–&gt;BIOS自检–&gt;引导操作系统–&gt;进入系统</p><h5 id="GPT：GUID（Globals-Unique-Identifiers）"><a href="#GPT：GUID（Globals-Unique-Identifiers）" class="headerlink" title="GPT：GUID（Globals Unique Identifiers）"></a>GPT：GUID（Globals Unique Identifiers）</h5><p>支持128个分区，使用64位，支持8Z（512Byte/block）,64Z（4096Byte/block）</p><p>使用128位的通用唯一识别码UUID（Universally Unique Identifier）表示磁盘和</p><p>分区表自动备份在头和尾两份，并有CRC校验位</p><p>UEFI（同一扩展固件接口）：硬件支持GPT，使操作系统启动</p><p>分区表</p><p>MBR保护+GPT分区表+GPT划分数据+备份</p><p>UEFI+GPT</p><p>UERI运行流程</p><p>开机–&gt;UEFI初始化–&gt;引导操作系统–&gt;进入系统</p><h4 id="管理分区"><a href="#管理分区" class="headerlink" title="管理分区"></a>管理分区</h4><p>列出块设备：</p><p>lsblk</p><h4 id="创建分区使用："><a href="#创建分区使用：" class="headerlink" title="创建分区使用："></a>创建分区使用：</h4><ul><li><p>fdisk                  创建MBR分区</p></li><li><p>gdisk                 创建GPT分区</p></li><li><p>parted              高级分区操作</p></li></ul><h5 id="parted命令"><a href="#parted命令" class="headerlink" title="parted命令"></a>parted命令</h5><p>parted的操作都是实时生效的，小心使用</p><p>格式：parted[option]…[设备[命令[参数]…]…]</p><ul><li><p>parted /dev/sdb mklabel gpt|msdos              设置分区类型GPT或MBR</p></li><li><p>parted /dev/sdb print                               打印sdb分区列表信息</p></li><li><p>parted /dev/sdb mkpart primary 1 200 （默认M）  设置sdb分区大小</p></li><li><p>parted /dev/sdb rm 1                                删除sdb1分区</p></li><li><p>parted -l                                     列出分区信息</p></li></ul><h5 id="分区工具fdisk和gdisk"><a href="#分区工具fdisk和gdisk" class="headerlink" title="分区工具fdisk和gdisk"></a>分区工具fdisk和gdisk</h5><p>fdisk -l[-u][device…]       查看分区</p><p>fdisk /dev/sdb                 管理分区（交互式）</p><p>子命令：</p><ul><li><p>p               显示分区列表</p></li><li><p>t                更改分区类型（数据将丢失）</p></li><li><p>n               创建新分区</p></li><li><p>d               删除分区</p></li><li><p>t                添加设备标签</p></li><li><p>v                校验分区</p></li><li><p>u               转换单位</p></li><li><p>w              保存并退出</p></li><li><p>q               不保存并退出</p></li></ul><p>注：可使用重定向和多行重定向echo -e “n\np\n\n\n+2G\nw\n” | fdisk /dev/sdc</p><h4 id="同步分区表"><a href="#同步分区表" class="headerlink" title="同步分区表"></a>同步分区表</h4><ul><li><p>cat/proc/partations        查看内核是否已经识别新的分区</p></li><li><p>partprobe                 同步分区表（centos5,7可用）</p></li><li><p>partx -a  /dev/sda         增加分区同步分区表（centos6可用）时使用；</p></li><li><p>partx -d –nr M-N /dev/sda    删除分区同步分区表（centos6可用）时使用；</p></li></ul><h3 id="三、文件系统管理"><a href="#三、文件系统管理" class="headerlink" title="三、文件系统管理"></a>三、文件系统管理</h3><p>所谓文件系统，它是操作系统中藉以组织、存储和命名文件的结构。磁盘或分区和它所包括的文件系统的不同是很重要的，大部分应用程序都基于文件系统进行操作，在不同种文件系统上是不能工作的。</p><h4 id="文件系统类型"><a href="#文件系统类型" class="headerlink" title="文件系统类型"></a>文件系统类型</h4><ul><li><p>Linux文件系统：ext2，ext3，ext4，xfs，btrfs，reiserfs，jfs，swap</p></li><li><p>光盘：iso9660</p></li><li><p>Windows：FAT32,exFAT,NTFS</p></li><li><p>Unix：FFS（fast），UFS（unix），JFS2</p></li><li><p>网络文件系统：NFS，CIFS</p></li><li><p>集群文件系统：GFS2,OCFS2</p></li><li><p>分布式文件系统：fastfs,ceph,moosefs,mogilefs,glusterfs,Lustre</p></li><li><p>RAW：未经处理或者未经格式化产生的文件系统（性能好，但不便于管理）</p></li></ul><p>根据文件系统是否支持“journal（日志）”功能可分为：</p><ul><li><p>日志型文件系统：ext3，ext4，xfs，…（牺牲读取性能，防止数据文件破坏）</p></li><li><p>非日志型文件系统：ext2，vfat（易造成数据文件破坏）</p></li></ul><p>文件系统的组成部分：</p><p>内核中的模块：ext4，xfs，vfat</p><p>用户空间的管理工具：mkfs.ext4，mkfs.xfs，mkfs.vfat</p><p>Linux的虚拟文件系统：VFS</p><p>查看支持的文件系统：cat /proc/filesystems</p><h4 id="创建文件系统："><a href="#创建文件系统：" class="headerlink" title="创建文件系统："></a>创建文件系统：</h4><p>mkfs命令两种用法：</p><h5 id="mkfs-FS-TYPE-dev-DEVICE-建议使用此用法，直观不易出错"><a href="#mkfs-FS-TYPE-dev-DEVICE-建议使用此用法，直观不易出错" class="headerlink" title="mkfs.FS_TYPE  /dev/DEVICE 建议使用此用法，直观不易出错"></a>mkfs.FS_TYPE  /dev/DEVICE 建议使用此用法，直观不易出错</h5><ul><li><p>ext4</p></li><li><p>xfs</p></li><li><p>btrfs</p></li><li><p>vfat</p></li></ul><h5 id="mkfs-t-FS-TYPE-dev-DEVICE"><a href="#mkfs-t-FS-TYPE-dev-DEVICE" class="headerlink" title="mkfs -t FS_TYPE /dev/DEVICE"></a>mkfs -t FS_TYPE /dev/DEVICE</h5><p>-L ‘LABEL’                 设定卷标（分区标签）</p><h5 id="mke2fs-ext系统文件系统专用的管理工具"><a href="#mke2fs-ext系统文件系统专用的管理工具" class="headerlink" title="mke2fs                                 ext系统文件系统专用的管理工具"></a>mke2fs                                 ext系统文件系统专用的管理工具</h5><ul><li><p>-t{ext2|ext3|ext4} 创建文件系统类型</p></li><li><p>-b{1024|2048|4096}      设定block块的大小</p></li><li><p>-i #                     为数据空间每多少字节创建一个inode，此大小不应小于block大小</p></li><li><p>-L                       添加卷标签（建议使用挂载点作卷标）</p></li><li><p>-N #                   指定分区中创建#个inode</p></li><li><p>-l                        一个inode记录占用磁盘空间的大小，128-4096</p></li><li><p>-m #                          默认5%，管理员用户预留空间占总空间百分百</p></li></ul><p>文件系统标签LABEL</p><p>它是指向设备的另一种方法，与设备无关</p><h5 id="blkid-块设备属性信息查看"><a href="#blkid-块设备属性信息查看" class="headerlink" title="blkid                                   块设备属性信息查看"></a>blkid                                   块设备属性信息查看</h5><p>格式：blkid [option]…[DEVICE]</p><ul><li><p>-U UUID                    根据指定UUID来查找对应设备</p></li><li><p>-L LABEL           根据指定卷标来查找对应设备</p></li></ul><h5 id="e2label：管理ext系列文件系统的LABEL卷标"><a href="#e2label：管理ext系列文件系统的LABEL卷标" class="headerlink" title="e2label：管理ext系列文件系统的LABEL卷标"></a>e2label：管理ext系列文件系统的LABEL卷标</h5><p>格式：e2label DEVICE[LABEL]</p><h5 id="findfs-查找分区"><a href="#findfs-查找分区" class="headerlink" title="findfs                                  查找分区"></a>findfs                                  查找分区</h5><p>格式：findfs [option] LABEL = <label> 根据卷标查找</label></p><p>   findfs [option] UUID  = <uuid>        根据UUID查找</uuid></p><h5 id="tune2fs-重新设定ext系列文件系统可调整参数的值"><a href="#tune2fs-重新设定ext系列文件系统可调整参数的值" class="headerlink" title="tune2fs                              重新设定ext系列文件系统可调整参数的值"></a>tune2fs                              重新设定ext系列文件系统可调整参数的值</h5><ul><li><p>-l                        查看指定文件系统超级块信息</p></li><li><p>-L ‘LABEL’                 修改卷标</p></li><li><p>-m #                  修改预留给管理员空间的百分百</p></li><li><p>-j                        将ext2升级到ext3</p></li><li><p>-O                      文件系统属性启用或禁用，-O ^has_journal</p></li><li><p>-o                      调整文件系统的默认挂载选项，-o^acl</p></li><li><p>-U UUID                    修改UUID号</p></li></ul><h5 id="dumpe2fs"><a href="#dumpe2fs" class="headerlink" title="dumpe2fs"></a>dumpe2fs</h5><p>块分组管理，32768</p><p>超级块（superblock）<br>dumpe2fs       /dev/sda1        查看分区下所有超级块</p><p>-h              查看超级块信息</p><p>tune2fs             -l               查看超级块信息</p><p>超级块时存储文件系统的大小、有多少是空的和已经填满的占多少，以及它们各自的总数和其他诸如此类的信息。</p><p>要使用一个分区来进行数据访问，那么第一个要访问的就是超级块，由此可见超级块的重要性。</p><p>超级块占用第一号物理块，是文件系统的控制块。超级块包括：文件系统的大小、空闲块数目、空闲块索引表、空</p><p>闲i节点数目、空闲i节点索引表、封锁标记等。超级块时系统为文件分配存储空间、回收存储空间的依据。</p><p>所以，为了防止超级块数据损坏，就需要对超级块数据进行备份，以便于损坏时进行修复。</p><h4 id="文件系统检测和修复"><a href="#文件系统检测和修复" class="headerlink" title="文件系统检测和修复"></a>文件系统检测和修复</h4><p>常发生于死机或者非正常关机之后</p><p>挂载为文件系统标记为”no clean”</p><p>注意：一定不要在挂载状态下修复或检测，否则数据将破坏！</p><h5 id="fsck-文件系统检查"><a href="#fsck-文件系统检查" class="headerlink" title="fsck                                   文件系统检查"></a>fsck                                   文件系统检查</h5><p>fsck.FS_type</p><ul><li><p>fsck -t FS_type</p></li><li><p>-p                       自动修复错误</p></li><li><p>-r                       交互式修复错误</p></li></ul><p>注：FS_TYPE一定要与分区上已设置的文件系统类型相同</p><h5 id="e2fsck-ext系列文件专用的检测修复工具"><a href="#e2fsck-ext系列文件专用的检测修复工具" class="headerlink" title="e2fsck                                ext系列文件专用的检测修复工具"></a>e2fsck                                ext系列文件专用的检测修复工具</h5><ul><li><p>-y                       自动回答为yes</p></li><li><p>-f                       强制修</p></li></ul><h3 id="四、设备挂载管理"><a href="#四、设备挂载管理" class="headerlink" title="四、设备挂载管理"></a>四、设备挂载管理</h3><p>挂载：把额外的文件系统与根文件系统现场的目录建立起关联关系，进而使得此目录</p><p>作为其他文件访问入口的行为</p><p>一个挂载点只能挂载一个设备，但一个设备可挂载多个挂载点</p><p>挂载点建议要是空目录，否则该目录下原有文件将被隐藏，变为垃圾文件</p><p>卸载：为解除此关联关系的过程</p><p>把设备关联挂载点：mount Point</p><p>   monut</p><p>卸载时：可使用设备，也可使用挂载点</p><p>   umount</p><h4 id="挂载命令："><a href="#挂载命令：" class="headerlink" title="挂载命令："></a>挂载命令：</h4><p>通过查看/etc/mtab文件显示当前已挂载的所有设备</p><p>mount</p><p>格式：mount [-fnrsvw] [-t vfstype] [-o options] device  dir</p><p>device                       指明要挂载的设备</p><ul><li><p>（1）设备文件：例如dev/sda2</p></li><li><p>（2）卷标：-L ‘LABEL’，例如-L ‘MYDATA’</p></li><li><p>（3）UUID，-U ‘UUID’，例如-U ’35bfb8f8-1c9a-4f67-b8fe-a7edb84c4780’</p></li><li><p>（4）伪文件系统名称：proc，sysfs，devtmpfs，configfs</p></li></ul><p>dir                      挂载点</p><p>事先存在；建议使用空目录</p><p>进程正在使用中的设备无法被卸载</p><p>option：</p><ul><li><p>-t                       指定要挂载的设备上的文件系统类型</p></li><li><p>-r                       readontlt，只读挂载</p></li><li><p>-w                      r+w，读写挂载（默认）</p></li><li><p>-n                       centos6隐藏挂载，不更新/etc/mtab,mount不可见，cat /proc/mounts可见</p></li><li><p>-a                       自动挂载所有支持自动挂载的设备</p></li><li><p>-L ‘LABEL’                 以卷标指定挂载设备</p></li><li><p>-U ‘UUID’                  以UUID指定要挂载的设备</p></li><li><p>-B，–bind                绑定目录到另一个设备上。类似于软连接</p></li></ul><ul><li><p>-o options：(挂载文件系统的选项)，多个选项使用逗号分隔</p></li><li><p>async                         异步模式（默认模式）</p></li><li><p>sync                  同步模式,内存更改时，同时写磁盘</p></li><li><p>atime/noatime                包含目录和文件（是否更新atime，默认更新）</p></li><li><p>diratime/nodiratime       目录的访问时间戳</p></li><li><p>auto/noauto            是否支持自动挂载,是否支持-a选项</p></li><li><p>exec/noexec            是否支持将文件系统上运行应用程序</p></li><li><p>dev/nodev                是否支持在此文件系统上使用设备文件</p></li><li><p>suid/nosuid              是否支持suid和sgid权限</p></li><li><p>remount                   重新挂载</p></li><li><p>ro                      只读</p></li><li><p>rw                      读写</p></li><li><p>user/nouser             是否允许普通用户挂载此设备，/etc/fstab使用</p></li><li><p>acl                     启用此文件系统上的acl功能</p></li><li><p>loop                使用loop设备，把文件挂载目录，模拟设备</p></li></ul><p>默认：rw，suid，dev，exec，auto，nouser，async</p><h4 id="卸载命令："><a href="#卸载命令：" class="headerlink" title="卸载命令："></a>卸载命令：</h4><p>查看挂载情况：</p><p>findmnt   MOUNT_POINT|DEVICE</p><p>查看正在访问指定文件系统的进程：</p><p>lsof MONUT_POINT</p><pre><code>fuser  -v  MOUNT_POINT</code></pre><p>终止所有在正访问指定的文件系统的进程</p><p>   fuser  -km MONUT_POINT</p><p>卸载：</p><p>umount   DEVICE</p><pre><code>umount   MOUNT_POINT</code></pre><p>挂载点和/etc/fstab<br>配置文件系统体系</p><p>被mount、fsck和其他程序使用</p><p>系统重启时保留文件系统体系</p><p>可以在设备栏使用文件系统卷标</p><p>使用mount -a 命令挂载/etc/fstab中的所有文件系统</p><p>/etc/fstab        每行定义一个要挂载的文件系统<br>设备或伪文件系统    挂载点   文件系统类型   挂载选项   备份间隔时间{0|1|2}   文件系统检查{0|1}</p><p>要挂载的设备或伪文件系统</p><p>设备文件</p><ul><li><p>LABEL：LABEL=””</p></li><li><p>UUID：UUID=””</p></li></ul><p>伪文件系统名称：proc，sysfs</p><p>挂载点</p><p>文件系统类型</p><p>挂载选项：default</p><p>转储频率：0：不做备份 ； 1：每条转储 ； 2：每隔一天转储 ；</p><p>自检次序：0：不自检 ； 1：首先自检；一般只有rootfs才用1</p><p>一些特殊文件设备的挂载永久生效的设置：<br>vim /etc/fstab</p><ul><li><p>/root/p1  /mnt/p1          ext4           loop            0    0         挂载普通文件</p></li><li><p>/mnt/cdrom    /mnt/cdrom    iso9660    defaults      0    0      挂载光盘</p></li><li><p>/boot                /mnt/boot      none          bind         0    0      挂载目录到目录下</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、磁盘基本概念&quot;&gt;&lt;a href=&quot;#一、磁盘基本概念&quot; class=&quot;headerlink&quot; title=&quot;一、磁盘基本概念&quot;&gt;&lt;/a&gt;一、磁盘基本概念&lt;/h3&gt;&lt;h4 id=&quot;设备文件：&quot;&gt;&lt;a href=&quot;#设备文件：&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="文件系统" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="磁盘" scheme="http://yoursite.com/tags/%E7%A3%81%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统软件包管理介绍</title>
    <link href="http://yoursite.com/2018/04/20/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2018/04/20/Linux系统软件包管理介绍/</id>
    <published>2018-04-20T14:00:00.000Z</published>
    <updated>2018-06-08T13:00:18.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Linux发行版中附带有成千上万的可用包，其中包括了Internet工具、开发工具、办公工具、游戏等，如果你没有选择完整安装，则只会安装这些包的“子集”，如何删除不想要的包，如何安装遗漏的包，学习LInux系统的软件包管理将解决你的这些问题</p></blockquote><h3 id="一、软件包基础"><a href="#一、软件包基础" class="headerlink" title="一、软件包基础"></a>一、软件包基础</h3><h4 id="软件运行环境："><a href="#软件运行环境：" class="headerlink" title="软件运行环境："></a>软件运行环境：</h4><p>程序员代码–&gt;预处理–&gt;编译–&gt;汇编–&gt;链接</p><ul><li><p>静态编译：.a</p></li><li><p>动态编译：.so</p></li></ul><h4 id="包管理器："><a href="#包管理器：" class="headerlink" title="包管理器："></a>包管理器：</h4><p>二进制应用程序的组成部分</p><p>二进制文件、库文件、配置文件、帮助文件</p><h4 id="包命名："><a href="#包命名：" class="headerlink" title="包命名："></a>包命名：</h4><ul><li><p>源代码：name-VERSION.tar.gz|bz2|xz</p></li><li><p>包之间：可能存在依赖性关系，甚至循环依赖</p></li></ul><h4 id="解决依赖包管理工具："><a href="#解决依赖包管理工具：" class="headerlink" title="解决依赖包管理工具："></a>解决依赖包管理工具：</h4><ul><li><p>yum：rpm包管理器的前端工具</p></li><li><p>apt-get：deb包管理器前端工具</p></li><li><p>zypper：suse上的rpm前端管理工具</p></li><li><p>dnf：Fedora 18+ rpm包管理器前端管理工具</p></li></ul><h4 id="程序包管理器："><a href="#程序包管理器：" class="headerlink" title="程序包管理器："></a>程序包管理器：</h4><ul><li><p>debian：deb文件，dpkg包管理器</p></li><li><p>redhat：rpm文件，rpm包管理器</p></li><li><p>rpm：Redhat Package Manager</p></li><li><p>RPM Package Manager</p></li></ul><h3 id="二、RPM包管理"><a href="#二、RPM包管理" class="headerlink" title="二、RPM包管理"></a>二、RPM包管理</h3><h4 id="RPM代表Redhat-Packge-Manager（Redhat包管理器）"><a href="#RPM代表Redhat-Packge-Manager（Redhat包管理器）" class="headerlink" title="RPM代表Redhat Packge Manager（Redhat包管理器）"></a>RPM代表Redhat Packge Manager（Redhat包管理器）</h4><p>RPM现在已成为管理Redhat和UnitedLinux以及其他许多发行版本上的软件的标准。</p><p>RPM本质上就是一个包，包含可以立即在特定机器体系结构上安装和运行的Linux</p><p>软件。最初加载到发行版本中的所有软件都是通过一个RPM来安装的。</p><h4 id="RPM剖析："><a href="#RPM剖析：" class="headerlink" title="RPM剖析："></a>RPM剖析：</h4><p>RPM是文件包，它包括关于包及其功能和依赖关系（即在该包能够运行之前必须安装</p><p>其他哪些包）的信息。还包含包中的文件清单，指定这些文件必须加载到系统中的何</p><p>处，以及它们的初始权限如何。RPM还包含安装前脚本，这是由包开发人员编写的。</p><p>RPM其次还包含已编译的二进制文件。最后，RPM包含了安装后的脚本。</p><h4 id="RPM数据库："><a href="#RPM数据库：" class="headerlink" title="RPM数据库："></a>RPM数据库：</h4><p>/var/lib/rpm</p><p>包含了关于系统上已安装的每个RPM信息。这个数据库知道包之间的依赖关系，还知道每个包的</p><p>文档和配置文件的位置。在加载和卸载包时，RPM使用这个数据库来检查依赖关系。用户还可以</p><p>在这个数据库查询关于包的信息。</p><h4 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h4><p>常用选项：</p><ul><li><p>-i 安装包</p></li><li><p>-h 输出哈希（#）符号提供安装进度更新</p></li><li><p>-v 显示详细过程</p></li><li><p>-ihv是常用配合选项；</p></li><li><p>-e 删除已安装的包</p></li><li><p>-V 验证开关</p></li><li><p>-U 升级</p></li><li><p>-q 查询</p></li><li><p>-qc 显示包的配置文件</p></li><li><p>-qd 显示包的文档文件</p></li></ul><p>-qi 显示包描述</p><ul><li><p>-ql 显示包的文件列表</p></li><li><p>-qR 显示包的依赖关系</p></li></ul><h4 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm&#123;-i|–install&#125;[install-option]PACKAGE_FILE</span><br></pre></td></tr></table></figure><ul><li><p>-h 输出哈希（#）符号提供安装进度更新</p></li><li><p>-v 显示详细过程</p></li><li><p>-ihv是常用配合选项；</p></li></ul><h5 id="install-option"><a href="#install-option" class="headerlink" title="[install-option]"></a>[install-option]</h5><ul><li><p>–test 测试安装，但不真正执行安装</p></li><li><p>–nodeps 忽略依赖关系</p></li><li><p>–replacepkgs|replacefiles 覆盖包安装（可用来修复已安装的安装包）|覆盖文件安装</p></li><li><p>–nosignature 不检查来源的合法性（不安全）<br>RPM-GPG-KEY-CentOS-6</p></li><li><p>–nodigest 不检查包完整性 （不安全）</p></li><li><p>–noscripts 只装包不执行程序包脚本</p></li><li><p>–nopre 不执行安装前脚本</p></li><li><p>–nopost 不执行安装后脚本</p></li><li><p>–nopreun 不执行卸载前脚本</p></li><li><p>–nopostun 不执行卸载后脚本</p></li></ul><h5 id="升级："><a href="#升级：" class="headerlink" title="升级："></a>升级：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm&#123;-U|–upgrade&#125;[install-option]PACKAGE_FILE</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm&#123;-F|–freshen&#125;[install-option]PACKAGE_FILE</span><br></pre></td></tr></table></figure><p>upfrade 如果安装有旧版程序包，则升级</p><p>如果不存在旧版程序包，则安装</p><p>freshen 如果安装有旧版程序包，则升级</p><p>如果不存在旧版程序包，则不执行升级操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh PACKAGE_FILE…</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Fvh PACKAGE_FILE…</span><br></pre></td></tr></table></figure><p>注：内核升级不建议使用以上两种升级命令，建议使用-ivh重新安装另一个内核，Linux</p><p>支持多内核版本共存。</p><ul><li><p>–oldpackage 降级</p></li><li><p>–force 强制安装（可用来修复已安装的安装包）</p></li></ul><h5 id="查询："><a href="#查询：" class="headerlink" title="查询："></a>查询：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm&#123;-q|–query&#125;[select-options][query-options]</span><br></pre></td></tr></table></figure><p>注：包的名称必须精确匹配，不允许使用通配符。然而，如果记不住包的完整名称，您可以</p><p>使用 grep 工具来帮助找到它。可以使用 -qa 开关来查询所有已安装的包，并用 grep 来管道</p><p>输出您能记住的信息。例如：<code>rpm -qa | grep name</code></p><h5 id="select-option"><a href="#select-option" class="headerlink" title="[select-option]"></a>[select-option]</h5><ul><li><p>-a 查看所有已安装的包</p></li><li><p>-f 查看指定的文件由哪个程序包安装产生</p></li><li><p>-p rpmfile 针对尚未安装的程序包文件做查询操作（配合文件名而不是包名）</p></li><li><p>–whatprovides CAPABILITY 查询指定的关键字由哪个包所提供</p></li><li><p>–whatrequires CAPABILITY 查询指定的关键字被哪个包所依赖</p></li></ul><h5 id="query-options"><a href="#query-options" class="headerlink" title="[query-options]"></a>[query-options]</h5><ul><li><p>–changelog 查询rpm包的changelog</p></li><li><p>-c 查询程序的配置文件</p></li><li><p>-d 查询程序的文档</p></li><li><p>-i 查看包描述information</p></li><li><p>-l 查看指定的程序包安装后生成的文件</p></li><li><p>–scripts 查看程序包自带的脚本</p></li><li><p>–provides 列出指定程序包所提供的关键字</p></li><li><p>-R 查询指定程序包所依赖的关键字CAPABILITY</p></li><li><p>rpm2cpio 包文件|cpio -itv 预览包内文件</p></li><li><p>rpm2cpio 包文件|cpio -id “*.conf” 释放包内文件</p></li><li><p>包校验：<code>rpm{-V|–verify}[select-options][verify-options]PACKAGE_FILE</code></p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E9%AA%8C%E8%AF%81-V.png" alt="enter image description here"></p><h5 id="导入所需要公钥"><a href="#导入所需要公钥" class="headerlink" title="导入所需要公钥"></a>导入所需要公钥</h5><ul><li><p><code>rpm -K|checksig rpmfile</code> 检查包的完整性和签名</p></li><li><p><code>rpm –import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</code></p></li><li><p>CentOS 7发行版光盘提供：RPM-GPG-KEY-CentOS-7</p></li><li><p><code>rpm -qa “gpg-pubkey*”</code></p></li></ul><h3 id="三、YUM使用介绍"><a href="#三、YUM使用介绍" class="headerlink" title="三、YUM使用介绍"></a>三、YUM使用介绍</h3><p>Yellowdog Update Modifier，rpm的前端程序，可解决软件包相关依赖性，可在<br>多个库之间定位软件包，up2date的替代工具。<br>使用yum安装文件包出错一般都是下面2种情况：</p><h4 id="1-配置文件的格式错误"><a href="#1-配置文件的格式错误" class="headerlink" title="1.配置文件的格式错误"></a>1.配置文件的格式错误</h4><h4 id="2-缓存问题"><a href="#2-缓存问题" class="headerlink" title="2.缓存问题"></a>2.缓存问题</h4><p>注：yum不支持多个终端同时执行</p><p><code>yum repository</code>: yum repo，存储了众多rpm包，以及包的相关的元数据<br>文件（放置于特定目录repodata下）</p><h5 id="文件服务器："><a href="#文件服务器：" class="headerlink" title="文件服务器："></a>文件服务器：</h5><ul><li><p>http://</p></li><li><p>https://</p></li><li><p>ftp://</p></li><li><p>file://</p></li></ul><h5 id="仓库位置："><a href="#仓库位置：" class="headerlink" title="仓库位置："></a>仓库位置：</h5><p>/etc/yum.repos.d/*.repo</p><h5 id="仓库默认设置："><a href="#仓库默认设置：" class="headerlink" title="仓库默认设置："></a>仓库默认设置：</h5><p>/etc/yum.conf</p><h5 id="repo关键行"><a href="#repo关键行" class="headerlink" title="repo关键行"></a>repo关键行</h5><ul><li><p>[base]                                                 仓库名，不可以加空格</p></li><li><p>name=centos cdrom                        描述信息</p></li><li><p>baseurl= file：///mnt/cdrom<br>注：仓库路径为repodata目录的父目录</p></li><li><p>gpgcheck=0                                       默认为1，0表示不进行数字签名完整性检查</p></li><li><p>gpgkey=file：///mnt/cdrom/RPM-GPG-KEY-CentOS-7             自动导入秘钥</p></li><li><p>enabled=0                                          默认为1,0表示仓库禁用</p></li></ul><h5 id="yum日志："><a href="#yum日志：" class="headerlink" title="yum日志："></a>yum日志：</h5><p>/var/log/yum.log 包含了使用yum安装与卸载的日志</p><h5 id="yum的repo配置文件中可用的变量："><a href="#yum的repo配置文件中可用的变量：" class="headerlink" title="yum的repo配置文件中可用的变量："></a>yum的repo配置文件中可用的变量：</h5><ul><li><p>$releasever: 当前OS的发行版的主版本号</p></li><li><p>$basearch：基础平台；i386, x86_64</p></li></ul><p>例如：</p><ul><li><p><a href="http://server/centos/\$releasever/\$basearch/" target="_blank" rel="noopener">http://server/centos/\$releasever/\$basearch/</a></p></li><li><p><a href="http://server/centos/7/x86_64" target="_blank" rel="noopener">http://server/centos/7/x86_64</a></p></li><li><p><a href="http://server/centos/6/i384" target="_blank" rel="noopener">http://server/centos/6/i384</a></p></li></ul><h4 id="3-yum"><a href="#3-yum" class="headerlink" title="3.yum"></a>3.yum</h4><p>格式：<code>yum[option][command][package…]PACKAGE_FILE</code></p><h5 id="显示仓库列表："><a href="#显示仓库列表：" class="headerlink" title="显示仓库列表："></a>显示仓库列表：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist[all|enabled|disabled]</span><br></pre></td></tr></table></figure><h5 id="显示程序包："><a href="#显示程序包：" class="headerlink" title="显示程序包："></a>显示程序包：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list[all|glob_exp1][glob_exp2][…]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list&#123;available|installed|updates&#125;[glob_exp1][…]</span><br></pre></td></tr></table></figure><h5 id="安装程序包："><a href="#安装程序包：" class="headerlink" title="安装程序包："></a>安装程序包：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install package1 [package2] […]</span><br></pre></td></tr></table></figure><p><code>yum reinstall package1 [package2] […]</code> (重新安装)</p><h5 id="升级程序包："><a href="#升级程序包：" class="headerlink" title="升级程序包："></a>升级程序包：</h5><p><code>yum update [package1] [package2] […]</code>（升级）</p><p><code>yum downgrade package1 [package2] […]</code> （降级）</p><h5 id="检查可用升级："><a href="#检查可用升级：" class="headerlink" title="检查可用升级："></a>检查可用升级：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum check-update</span><br></pre></td></tr></table></figure><h5 id="卸载程序包："><a href="#卸载程序包：" class="headerlink" title="卸载程序包："></a>卸载程序包：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove | erase package1 [package2] […]</span><br></pre></td></tr></table></figure><h5 id="查看程序包information："><a href="#查看程序包information：" class="headerlink" title="查看程序包information："></a>查看程序包information：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info […] </span><br></pre></td></tr></table></figure><h5 id="查看指定的特性-可以是某文件-是由哪个程序包所提供："><a href="#查看指定的特性-可以是某文件-是由哪个程序包所提供：" class="headerlink" title="查看指定的特性(可以是某文件)是由哪个程序包所提供："></a>查看指定的特性(可以是某文件)是由哪个程序包所提供：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum provides | whatprovides feature1 [feature2] […]</span><br></pre></td></tr></table></figure><h5 id="清理本地缓存："><a href="#清理本地缓存：" class="headerlink" title="清理本地缓存："></a>清理本地缓存：</h5><p>清除/var/cache/yum/$basearch/$releasever缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean [ packages | metadata | expire-cache | rpmdb | plugins | all ]</span><br></pre></td></tr></table></figure><p>构建缓存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h5 id="搜索："><a href="#搜索：" class="headerlink" title="搜索："></a>搜索：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search string1 [string2] […]</span><br></pre></td></tr></table></figure><p>以指定的关键字搜索程序包名及summary信息</p><p>查看指定包所依赖的capabilities：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum deplist package1 [package2] […]</span><br></pre></td></tr></table></figure><h5 id="查看yum执行历史："><a href="#查看yum执行历史：" class="headerlink" title="查看yum执行历史："></a>查看yum执行历史：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum history [info|list|packages-list|packages-info|summary|addon-info|redo|undo|rollback|new|sync|stats]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum history</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum history info 6yum history undo 6</span><br></pre></td></tr></table></figure><p>日志：/var/log/yum.log</p><h5 id="安装及升级本地程序包："><a href="#安装及升级本地程序包：" class="headerlink" title="安装及升级本地程序包："></a>安装及升级本地程序包：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install rpmfile1 [rpmfile2] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update rpmfile1 [rpmfile2] […]</span><br></pre></td></tr></table></figure><h5 id="包组管理的相关命令："><a href="#包组管理的相关命令：" class="headerlink" title="包组管理的相关命令："></a>包组管理的相关命令：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall group1 [group2] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupupdate group1 [group2] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum grouplist [hidden] [groupwildcard] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupremove group1 [group2] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinfo group1 […]</span><br></pre></td></tr></table></figure><h3 id="四、源代码安装"><a href="#四、源代码安装" class="headerlink" title="四、源代码安装"></a>四、源代码安装</h3><p>C、C++：make项目管理器</p><p>configure脚本–&gt;Makefile.in–&gt;Makefile</p><p>C语言源代码编译安装三步骤：</p><h4 id="1、-configure"><a href="#1、-configure" class="headerlink" title="1、./configure"></a>1、./configure</h4><ul><li><p>–prefix=                              指定目录安装</p></li><li><p>–sysconfidir=                      指定/etc目录独立安装<br>（1）通过选项传递参数，指定启用特性，安装路径；执行会参考用户的指定已经Makefile.in<br>文件生成Makefile<br>（2）检查依赖到的外部环境，如依赖的软件包</p></li></ul><h4 id="2、make"><a href="#2、make" class="headerlink" title="2、make"></a>2、make</h4><p>编译过程，根据Makefile文件，构建应用程序</p><h4 id="3、make-install"><a href="#3、make-install" class="headerlink" title="3、make install"></a>3、make install</h4><p>复制文件到相应路径</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Linux发行版中附带有成千上万的可用包，其中包括了Internet工具、开发工具、办公工具、游戏等，如果你没有选择完整安装，则只会安装这些包的“子集”，如何删除不想要的包，如何安装遗漏的包，学习LInux系统的软件包管理将解决你的这些问题&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="软件包" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%8C%85/"/>
    
      <category term="rpm" scheme="http://yoursite.com/tags/rpm/"/>
    
      <category term="yum" scheme="http://yoursite.com/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>文本处理工具sed的高级用法</title>
    <link href="http://yoursite.com/2018/04/20/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7sed%E7%9A%84%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/20/文本处理工具sed的高级用法/</id>
    <published>2018-04-20T11:00:00.000Z</published>
    <updated>2018-06-08T12:39:49.127Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、模式空间与保持空间："><a href="#一、模式空间与保持空间：" class="headerlink" title="一、模式空间与保持空间："></a>一、模式空间与保持空间：</h3><p>我们知道sed工作机制是每次读取一行文本至模式空间（pattern space）中，在模式空间中完成处理，将</p><p>处理结果输出至标准输出设备；在模式空间中处理一行内容后会继续处理下一行，那么对于处理过的行可</p><p>能还有其他的处理，因此可以把处理过的行传送至一个叫保持空间（hold space）中，然后在后续的处理中</p><p>再次传送回模式空间中。这就类似加工车间和仓库的概念，好比模式空间是加工车间，保持空间就是仓</p><p>库，不过这里的仓库存储的都是些半成品的产品。</p><h3 id="二、sed高级用法："><a href="#二、sed高级用法：" class="headerlink" title="二、sed高级用法："></a>二、sed高级用法：</h3><p>Sed工具支持一些高级的命令来运用到保持空间中，这些高级命令有：</p><ul><li><p>P：打印模式空间开端至\n内容，并追加到默认输出之前 </p></li><li><p>h: 把模式空间中的内容覆盖至保持空间中 </p></li><li><p>H：把模式空间中的内容追加至保持空间中 </p></li><li><p>g: 从保持空间取出数据覆盖至模式空间 </p></li><li><p>G：从保持空间取出内容追加至模式空间 </p></li><li><p>x: 把模式空间中的内容与保持空间中的内容进行互换 </p></li><li><p>n: 读取匹配到的行的下一行覆盖至模式空间 </p></li><li><p>N：读取匹配到的行的下一行追加至模式空间 </p></li><li><p>d: 删除模式空间中的行 </p></li><li><p>D：如果模式空间包含换行符，则删除直到第一个换行符的模式空间中的文本，<br>并不会读取新的输入行，而使用合成的模式空间重新启动循环。如果模式空间<br>不包含换行符，则会像发出d命令那样启动正常的新循环。</p></li></ul><h3 id="三、示例分析："><a href="#三、示例分析：" class="headerlink" title="三、示例分析："></a>三、示例分析：</h3><p>以下我们均以该文档为例：</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%96%87%E6%A1%A3.png" alt="enter image description here"></p><h4 id="例1：cat-test2-sed-sed-‘G’"><a href="#例1：cat-test2-sed-sed-‘G’" class="headerlink" title="例1：cat test2.sed |sed ‘G’"></a>例1：<code>cat test2.sed |sed ‘G’</code></h4><p>解析：由于保持空间初始默认为空，所有将空行追加到每行的模式空间中输出，等同在每行的后面添加一个空行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B6.png" alt="enter image description here"></p><h4 id="例2：cat-test2-sed-sed-‘g’"><a href="#例2：cat-test2-sed-sed-‘g’" class="headerlink" title="例2：cat test2.sed |sed ‘g’"></a>例2：<code>cat test2.sed |sed ‘g’</code></h4><p>解析：g和G的区别在，g为覆盖模式空间，G为追加至模式空间，由于g默认为空，将每行的模式空间都覆盖为空行输出，所以表现为5个空行。<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B7.png" alt="enter image description here"></p><h4 id="例3：cat-test2-sed-sed-‘-d’"><a href="#例3：cat-test2-sed-sed-‘-d’" class="headerlink" title="例3：cat test2.sed |sed ‘$!d’"></a>例3：<code>cat test2.sed |sed ‘$!d’</code></h4><p>解析：\$表示尾行，\$!d则表示除了尾行都执行删除。<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B5.png" alt="enter image description here"></p><h4 id="例4：cat-test2-sed-sed-‘n-d’"><a href="#例4：cat-test2-sed-sed-‘n-d’" class="headerlink" title="例4：cat test2.sed |sed ‘n;d’"></a>例4：<code>cat test2.sed |sed ‘n;d’</code></h4><p>解析：n将第一行读入模式空间输出，并将下一行即第二行覆盖至模式空间并删除，如此循环，最终表现为只显示文本的奇数行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B9.png" alt="enter image description here"></p><h4 id="例5：cat-test2-sed-sed-‘N-D’"><a href="#例5：cat-test2-sed-sed-‘N-D’" class="headerlink" title="例5：cat test2.sed |sed ‘N;D’"></a>例5：<code>cat test2.sed |sed ‘N;D’</code></h4><p>解析：N将第二行追加至第一行的模式空间中，D删除模式空间内的第一行；对第二行执行命令，将第三行追加至第二行的模式空间内，并删除模式中的第一行；如此循环，最后只输出最后一行文本。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B3.png" alt="enter image description here"></p><h4 id="例6：cat-test2-sed-sed-‘-N-D’"><a href="#例6：cat-test2-sed-sed-‘-N-D’" class="headerlink" title="例6：cat test2.sed |sed ‘$!N;$!D’"></a>例6：<code>cat test2.sed |sed ‘$!N;$!D’</code></h4><p>解析:’\$!N;\$!D’即对文本中除了最后一行支持’N;D’操作，由例外5可知，除了最后一行执行’N;D’操作，得出】结果为只输出倒数第二行，最后一行文本不处理，默认输出，所有最后结果输出倒数两行的文本。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B4.png" alt="enter image description here"></p><h4 id="例7：cat-test2-sed-sed-n-‘n-p’"><a href="#例7：cat-test2-sed-sed-n-‘n-p’" class="headerlink" title="例7：cat test2.sed|sed -n ‘n;p’"></a>例7：<code>cat test2.sed|sed -n ‘n;p’</code></h4><p>解析：对第一行执行操作，n选项将第二行覆盖至模式空间，在第一行和第二行的默认输出后追加打印出来，-n取消默认输出，如此循环，最后得出文本的偶数行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B1.png" alt="enter image description here"></p><h4 id="例8：cat-test2-sed-sed-n-‘1-n-p’"><a href="#例8：cat-test2-sed-sed-n-‘1-n-p’" class="headerlink" title="例8：cat test2.sed|sed -n ‘1!n;p’"></a>例8：<code>cat test2.sed|sed -n ‘1!n;p’</code></h4><p>解析：与例7相比，例8为对除了第一行的其他行执行例7的操作，则最后的结果也为得出文本的奇数行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A5%87%E6%95%B0%E8%A1%8C.png" alt="enter image description here"></p><h4 id="例9：cat-test2-sed-sed-‘-d-G’"><a href="#例9：cat-test2-sed-sed-‘-d-G’" class="headerlink" title="例9：cat test2.sed |sed ‘/^$/d;G’"></a>例9：<code>cat test2.sed |sed ‘/^$/d;G’</code></h4><p>解析：^$为表示地址定界匹配到的空行，d将空行删除，G在每行的文本后添加一个空行；最后的输出结果即：删除文本内的空行，并在每行后追加一行空行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B8.png" alt="enter image description here"></p><h4 id="例10：cat-test2-sed-sed-‘1-G-h-d’"><a href="#例10：cat-test2-sed-sed-‘1-G-h-d’" class="headerlink" title="例10：cat test2.sed |sed ‘1!G;h;$!d’"></a>例10：<code>cat test2.sed |sed ‘1!G;h;$!d’</code></h4><p>解析：1!G表示除了第一行，都执行将保持空间的内容追加至模式空间并输出，h命令使上一个模式空间内容将G覆盖，最后$!d只保留对最后一行的执行结果，具体表现为：</p><p>对第1行只进入模式空间默认输出，第2行将上一个模式空间内容（即第1行文本）覆盖至保持空间，共同进入模式空间（包含第2至1行文本）并输出；第3行将上一个模式空间内容（即第2至1行文本）覆盖至保持空间，共同进入模式空间（包含第3至1行文本）并输出；如此循环…….对第5行将上一个模式空间内容（第4至1行）覆盖至保持空间，共同进入模式空间（包含5至1行）输出；最后$!d除了最后一行的其他行的模式空间内容都删除，最后只留最后一行的执行结果，即将文本倒序输出。<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B2.png" alt="enter image description here"></p><h4 id="例11：cat-test2-sed-sed-n-‘1-G-h-p’"><a href="#例11：cat-test2-sed-sed-n-‘1-G-h-p’" class="headerlink" title="例11：cat test2.sed |sed -n ‘1!G;h;$p’"></a>例11：<code>cat test2.sed |sed -n ‘1!G;h;$p’</code></h4><p>解析：与例10相比，最后的$p只打印最后一行的模式空间内容（第5至1行），-n取消所有默认输出，得出的结果与例10相同，倒序将文本输出。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B10.png" alt="enter image description here"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、模式空间与保持空间：&quot;&gt;&lt;a href=&quot;#一、模式空间与保持空间：&quot; class=&quot;headerlink&quot; title=&quot;一、模式空间与保持空间：&quot;&gt;&lt;/a&gt;一、模式空间与保持空间：&lt;/h3&gt;&lt;p&gt;我们知道sed工作机制是每次读取一行文本至模式空间（patt
      
    
    </summary>
    
    
      <category term="sed" scheme="http://yoursite.com/tags/sed/"/>
    
      <category term="文本" scheme="http://yoursite.com/tags/%E6%96%87%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>文本三剑客之sed</title>
    <link href="http://yoursite.com/2018/04/15/%E6%96%87%E6%9C%AC%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8Bsed/"/>
    <id>http://yoursite.com/2018/04/15/文本三剑客之sed/</id>
    <published>2018-04-15T11:00:00.000Z</published>
    <updated>2018-06-08T12:20:19.767Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我们知道，sed被称为Linux中被称为文本处理三剑客之一，相比于grep命令匹配内容的功能，sed则能够做到对匹配到的文本内容对其进行编辑。</p></blockquote><h2 id="强大的处理文本的工具sed"><a href="#强大的处理文本的工具sed" class="headerlink" title="强大的处理文本的工具sed"></a>强大的处理文本的工具sed</h2><p>我们知道，sed被称为Linux中被称为文本处理三剑客之一，相比于grep命令匹配内容的功能，sed则能够做到对匹配到的文本内容对其进行编辑。</p><h3 id="一-sed，英文全称Stream-EDitor，翻译过来就是行编辑器"><a href="#一-sed，英文全称Stream-EDitor，翻译过来就是行编辑器" class="headerlink" title="一.sed，英文全称Stream EDitor，翻译过来就是行编辑器"></a>一.sed，英文全称Stream EDitor，翻译过来就是行编辑器</h3><h4 id="1-用法"><a href="#1-用法" class="headerlink" title="1.用法"></a>1.用法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed[option]…’script’ inputfile…</span><br></pre></td></tr></table></figure><p>其中‘script’可表示为’地址定界+编辑命令’</p><h4 id="2-option"><a href="#2-option" class="headerlink" title="2.option"></a>2.option</h4><ul><li><p>-n  取消默认打印内容到屏幕（示例1）</p></li><li><p>-e     多点编辑,表达且关系，与grep的-e不同，grep -e表达或关系（示例2）</p></li><li><p>-f      从指定文件中读取编辑脚本（示例3）</p></li><li><p>-r      支持使用扩展正则表达式</p></li><li><p>-i.bak       原处编辑，并备份文件file.bak（示例4）</p></li></ul><h4 id="3-地址定界："><a href="#3-地址定界：" class="headerlink" title="3.地址定界："></a>3.地址定界：</h4><ul><li>（1）不给地址：对全文进行处理</li><li><p>（2）单地址：#：指定的行，$：最后一行<br>/pattern/：支持正则表达式，被此模式所能匹配到的每一行</p></li><li><p>（3）地址范围：<br>#，#                         （示例5）<br>#，+#<br>/pat1/,/pat2/          （示例6）<br>/pat1/, #                  （示例7）</p></li><li><p>（4）~：步进<br>1~2  奇数行              （示例5）<br>2~2  偶数行</p></li></ul><h4 id="4-编辑命令："><a href="#4-编辑命令：" class="headerlink" title="4.编辑命令："></a>4.编辑命令：</h4><ul><li><p>d       删除模式空间匹配的行（示例4）</p></li><li><p>p       打印当前模式空间内容，追加到默认输出之后（示例1）</p></li><li><p>a[]text   在指定行后面追加文本（示例4）<br>如要实现插入内容空格开头可先追加\再输入空格<br>支持使用\n实现多行追加（示例8）</p></li><li><p>i[]text     在指定行前面插入文本（示例9）</p></li><li><p>c[]text    替换指定行尾单行或多行文本（示例10）</p></li><li><p>w /path/somefile   保存模式匹配的行到指定文件（示例11）</p></li><li><p>r /path/somefile     读取指定文件的文本匹配的行后（示例12）</p></li></ul><p>注意：w，r后跟文件一定要加空格</p><p>可利用此命令定义别名到.bashrc</p><ul><li><p>=       为模式空间中的行打印行号</p></li><li><p>! 取反，!需加载地址定界和编辑命令中间，如’2！d’（示例13）</p></li><li><p>s///：查找替换，支持使用其他分隔符；s###；s@@@（示例14）</p></li></ul><h3 id="二-示例"><a href="#二-示例" class="headerlink" title="二.示例"></a>二.示例</h3><p>以下我们创建文件test进行示例：</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6test.png" alt="enter image description here"></p><h4 id="示例1：sed-‘1-10p’-data-test-sed"><a href="#示例1：sed-‘1-10p’-data-test-sed" class="headerlink" title="示例1：sed   ‘1,10p’ /data/test.sed"></a>示例1：<code>sed   ‘1,10p’ /data/test.sed</code></h4><p>sed命令默认将文本内容打印到屏幕，由于执行命令p，文本内容被打印了两遍</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%B8%8D%E5%8A%A0-n.png" alt="enter image description here"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed  -n  ‘1,10p’ /data/test.sed</span><br></pre></td></tr></table></figure><p>sed   -n选项将取消默认输出到屏幕，仅显示p的执行结果</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%8A%A0-n.png" alt="enter image description here"></p><h4 id="示例2：sed-n-e-‘1p’-e-‘3p’"><a href="#示例2：sed-n-e-‘1p’-e-‘3p’" class="headerlink" title="示例2：sed -n -e ‘1p’  -e  ‘3p’"></a>示例2：<code>sed -n -e ‘1p’  -e  ‘3p’</code></h4><p>显示第一行和第三行，-e表示且的关系</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/e-1.png" alt="enter image description here"></p><h4 id="示例3：sed-n-f-sedscripts-txt-data-test-sed"><a href="#示例3：sed-n-f-sedscripts-txt-data-test-sed" class="headerlink" title="示例3：sed -n -f sedscripts.txt  /data/test.sed"></a>示例3：<code>sed -n -f sedscripts.txt  /data/test.sed</code></h4><p>将2,5p写入sedscripts.txt文件，-f选项读取sedscripts.txt，并执行文件中内容</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/f-%E5%BC%95%E7%94%A8%E6%96%87%E4%BB%B6.png" alt="enter image description here"></p><h4 id="示例4：sed-i-‘1-10a-’-data-test-sed"><a href="#示例4：sed-i-‘1-10a-’-data-test-sed" class="headerlink" title="示例4：sed -i  ‘1,10a#’   /data/test.sed"></a>示例4：<code>sed -i  ‘1,10a#’   /data/test.sed</code></h4><p>表示在第1至第10行内容后插入#，-i选项直接编辑了test.sed的文本内容</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/i-a.png" alt="enter image description here"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i  ‘/#/d’  /data/test.sed</span><br></pre></td></tr></table></figure><p>表示将所有带#的行删掉并编辑文本</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/i-d.png" alt="enter image description here"></p><p>示例5：<code>sed -n  ‘3p’</code>     打印第3行内容</p><p><code>sed  -n ‘2,5p’</code>                打印第2至第五行</p><p><code>sed  -n ‘2,+3p’</code>              打印第2至第5行</p><p><code>sed  -n  ‘1~2p’</code>              打印奇数行</p><p><code>sed  -n  ‘2~2p’</code>              打印偶数行</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%95%B0%E5%AD%97%E5%AE%9A%E7%95%8C.png" alt="enter image description here"></p><h4 id="示例6：正则定界，表示ifconfig命令输出中开头eth2的行，至开头为lo的行"><a href="#示例6：正则定界，表示ifconfig命令输出中开头eth2的行，至开头为lo的行" class="headerlink" title="示例6：正则定界，表示ifconfig命令输出中开头eth2的行，至开头为lo的行"></a>示例6：正则定界，表示ifconfig命令输出中开头eth2的行，至开头为lo的行</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E5%88%99%E5%AE%9A%E7%95%8C.png" alt="enter image description here"></p><h4 id="示例7：正则数字混合定界，表示ifconfig命令输出中，eth2开头的行到第12行的内容"><a href="#示例7：正则数字混合定界，表示ifconfig命令输出中，eth2开头的行到第12行的内容" class="headerlink" title="示例7：正则数字混合定界，表示ifconfig命令输出中，eth2开头的行到第12行的内容"></a>示例7：正则数字混合定界，表示ifconfig命令输出中，eth2开头的行到第12行的内容</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E5%88%99%E6%95%B0%E5%AD%97%E6%B7%B7%E5%90%88%E5%AE%9A%E7%95%8C.png" alt="enter image description here"></p><h4 id="示例8：多行插入，将aaa-nbbb插入到每行后面"><a href="#示例8：多行插入，将aaa-nbbb插入到每行后面" class="headerlink" title="示例8：多行插入，将aaa\nbbb插入到每行后面"></a>示例8：多行插入，将aaa\nbbb插入到每行后面</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/a%E5%A4%9A%E8%A1%8C.png" alt="enter image description here"></p><h4 id="示例9：sed-‘1-10i-’-data-test-sed"><a href="#示例9：sed-‘1-10i-’-data-test-sed" class="headerlink" title="示例9：sed  ‘1,10i#’  /data/test.sed"></a>示例9：<code>sed  ‘1,10i#’  /data/test.sed</code></h4><p>在每一行上面插入#</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/i%E4%B8%8A%E6%96%B9%E6%8F%92%E5%85%A5.png" alt="enter image description here"></p><h4 id="示例10：sed-‘1-5c’-data-test-sed"><a href="#示例10：sed-‘1-5c’-data-test-sed" class="headerlink" title="示例10：sed  ‘1,5c’  /data/test.sed"></a>示例10：<code>sed  ‘1,5c’  /data/test.sed</code></h4><p>将test.sed文件中1到5行替换为一个#</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/c%E6%9B%BF%E6%8D%A2%E5%8C%B9%E9%85%8D.png" alt="enter image description here"></p><h4 id="示例11：sed-‘2-5w-f1’-data-test-sed"><a href="#示例11：sed-‘2-5w-f1’-data-test-sed" class="headerlink" title="示例11：sed  ‘2,5w  f1’  /data/test.sed"></a>示例11：<code>sed  ‘2,5w  f1’  /data/test.sed</code></h4><p>将test.sed文件中第2到第5行内容打印到f1文件中<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/w-%E5%B0%86%E5%8C%B9%E9%85%8D%E5%86%85%E5%AE%B9%E8%BE%93%E5%87%BA%E5%88%B0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6.png" alt="enter image description here"></p><h4 id="示例12：sed-‘2-5r-f1’-data-test-sed"><a href="#示例12：sed-‘2-5r-f1’-data-test-sed" class="headerlink" title="示例12：sed  ‘2,5r  f1’  /data/test.sed"></a>示例12：<code>sed  ‘2,5r  f1’  /data/test.sed</code></h4><p>将f1的内容插入到第2至第5行</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/r-%E8%B7%9F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E5%8C%B9%E9%85%8D%E8%A1%8C.png" alt="enter image description here"></p><h4 id="示例13：sed-n-‘2-5-p’-data-test-sed"><a href="#示例13：sed-n-‘2-5-p’-data-test-sed" class="headerlink" title="示例13：sed  -n  ‘2,5!  p’  /data/test.sed"></a>示例13：<code>sed  -n  ‘2,5!  p’  /data/test.sed</code></h4><p>打印除了第2至第5行的内容</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%EF%BC%81%E9%99%A4%E4%BA%86.png" alt="enter image description here"></p><h4 id="示例14：ifconfig-sed-n-“2p”-sed-r-“s-addr-Bcast-1-”"><a href="#示例14：ifconfig-sed-n-“2p”-sed-r-“s-addr-Bcast-1-”" class="headerlink" title="示例14：ifconfig |sed -n “2p”|sed -r “s@.*addr:(.*) Bcast.*@\1@”"></a>示例14：<code>ifconfig |sed -n “2p”|sed -r “s@.*addr:(.*) Bcast.*@\1@”</code></h4><p>利用搜索替代，我们可以将任意段字符串定义成方法，然后表示出整行，再利用后向引用即可取出该字符串。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E5%88%99%E5%8F%96IP.png" alt="enter image description here"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我们知道，sed被称为Linux中被称为文本处理三剑客之一，相比于grep命令匹配内容的功能，sed则能够做到对匹配到的文本内容对其进行编辑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;强大的处理文本的工具sed&quot;&gt;&lt;a href=&quot;#强
      
    
    </summary>
    
    
      <category term="sed" scheme="http://yoursite.com/tags/sed/"/>
    
      <category term="文本" scheme="http://yoursite.com/tags/%E6%96%87%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本编程基础（2）——新手注意事项及技巧16条</title>
    <link href="http://yoursite.com/2018/04/14/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89%E2%80%94%E2%80%94%E6%96%B0%E6%89%8B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E5%8F%8A%E6%8A%80%E5%B7%A716%E6%9D%A1/"/>
    <id>http://yoursite.com/2018/04/14/shell脚本编程基础（2）——新手注意事项及技巧16条/</id>
    <published>2018-04-14T11:00:00.000Z</published>
    <updated>2018-06-08T11:53:04.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总结了一些shell编程初学者常犯的错误、注意事项及技巧："><a href="#总结了一些shell编程初学者常犯的错误、注意事项及技巧：" class="headerlink" title="总结了一些shell编程初学者常犯的错误、注意事项及技巧："></a>总结了一些shell编程初学者常犯的错误、注意事项及技巧：</h2><h3 id="1-判断变量是否加"><a href="#1-判断变量是否加" class="headerlink" title="1.判断变量是否加$"></a>1.判断变量是否加$</h3><ul><li><p>（1）赋值变量时不加$</p></li><li><p>（2）如果命令能识别变量就不加\$,如果命令不能识别变量加$</p></li></ul><h3 id="2-存放多行字符时”-name”变量外加双引号可保留换行格式"><a href="#2-存放多行字符时”-name”变量外加双引号可保留换行格式" class="headerlink" title="2.存放多行字符时”$name”变量外加双引号可保留换行格式"></a>2.存放多行字符时”$name”变量外加双引号可保留换行格式</h3><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BF%9D%E7%95%99%E6%A0%BC%E5%BC%8F.png" alt="enter image description here"></p><h3 id="3-和（）中执行命令的区别"><a href="#3-和（）中执行命令的区别" class="headerlink" title="3.{}和（）中执行命令的区别"></a>3.{}和（）中执行命令的区别</h3><p>（）中使用的命令为一次性的，小括号中相当于在子进程中执行命令,小括号继承括号外变量，但不会影响括号外变量</p><p>注：小括号中所说的子进程与常规的子进程不是一回事</p><p>而{ }中使用命令是在当前shell环境中执行，不会不开启子进程，会影响当前shell环境</p><h4 id="例1：x-1-echo-echo-echo-x-x-2-echo-x"><a href="#例1：x-1-echo-echo-echo-x-x-2-echo-x" class="headerlink" title="例1：x=1;echo $$;(echo $$;echo $x;x=2);echo $x"></a>例1：<code>x=1;echo $$;(echo $$;echo $x;x=2);echo $x</code></h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%B0%8F%E6%8B%AC%E5%8F%B7.png" alt="enter image description here"></p><p>虽然括号内开启了一个子进程，但该子进程号和括号外进程号一致；此外括号外变量会影响括号内，但括号内变量更改不会影响括号外。</p><h4 id="例2：（echo-exit）"><a href="#例2：（echo-exit）" class="headerlink" title="例2：（echo $$;exit）"></a>例2：<code>（echo $$;exit）</code></h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%B0%8F%E6%8B%AC%E5%8F%B7%E9%80%80%E5%87%BA.png" alt="enter image description here"></p><p>执行此命令，显示当前所在进程号，exit退出（）内子进程</p><p>{ }中使用命令是在当前shell环境中执行，不会不开启子进程，会影响当前shell环境</p><h4 id="例3：x-1-echo-echo-echo-x-x-2-echo-x"><a href="#例3：x-1-echo-echo-echo-x-x-2-echo-x" class="headerlink" title="例3：x=1;echo $$;{ echo $$;echo $x;x=2; };echo $x"></a>例3：<code>x=1;echo $$;{ echo $$;echo $x;x=2; };echo $x</code></h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E8%8A%B1%E6%8B%AC%E5%8F%B7.png" alt="enter image description here"></p><p>{}内命令相当于当前shell执行，因此括号外和括号内进程号一致，此外{}内变量影响了{}外的变量。</p><h4 id="例4：-echo-exit"><a href="#例4：-echo-exit" class="headerlink" title="例4：{  echo$$;exit;  }"></a>例4：<code>{  echo$$;exit;  }</code></h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E8%8A%B1%E6%8B%AC%E5%8F%B7%E9%80%80%E5%87%BA.png" alt="enter image description here"></p><p>执行此命令，显示当前所在进程号，exit退出当前shell；</p><p>因此编写脚本时，想要使用括号利用exit命令退出脚本，一定要使用{}，而不能使用（）</p><h3 id="4-4-短路与-amp-amp-和短路或-嵌套连续命令时可使用大括号"><a href="#4-4-短路与-amp-amp-和短路或-嵌套连续命令时可使用大括号" class="headerlink" title="4.4.短路与&amp;&amp;和短路或||嵌套连续命令时可使用大括号"></a>4.4.短路与&amp;&amp;和短路或||嵌套连续命令时可使用大括号</h3><p>如&amp;&amp;{  cmd1 ；cmd2 ； }；||{  cmd1 ；cmd2 ；}；</p><p>测试或命令结果为假时，后跟连续多条命令，必须需采用此种格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">false || &#123; echo cmd1 ; echo cmd2 ; &#125;</span><br></pre></td></tr></table></figure><p>表示测试或命令返回false时，执行cmd1，cmd2</p><p>测试或命令结果为真时，后跟连续多条命令，可写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true &amp;&amp; echo cmd1 &amp;&amp; echo cmd2</span><br></pre></td></tr></table></figure><p>也可写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true &amp;&amp; &#123; echo cmd1 ; echo cmd2 ; &#125;</span><br></pre></td></tr></table></figure><p>当条件测试或命令后同时出现短路且&amp;&amp;与短路或||有嵌套命令的情况时:</p><p>如：<code>[ Test ] &amp;&amp; { echo cmd1 ; echo cmd2 ; } || { echo cmd3; echo cmd4 ; }</code></p><p>表示当Test为真时，执行命令cmd1，cmd2；当Test为假时，执行cmd3，cmd4；</p><h3 id="5-引用超过10个以上的位置变量时，数字加-；如、-10要写为-10"><a href="#5-引用超过10个以上的位置变量时，数字加-；如、-10要写为-10" class="headerlink" title="5.引用超过10个以上的位置变量时，数字加{}；如、$10要写为\${10}"></a>5.引用超过10个以上的位置变量时，数字加{}；如、$10要写为\${10}</h3><p>不加{}时，默认将\$10当作\$1和0表示出来：</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E4%BA%8E10%E4%B8%AA%E5%8F%82%E6%95%B01.png" alt="enter image description here"></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E4%BA%8E10%E4%B8%AA%E5%8F%82%E6%95%B02.png" alt="enter image description here"></p><p>当给10加上大括号后，${10}才表示第10个位置变量：</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E4%BA%8E10%E4%B8%AA%E5%8F%82%E6%95%B03.png" alt="enter image description here"></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E4%BA%8E10%E4%B8%AA%E5%8F%82%E6%95%B04.png" alt="enter image description here"></p><h3 id="6-位置变量-与-的区别"><a href="#6-位置变量-与-的区别" class="headerlink" title="6.位置变量\$*与\$@的区别"></a>6.位置变量\$*与\$@的区别</h3><p>两者都可表示传递给脚本的所有参数，但\$*将每个参数合并为一个字符串</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%98%9F-1.png" alt="enter image description here"></p><p>而$@每个参数作为独立字符</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%9C%88.png" alt="enter image description here"></p><p>注意：\$@、\$*只在被双引号包起来的时候才会有差异。</p><h3 id="7-在使用-和test引用变量时，最好加双引号””避免出问题"><a href="#7-在使用-和test引用变量时，最好加双引号””避免出问题" class="headerlink" title="7.在使用[  ]和test引用变量时，最好加双引号””避免出问题"></a>7.在使用[  ]和test引用变量时，最好加双引号””避免出问题</h3><p>不加引号也许不会出错，但加上引号肯定不会有错</p><h3 id="8-脚本中进行变量的算术运算时，有空格尽量删除"><a href="#8-脚本中进行变量的算术运算时，有空格尽量删除" class="headerlink" title="8.脚本中进行变量的算术运算时，有空格尽量删除"></a>8.脚本中进行变量的算术运算时，有空格尽量删除</h3><p>变量的算术运算，多一个空格就会导致出错，所以尽量将空格删除</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97.png" alt="enter image description here"></p><h3 id="9-进行条件测试过程中，能加空格地方尽量都加空格"><a href="#9-进行条件测试过程中，能加空格地方尽量都加空格" class="headerlink" title="9.进行条件测试过程中，能加空格地方尽量都加空格"></a>9.进行条件测试过程中，能加空格地方尽量都加空格</h3><p>条件测试时，无论是括号两端还是字符两端少一个空格就会导致出错，所有尽量都加空格</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%A9%BA%E6%A0%BC.png" alt="enter image description here"></p><h3 id="10-使用-进行PATTERN匹配时，需要加双括号-，且正则表达式不能加引号，默认使用扩展正则表达式"><a href="#10-使用-进行PATTERN匹配时，需要加双括号-，且正则表达式不能加引号，默认使用扩展正则表达式" class="headerlink" title="10.使用=~进行PATTERN匹配时，需要加双括号[[ ]]，且正则表达式不能加引号，默认使用扩展正则表达式"></a>10.使用=~进行PATTERN匹配时，需要加双括号[[ ]]，且正则表达式不能加引号，默认使用扩展正则表达式</h3><p>正则表达式加引号就会导致错误结果，这与我们在使用grep与sed等命令利用到正则表达式需要加引号正好相反，需要注意</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.png" alt="enter image description here"></p><h3 id="11-用于字符串比较时的用到的操作应该都使用引号"><a href="#11-用于字符串比较时的用到的操作应该都使用引号" class="headerlink" title="11.用于字符串比较时的用到的操作应该都使用引号"></a>11.用于字符串比较时的用到的操作应该都使用引号</h3><p>同上，不加引号也许不会出错，但加上引号肯定不会有错</p><h3 id="12-右侧可匹配类似于通配符glob的用法"><a href="#12-右侧可匹配类似于通配符glob的用法" class="headerlink" title="12.[[  == ]]右侧可匹配类似于通配符glob的用法"></a>12.[[  == ]]右侧可匹配类似于通配符glob的用法</h3><p>此种匹配类似于通配符，但不完全等同于通配符，注意格式双中括号，双等号 [[ == ]]</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E7%B1%BB%E4%BC%BC%E9%80%9A%E9%85%8D%E7%AC%A6.png" alt="enter image description here"></p><h3 id="13-脚本里不支持别名"><a href="#13-脚本里不支持别名" class="headerlink" title="13.脚本里不支持别名"></a>13.脚本里不支持别名</h3><h3 id="14-文件测试后跟空字符时，也反馈为True。"><a href="#14-文件测试后跟空字符时，也反馈为True。" class="headerlink" title="14.文件测试后跟空字符时，也反馈为True。"></a>14.文件测试后跟空字符时，也反馈为True。</h3><p>例如：/data/fstab为普通文件，用-f选项判断时，后跟fstab文件或者空时都判断为真</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%96%87%E4%BB%B6%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD.png" alt="enter image description here"></p><p>因此要保证一个文件存在且满足测试条件时，</p><p>可表示为：<code>[ -n  “file”  -a  –f  “file” ]</code></p><p>file文件是否存在且为普通文件</p><h3 id="15-测试字符串是否为空除了-z及-n选项，还可用-“-var”-“”-；-x”-var”-“x”-来测试。"><a href="#15-测试字符串是否为空除了-z及-n选项，还可用-“-var”-“”-；-x”-var”-“x”-来测试。" class="headerlink" title="15.测试字符串是否为空除了-z及-n选项，还可用[  “\$var”  =  “”  ]；[  x”\$var”  =  “x”  ]来测试。"></a>15.测试字符串是否为空除了-z及-n选项，还可用[  “\$var”  =  “”  ]；[  x”\$var”  =  “x”  ]来测试。</h3><h4 id="例1：当-var为空时，使用-“-var”-“”-返回结果0"><a href="#例1：当-var为空时，使用-“-var”-“”-返回结果0" class="headerlink" title="例1：当\$var为空时，使用[  “\$var”  =  “”  ]返回结果0"></a>例1：当\$var为空时，使用[  “\$var”  =  “”  ]返回结果0</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%B5%8B%E8%AF%95%E4%B8%BA%E7%A9%BA1.png" alt="enter image description here"></p><h4 id="例2：当-var为空时，-x”-var”-“x”-返回结果为0"><a href="#例2：当-var为空时，-x”-var”-“x”-返回结果为0" class="headerlink" title="例2：当\$var为空时，[  x”\$var”  =  “x”  ]返回结果为0"></a>例2：当\$var为空时，[  x”\$var”  =  “x”  ]返回结果为0</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%B5%8B%E8%AF%95%E4%B8%BA%E7%A9%BA2.png" alt="enter image description here"></p><h3 id="16-养成好习惯：变量一使用完后就用unset删掉"><a href="#16-养成好习惯：变量一使用完后就用unset删掉" class="headerlink" title="16.养成好习惯：变量一使用完后就用unset删掉"></a>16.养成好习惯：变量一使用完后就用unset删掉</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;总结了一些shell编程初学者常犯的错误、注意事项及技巧：&quot;&gt;&lt;a href=&quot;#总结了一些shell编程初学者常犯的错误、注意事项及技巧：&quot; class=&quot;headerlink&quot; title=&quot;总结了一些shell编程初学者常犯的错误、注意事项及技巧：&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="编程" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统文件查找与解压缩方法</title>
    <link href="http://yoursite.com/2018/04/12/Linux%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E4%B8%8E%E8%A7%A3%E5%8E%8B%E7%BC%A9%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/12/Linux系统文件查找与解压缩方法/</id>
    <published>2018-04-12T11:00:00.000Z</published>
    <updated>2018-06-04T14:00:13.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux系统文件查找与解压缩方法"><a href="#Linux系统文件查找与解压缩方法" class="headerlink" title="Linux系统文件查找与解压缩方法"></a>Linux系统文件查找与解压缩方法</h2><blockquote><p>如同我们平时在操作 Windows系统时，文件查找与解压缩文件是经常要使用到的操作，Linux系统中也要经常用到相同的操作，今天我们就来介绍Linux系统中的一些文件查找与解压缩时使用到的工具。</p></blockquote><h3 id="一、文件查找"><a href="#一、文件查找" class="headerlink" title="一、文件查找"></a>一、文件查找</h3><h4 id="1-locate命令"><a href="#1-locate命令" class="headerlink" title="1.locate命令"></a>1.locate命令</h4><ul><li><p>优点：搜索速度快，节省系统性能（生产环境适合使用locate）</p></li><li><p>缺点：不能即时更新（文件索引数据库在每次开机后更新），要想搜索最新文件需手动输入命令updatedb更新文件索引数据库，模糊搜索；</p></li></ul><p>Locate命令适合搜索不经常变化的文件，如系统文件</p><p>查询系统上预建的文件索引数据库：</p><p>/var/lib/mlocate/mlocate.db</p><h5 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h5><ul><li><p>-i      忽略大小写</p></li><li><p>-b     只搜索基名符合条件的文件</p></li><li><p>-n     只列出前几个</p></li><li><p>-r      支持扩展正则表达式</p></li></ul><h4 id="2-find命令"><a href="#2-find命令" class="headerlink" title="2.find命令"></a>2.find命令</h4><ul><li><p>优点：精确查找；实时查找；搜索条件灵活</p></li><li><p>缺点：查找速度慢；占用系统性能</p></li></ul><p>find [OPTION]…[查找路径] [查找条件] [处理动作]</p><p>指定搜索层级：</p><h5 id="不指定情况下默认当前目录下搜索"><a href="#不指定情况下默认当前目录下搜索" class="headerlink" title="不指定情况下默认当前目录下搜索"></a>不指定情况下默认当前目录下搜索</h5><ul><li><p>-maxdepth level      最大搜索深度，默认为1层</p></li><li><p>-mindepth level 最小搜索深度</p></li></ul><h5 id="根据文件名和inode查找："><a href="#根据文件名和inode查找：" class="headerlink" title="根据文件名和inode查找："></a>根据文件名和inode查找：</h5><ul><li><p>-name “filename” 支持使用通配符glob；注意文件名一定加””</p></li><li><p>-iname “filename” 不区分字母大小写</p></li><li><p>-inum n             按节点号inode查找文件</p></li><li><p>-samefile name       查找相同inode的文件，即硬链接</p></li><li><p>-links n     查找链接数为n的文件</p></li><li><p>-regex “PATTERN” 使用正则表达式搜索</p></li></ul><h5 id="根据属主、属组查找："><a href="#根据属主、属组查找：" class="headerlink" title="根据属主、属组查找："></a>根据属主、属组查找：</h5><ul><li><p>-user USERNAME：查找属主为指定用户（UID）的文件</p></li><li><p>-group GRPNAME：查找属组为指定组（GID）的文件</p></li><li><p>-uid UID：       查找属主为指定UID号的文件</p></li><li><p>-gid GID：       查找属组为指定GID号的文件</p></li><li><p>-nouser：        查找没有属主的文件</p></li><li><p>-nogroup：     查找没有属组的文件</p></li><li><p>-nouser -o -nogroup       查找没有属主或没有属组的文件</p></li></ul><h5 id="根据文件类型查找："><a href="#根据文件类型查找：" class="headerlink" title="根据文件类型查找："></a>根据文件类型查找：</h5><h6 id="type-TYPE："><a href="#type-TYPE：" class="headerlink" title="-type TYPE："></a>-type TYPE：</h6><ul><li><p>f：   普通文件</p></li><li><p>d：  目录文件</p></li><li><p>l：   符号链接文件</p></li><li><p>s：   套接字文件</p></li><li><p>b：  块设备文件</p></li><li><p>c：  字符设备文件</p></li><li><p>p：  管道文件</p></li></ul><h5 id="搜索空文件或目录："><a href="#搜索空文件或目录：" class="headerlink" title="搜索空文件或目录："></a>搜索空文件或目录：</h5><h6 id="empty-查找空文件或空目录"><a href="#empty-查找空文件或空目录" class="headerlink" title="-empty             查找空文件或空目录"></a>-empty             查找空文件或空目录</h6><p>例：<code>find/app -type d -empty</code></p><h5 id="组合条件："><a href="#组合条件：" class="headerlink" title="组合条件："></a>组合条件：</h5><ul><li><p>-a     与</p></li><li><p>-o     或</p></li><li><p>-not,!       非</p></li></ul><h5 id="德摩根定律："><a href="#德摩根定律：" class="headerlink" title="德摩根定律："></a>德摩根定律：</h5><pre><code>（非A）或（非B）=非（A且B）（非A）且（非B）=非（A或B）</code></pre><p>注意：使用（）表示组合条件时，括号内两边一定要加空格,且括号一定要加转义符”\”。</p><h5 id="根据文件大小来查找："><a href="#根据文件大小来查找：" class="headerlink" title="根据文件大小来查找："></a>根据文件大小来查找：</h5><pre><code>-size[+|-]#UNIT</code></pre><p>常用单位：k，M，G，c（byte）</p><ul><li><p>1024c  (1024-1，1024]</p></li><li><p>+1024c    (1024,+)</p></li><li><p>-1024c     [0,1024-1]</p></li></ul><h5 id="根据时间戳查找："><a href="#根据时间戳查找：" class="headerlink" title="根据时间戳查找："></a>根据时间戳查找：</h5><h6 id="以“天”为单位："><a href="#以“天”为单位：" class="headerlink" title="以“天”为单位："></a>以“天”为单位：</h6><pre><code>-atime[+|-]#</code></pre><ul><li><p>3：[3,4)</p></li><li><p>+3:[4,+]</p></li><li><p>-4:[0,4)</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-mtime</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-ctime</span><br></pre></td></tr></table></figure><h6 id="以“分钟”为单位："><a href="#以“分钟”为单位：" class="headerlink" title="以“分钟”为单位："></a>以“分钟”为单位：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-atime</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-mtime</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-ctime</span><br></pre></td></tr></table></figure><h6 id="根据权限查找："><a href="#根据权限查找：" class="headerlink" title="根据权限查找："></a>根据权限查找：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-perm[/|+|-]MODE</span><br></pre></td></tr></table></figure><h6 id="MODE：精确权限匹配（数字法）"><a href="#MODE：精确权限匹配（数字法）" class="headerlink" title="MODE：精确权限匹配（数字法）"></a>MODE：精确权限匹配（数字法）</h6><p>/|+MODE：任何一类（u,g,o）对象的权限中只要能一位匹配即可，或关系；</p><p>CentOS6使用“+”，CentOS7使用“/”</p><p>-MODE：没类对象权限都有对应权限时，才会匹配，且关系；</p><h5 id="处理动作："><a href="#处理动作：" class="headerlink" title="处理动作："></a>处理动作：</h5><ul><li><p>-print                默认的处理动作，显示到屏幕</p></li><li><p>-ls             类似于对查找的文件执行”ls -l”命令</p></li><li><p>-delete             删除查找到的文件，不进行提示</p></li><li><p>-fls file     查找到的所有文件的长格式信息保存至指定文件中</p></li><li><p>-ok COMMAND{}\； {}代表前面搜索到的结果，-ok后必须跟\；结尾，语法要求；对查找到的每个文件执行COMMAND命令，每个文件执行命令时，会要求用户确认</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name “f*” -ok rm &#123;&#125; \；</span><br></pre></td></tr></table></figure><p>将f开头的文件删除，每个文件删除时会要求确认。</p><pre><code>-exec COMMAND{}\；</code></pre><p> 对每个搜索到的文件执行COMMAND命令，不要求用户确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name “f*” -exec mv &#123;&#125; /data/ \;</span><br></pre></td></tr></table></figure><p>将f开头的文件移动到data目录下，不要求用户确认</p><h3 id="二、压缩和解压缩"><a href="#二、压缩和解压缩" class="headerlink" title="二、压缩和解压缩"></a>二、压缩和解压缩</h3><p>Linux系统中支持多种文件解压缩工具，不同压缩工具压缩比有所不同，压缩后的后缀名也不一样。要注意的是：前面我们说过在linux系统中，文件是不通过后缀判断的，但在解压缩中是个例外，不同的解压缩工具对后缀是有要求的。</p><h3 id="1-Linux常见解压缩工具："><a href="#1-Linux常见解压缩工具：" class="headerlink" title="1.Linux常见解压缩工具："></a>1.Linux常见解压缩工具：</h3><ul><li><p>file-roller         图形化解压缩工具（类似于windows系统winrar）</p></li><li><p>compress/uncompress：       .Z后缀</p></li><li><p>gzip/gunzip：          .gz后缀（主流）</p></li><li><p>bzip2/bunzip2：              .bz2后缀（主流）</p></li><li><p>xz/unxz：                 .xz后缀（主流，新兴）</p></li><li><p>zip</p></li><li><p>tar</p></li><li><p>cpio</p></li></ul><h5 id="compress-uncompress"><a href="#compress-uncompress" class="headerlink" title="compress/uncompress"></a>compress/uncompress</h5><ul><li><p>-d     解压缩，相当于uncompress，压缩文件删除</p></li><li><p>-c     压缩结果输出至标准输出，不删除原文件</p></li></ul><p>例：<code>compress -c b &gt; b.Z</code> 解压文件b并且不删除</p><p>-v     显示详情</p><p>uncompress    解压缩，同compress -d，压缩文件删除</p><p><code>zcat file.Z &gt; file</code>  解压缩，原压缩文件不删除</p><h5 id="gzip-gunzip"><a href="#gzip-gunzip" class="headerlink" title="gzip/gunzip"></a>gzip/gunzip</h5><ul><li><p>-d     解压缩，相当于gunzip</p></li><li><p>-c     将压缩结果输出至标准输出，不删除原文件</p></li><li><p>-v     显示详情</p></li></ul><p><code>zcat file.gz &gt; file</code>  解压缩，原压缩文件不删除</p><h5 id="bzip2-bunzip"><a href="#bzip2-bunzip" class="headerlink" title="bzip2/bunzip"></a>bzip2/bunzip</h5><ul><li><p>-k     保留原文件</p></li><li><p>-d     解压缩</p></li></ul><p>bunzip2            解压缩</p><p>bzcat                 不解压缩前提查看文本内容，与gzip的zcat用法类似</p><h5 id="xz-unxz"><a href="#xz-unxz" class="headerlink" title="xz/unxz"></a>xz/unxz</h5><ul><li><p>-k     保留原文件</p></li><li><p>-d     解压缩</p></li></ul><p>unxz         解压缩，功能同xz -d</p><p>xzcat                 功能同zcat，bzcat</p><p>压缩比：xz &gt; bzip2 &gt; gzip &gt; compress</p><h5 id="zip-unzip"><a href="#zip-unzip" class="headerlink" title="zip/unzip"></a>zip/unzip</h5><p>打包压缩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -r /tsetdir/sysconfig /etc/sysconfig/</span><br></pre></td></tr></table></figure><p>解包解压缩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip sysconfig.zip</span><br></pre></td></tr></table></figure><p><code>cat /var/log/messages|zip messages</code> </p><p><code>unzip -p message &gt; message</code>      解压缩重定向</p><h5 id="tar工具：（Tape-ARchive，磁带归档的缩写）打包工具，并不压缩"><a href="#tar工具：（Tape-ARchive，磁带归档的缩写）打包工具，并不压缩" class="headerlink" title="tar工具：（Tape ARchive，磁带归档的缩写）打包工具，并不压缩"></a>tar工具：（Tape ARchive，磁带归档的缩写）打包工具，并不压缩</h5><p>tar[OPTION]…</p><ul><li><p>-c     创建一个打包文件</p></li><li><p>-C     指定解压的目录</p></li><li><p>-p     保留属性</p></li><li><p>-v     查看过程</p></li><li><p>-f      对哪个进行文件归档或打包</p></li><li><p>-t      查看列表</p></li></ul><h6 id="1-创建文档（打包文件或目录）"><a href="#1-创建文档（打包文件或目录）" class="headerlink" title="1.创建文档（打包文件或目录）"></a>1.创建文档（打包文件或目录）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cpvf /PATH/TO/SOMEFILE.tar FILE</span><br></pre></td></tr></table></figure><h6 id="2-追加文件到归档：注：不支持对压缩文件追加"><a href="#2-追加文件到归档：注：不支持对压缩文件追加" class="headerlink" title="2.追加文件到归档：注：不支持对压缩文件追加"></a>2.追加文件到归档：注：不支持对压缩文件追加</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -r -f /PATH/TO/SOMEFILE.tar FILE…</span><br></pre></td></tr></table></figure><h6 id="3-查看归档文件中的文件列表"><a href="#3-查看归档文件中的文件列表" class="headerlink" title="3.查看归档文件中的文件列表"></a>3.查看归档文件中的文件列表</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -t -f /PATH/TO/SOMEFILE.tar</span><br></pre></td></tr></table></figure><h6 id="4-展开归档（解包）"><a href="#4-展开归档（解包）" class="headerlink" title="4.展开归档（解包）"></a>4.展开归档（解包）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -x -f /PATH/TO/SOMEFILE.tar</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -x -f /PATH/TO/SOMEFILE.tar -C /PATH/</span><br></pre></td></tr></table></figure><h6 id="5-结合压缩工具实现：归档并压缩"><a href="#5-结合压缩工具实现：归档并压缩" class="headerlink" title="5.结合压缩工具实现：归档并压缩"></a>5.结合压缩工具实现：归档并压缩</h6><ul><li><p>-j：bizp2</p></li><li><p>-z：gzip</p></li><li><p>-J：xz</p></li></ul><h6 id="6-T选项指定输入文件，-X选项指定包含要排除的文件列表"><a href="#6-T选项指定输入文件，-X选项指定包含要排除的文件列表" class="headerlink" title="6.-T选项指定输入文件，-X选项指定包含要排除的文件列表"></a>6.-T选项指定输入文件，-X选项指定包含要排除的文件列表</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zcvf myback.tgz -T /root/includefilelist -X /root/excludefilelist</span><br></pre></td></tr></table></figure><h6 id="7-分割打的tar文件为多份小文件："><a href="#7-分割打的tar文件为多份小文件：" class="headerlink" title="7.分割打的tar文件为多份小文件："></a>7.分割打的tar文件为多份小文件：</h6><p>split</p><ul><li><p>-b Size -d tar-file-name prefix-name</p></li><li><p>-b 1M –d mybackup.tgz mybackup-parts</p></li><li><p>-b 1M mybackup.tgz mybackup-parts</p></li></ul><h6 id="8-合并tar分割的多个小文件："><a href="#8-合并tar分割的多个小文件：" class="headerlink" title="8.合并tar分割的多个小文件："></a>8.合并tar分割的多个小文件：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat mybackup-parts* &gt; mybackup.tar.gz</span><br></pre></td></tr></table></figure><h5 id="cpio"><a href="#cpio" class="headerlink" title="cpio"></a>cpio</h5><p>功能：复制文件从或到归档</p><p>cpio命令是通过重定向的方式将文件进行打包备份，还原恢复的工具，他可以解压以</p><p>“cpio”或者”tar”结尾的文件</p><p>cpio[option] &gt; 文件名或者设备名</p><p>cpio[option] &lt; 文件名或者设备名</p><p>选项</p><ul><li><p>-o     将文件拷贝打包成文件或者将文件输出到设备上</p></li><li><p>-i      解包，将打包文件解压或将设备上的备份还原到系统</p></li><li><p>-t      预览，查看文件内容或者输出到设备上的文件内容</p></li><li><p>-v     显示打包过程中的文件名称</p></li><li><p>-d     解包生产目录，在cpio还原时，自动的建立目录</p></li><li><p>-c     一种较新的存储方式</p></li></ul><p>示例：</p><p>将etc目录备份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ./etc -print |cpio -ov &gt;etc.cpio</span><br></pre></td></tr></table></figure><p>内容预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpio -tv &lt; etc.cpio</span><br></pre></td></tr></table></figure><p>解包文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpio -idv &lt;etc.cpio</span><br></pre></td></tr></table></figure><p>关于linux系统的文件查找和解压缩方法今天就先介绍到这里了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux系统文件查找与解压缩方法&quot;&gt;&lt;a href=&quot;#Linux系统文件查找与解压缩方法&quot; class=&quot;headerlink&quot; title=&quot;Linux系统文件查找与解压缩方法&quot;&gt;&lt;/a&gt;Linux系统文件查找与解压缩方法&lt;/h2&gt;&lt;blockquote&gt;

      
    
    </summary>
    
    
      <category term="文件查找" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE/"/>
    
      <category term="解压缩" scheme="http://yoursite.com/tags/%E8%A7%A3%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本编程基础（1）</title>
    <link href="http://yoursite.com/2018/04/10/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%EF%BC%881%EF%BC%89/"/>
    <id>http://yoursite.com/2018/04/10/shell脚本编程基础（1）/</id>
    <published>2018-04-10T11:00:00.000Z</published>
    <updated>2018-06-04T13:33:32.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="shell脚本编程基础（1）"><a href="#shell脚本编程基础（1）" class="headerlink" title="shell脚本编程基础（1）"></a>shell脚本编程基础（1）</h2><h3 id="一、编程基础"><a href="#一、编程基础" class="headerlink" title="一、编程基础"></a>一、编程基础</h3><h4 id="1-什么是程序？"><a href="#1-什么是程序？" class="headerlink" title="1.什么是程序？"></a>1.什么是程序？</h4><p>程序是指：指令+数据</p><p>程序编程风格可分为：</p><ul><li><p>过程式：以指令为中心，数据服务于指令（关注过程，小软件开发）</p></li><li><p>对象式：以数据为中心，指令服务于数据（关注结果，适合开发大型软件）</p></li></ul><h4 id="2-程序的执行方式"><a href="#2-程序的执行方式" class="headerlink" title="2.程序的执行方式"></a>2.程序的执行方式</h4><p>计算机：运行二进制命令</p><p>编程语言：</p><ul><li><p>低级：汇编</p></li><li><p>高级：</p></li></ul><p>编译：高级语言–&gt;编译器–&gt;目标代码 (由程序员完成编译器翻译过程，安全性相对好)</p><ul><li>java，C#</li></ul><p>解释：高级语言–&gt;解释器–&gt;机器代码 （由电脑完成解释器翻译过程，安全性不如编译型）</p><ul><li>shell，perl，python</li></ul><p>shell程序：提供了编程能力，解释执行</p><h4 id="3-编程基本概念"><a href="#3-编程基本概念" class="headerlink" title="3.编程基本概念"></a>3.编程基本概念</h4><p>编程逻辑处理方式：</p><ul><li><p>顺序执行</p></li><li><p>循环执行</p></li><li><p>选择执行</p></li></ul><p>shell编程：过程式、解释执行</p><p>编程语言的基本结构：种系统命令的组合</p><p>数据存储：变量、数组</p><p>表达式：a+b</p><p>语句：if</p><h3 id="二、脚本基本格式"><a href="#二、脚本基本格式" class="headerlink" title="二、脚本基本格式"></a>二、脚本基本格式</h3><h4 id="1-格式要求："><a href="#1-格式要求：" class="headerlink" title="1.格式要求："></a>1.格式要求：</h4><p>首行shebang机制（即声明脚本使用哪种编程语言）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#！/bin/python</span><br></pre></td></tr></table></figure><h4 id="2-shell脚本的用途有："><a href="#2-shell脚本的用途有：" class="headerlink" title="2.shell脚本的用途有："></a>2.shell脚本的用途有：</h4><ul><li><p>自动化常用命令</p></li><li><p>执行系统管理和故障排除</p></li><li><p>创建简单的应用程序</p></li><li><p>处理文本或文件</p></li></ul><h4 id="3-运行脚本："><a href="#3-运行脚本：" class="headerlink" title="3.运行脚本："></a>3.运行脚本：</h4><ul><li><p>1.给予执行权限，执行</p></li><li><p>2.直接运行解释器，将脚本作为解释器程序的参数运行</p></li></ul><h4 id="4-脚本规范："><a href="#4-脚本规范：" class="headerlink" title="4.脚本规范："></a>4.脚本规范：</h4><p>脚本代码开头约定：</p><ul><li><p>1.第一行一般为调用使用的语言</p></li><li><p>2.程序名，避免更改文件名为无法找到正确的文件</p></li><li><p>3.版本号</p></li><li><p>4.更改后的时间</p></li><li><p>5.作者相关信息</p></li><li><p>6.该程序的作用，及注意事项</p></li><li><p>7.最后是各版本的更新简要说明</p></li></ul><h4 id="5-脚本示例："><a href="#5-脚本示例：" class="headerlink" title="5.脚本示例："></a>5.脚本示例：</h4><pre><code>#!/bin/bash# ——————————————# Filename:    hello.sh # Revision:    1.1# Date:        2018/04/01# Author:      wangx# Email:       wangx@gmail.com# Website:     www.donlihuoguo.cn# Description: This is the first script# ——————————————# Copyright:   2018 wang# License:     GPL  echo “hello world”</code></pre><h4 id="6-脚本调试："><a href="#6-脚本调试：" class="headerlink" title="6.脚本调试："></a>6.脚本调试：</h4><ul><li><p>bash -n script  检查脚本的语法错误</p></li><li><p>bash -x script  调试脚本执行</p></li></ul><h3 id="三、变量"><a href="#三、变量" class="headerlink" title="三、变量"></a>三、变量</h3><h4 id="1-定义变量时，变量名不加-符号，如："><a href="#1-定义变量时，变量名不加-符号，如：" class="headerlink" title="1.定义变量时，变量名不加$符号，如："></a>1.定义变量时，变量名不加$符号，如：</h4><pre><code>my_name=”wangx”</code></pre><h4 id="2-变量命名规则："><a href="#2-变量命名规则：" class="headerlink" title="2.变量命名规则："></a>2.变量命名规则：</h4><ul><li><p>1.数字、字母、下划线，不能以数字开头</p></li><li><p>2.不能使用程序中的保留字：如if，for等</p></li><li><p>3.做到见名知意</p></li></ul><p>注意：</p><ul><li>引用变量一般需加$</li></ul><p>赋值变量：</p><ul><li><p>name=” ”   要加引号</p></li><li><p>存放多行字符时”$name”变量外加双引号可保留换行格式</p></li></ul><h4 id="3-bash变量的种类"><a href="#3-bash变量的种类" class="headerlink" title="3.bash变量的种类"></a>3.bash变量的种类</h4><p>局部变量、全局变量、本地变量、位置变量、特殊变量</p><ul><li><p>局部变量：只在当前shell进程生效，对当前shell之外其他shell进程，包括父shell和子shell都无效</p></li><li><p>全局变量：生效范围在当前shell进程及其子进程；父进程变量可以传给子进程，子进程变量不可向上传给父进程</p></li><li><p>数字变量：\$10以上的变量需要加花括号${10}</p></li><li><p>特殊变量：\$1,\$@,\$*,\$#,\$0等、</p></li><li><p>\$1,\$2,…：对应第1、第2参数，shift[n]换位置</p></li><li><p>$0：命令本身</p></li><li><p>$*：传递给脚本的所有参数，每个参数合为一个字符串</p></li><li><p>$@：传递给脚本的所有参数，每个参数为独立字符串</p></li><li><p>$#：传递给脚本的参数的个数</p></li><li><p>\$@$*只在被双引号包起来的时候才会有差异</p></li></ul><p>set–         清空所有位置变量</p><p>注：怎么判断变量前加不加$符号？</p><p>如果命令能识别变量就不加\$,如果命令不能识别变量加\$；</p><p>养成好习惯：编完脚本将变量用unset删掉；</p><p>（）中使用的命令为一次性的，小括号中相当于在子进程中执行命令</p><p>注：小括号中所说的子进程与常规的子进程不是一回事</p><p>例如：<code>x=1;echo $$;(echo $$)</code>中显示进程号一致</p><p>{ ；}中使用命令时在当前shell环境中执行，不开启子进程影响当前shell环境</p><h4 id="4-变量运算"><a href="#4-变量运算" class="headerlink" title="4.变量运算"></a>4.变量运算</h4><p>bash中的算术运算：help let</p><p>+，-，*，/，%取余，**乘方</p><p>实现算术运算：</p><ul><li><p>1.let var=算术表达式</p></li><li><p>2.var=$[算术表达式]</p></li><li><p>3.var=$((算术表达式))</p></li></ul><p>注：算术运算过程中，空格尽量删除</p><p>条件测试过程中，能加空格地方尽量加空格</p><p>正则条件测试时，正则表达式不加引号</p><h3 id="四、条件测试"><a href="#四、条件测试" class="headerlink" title="四、条件测试"></a>四、条件测试</h3><h4 id="1-测试命令："><a href="#1-测试命令：" class="headerlink" title="1.测试命令："></a>1.测试命令：</h4><pre><code>test EXPRESSION[ EXPRESSION ]</code></pre><p><code>[[ EXPRESSION ]]</code>   双括号一般用于左侧字符匹配右侧扩展正则表达式</p><p>注：EXPRESSION前后必须有空白字符</p><p>评估布尔声明，以便用在条件性执行中：</p><ul><li><p>若真，则返回0</p></li><li><p>若假，则返回1</p></li></ul><p>例如：<code>#a=1;b=2</code></p><pre><code>#[ $a -eq $b ]#echo $?#1#a=2;b=2#[ $a -eq $b ]#echo $?#0</code></pre><p>条件性的执行操作符</p><ul><li><p>&amp;&amp;代表条件性的AND THEN，前面执行结果$?=0时，继续执行&amp;&amp;后命令</p></li><li><p>||代表条件性的OR ELSE，前面执行结果$?不为0时，执行||后命令</p></li></ul><p>test  与[  ]效果相同，注意括号里内容两边需加空格</p><ul><li>-v VAR      变量VAR是否设置</li></ul><h4 id="2-数值测试："><a href="#2-数值测试：" class="headerlink" title="2.数值测试："></a>2.数值测试：</h4><ul><li><p>-gt    是否大于（greater-than）</p></li><li><p>-ge   是否大于等于（greater-than-or-equal）</p></li><li><p>-eq   是否等于（equal）</p></li><li><p>-ne   是否不等于（not-equal）</p></li><li><p>-lt     是否小于（less-than）</p></li><li><p>-le    是否小于等于（less-than-or-equal）</p></li></ul><h4 id="3-字符串测试："><a href="#3-字符串测试：" class="headerlink" title="3.字符串测试："></a>3.字符串测试：</h4><ul><li><p>==    是否等于</p></li><li><p>>       ascii码是否大于ascii码</p></li><li><p>&lt;       是否小于</p></li><li><p>!=     是否不等于</p></li><li><p>=~    左侧字符串是否能够被右侧的PATTERN所匹配</p></li></ul><p>注：使用PATTERN匹配时，需要加双括号[[ ]]；使用扩展的正则表达式，且正则表达式不能加引号</p><ul><li><p>-z      字符串是否为空，空为真，不空为假</p></li><li><p>-n     字符串是否为不空，不空为真，空为假</p></li></ul><p>注：用于字符串比较时的用到的操作应该都使用引号</p><p>字符串是否为空还可用[ “$name” == “” ]来测试。</p><h4 id="4-文件相关测试："><a href="#4-文件相关测试：" class="headerlink" title="4.文件相关测试："></a>4.文件相关测试：</h4><p>存在性测试：</p><ul><li><p>-a FILE     同-e</p></li><li><p>-e FILE 文件存在性测试，存在为真，否则为假</p></li></ul><h4 id="5-存在性及类别测试："><a href="#5-存在性及类别测试：" class="headerlink" title="5.存在性及类别测试："></a>5.存在性及类别测试：</h4><ul><li><p>-b FILE 是否存在且为块设备文件</p></li><li><p>-c FILE 是否存在且为字符设备文件</p></li><li><p>-d FILE 是否存在且为目录文件</p></li><li><p>-f FILE 是否存在且为普通文件</p></li><li><p>-h FILE 同-L</p></li><li><p>-L FILE      是否存在且为符号链接文件</p></li><li><p>-p FILE 是否存在且为管道文件</p></li><li><p>-S FILE 是否存在且为套接字文件</p></li></ul><h4 id="6-文件权限测试："><a href="#6-文件权限测试：" class="headerlink" title="6.文件权限测试："></a>6.文件权限测试：</h4><ul><li><p>-r FILE      是否存在且有可读权限</p></li><li><p>-w FILE 是否存在且有可写权限</p></li><li><p>-x FILE 是否存在且有可执行权限</p></li></ul><h4 id="7-文件特殊权限测试："><a href="#7-文件特殊权限测试：" class="headerlink" title="7.文件特殊权限测试："></a>7.文件特殊权限测试：</h4><ul><li><p>-u FILE 是否存在且拥有suid权限</p></li><li><p>-g FILE 是否存在且拥有sgid权限</p></li><li><p>-k FILE 是否存在且拥有sticky权限</p></li></ul><h4 id="8-文件大小测试："><a href="#8-文件大小测试：" class="headerlink" title="8.文件大小测试："></a>8.文件大小测试：</h4><ul><li>-s FILE 是否存在且非空</li></ul><h4 id="9-文件是否打开："><a href="#9-文件是否打开：" class="headerlink" title="9.文件是否打开："></a>9.文件是否打开：</h4><ul><li><p>-t fd：fd 文件描述符是否在终端已经打开</p></li><li><p>-N FILE 文件自从上一次被读取之后是否被修改过</p></li><li><p>-O FILE 当前有效用户是否为文件属主</p></li><li><p>-G FILE 当前有效用户是否文文件属组</p></li></ul><p>注意：文件测试后跟空字符时，也反馈为True，如果要保证一个文件存在且满足测试条件时，</p><p>应表示为：例：<code>[ -n “file” -a -d “file” ]</code></p><p>file文件是否存在且为目录文件</p><h4 id="10-双目测试："><a href="#10-双目测试：" class="headerlink" title="10.双目测试："></a>10.双目测试：</h4><ul><li><p>FILE1 -ef FILE2                 FILE1是否是FILE2的硬链接</p></li><li><p>FILE1 -nt FILE2                 FILE1是否新于FILE2（mtime）</p></li><li><p>FILE1 -ot FILE2                 FILE1是否旧于FILE2</p></li></ul><h4 id="11-Bash的组合测试条件："><a href="#11-Bash的组合测试条件：" class="headerlink" title="11.Bash的组合测试条件："></a>11.Bash的组合测试条件：</h4><h5 id="第一种方式："><a href="#第一种方式：" class="headerlink" title="第一种方式："></a>第一种方式：</h5><ul><li><p>COMMAND1 &amp;&amp; COMMAND2      并且</p></li><li><p>COMMAND1 || COMMAND2        或者</p></li><li><p>！COMMAND         非</p></li></ul><h5 id="第二种方式："><a href="#第二种方式：" class="headerlink" title="第二种方式："></a>第二种方式：</h5><ul><li><p>[ EXPRESSION -a EXPRESSION ]     并且</p></li><li><p>[ EXPRESSION -o EXPRESSION ]     或者</p></li><li><p>[ ！EXPRESSION ]          非</p></li></ul><p>注：优先级为：”!”最高，”-a”次之，”-o”最低</p><h5 id="短路与-amp-amp"><a href="#短路与-amp-amp" class="headerlink" title="短路与&amp;&amp;"></a>短路与&amp;&amp;</h5><ul><li><p>0&amp;&amp;0=0</p></li><li><p>0&amp;&amp;1=0</p></li><li><p>1&amp;&amp;0=0</p></li><li><p>1&amp;&amp;1=1</p></li></ul><p>cmd1 &amp;&amp; cmd2</p><p>如果cmd1为假，cmd2不需要执行，反之cmd1为真，需要cmd2执行</p><h5 id="短路或"><a href="#短路或" class="headerlink" title="短路或||"></a>短路或||</h5><ul><li><p>0||0=0</p></li><li><p>0||1=1</p></li><li><p>1||0=1</p></li><li><p>1||1=1</p></li></ul><p>cmd1 || cmd2</p><p>如果cmd1为真，cmd2不需要执行，反之cmd1为假，需要cmd2执行</p><h5 id="异或-XOR"><a href="#异或-XOR" class="headerlink" title="异或 XOR ^"></a>异或 XOR ^</h5><p>如果相同为假，反则为真</p><ul><li><p>0 ^ 1 = 1</p></li><li><p>1 ^ 0 = 1</p></li><li><p>1 ^ 1 = 0</p></li><li><p>0 ^ 0 = 0</p></li></ul><p>注意：[  ]和test用变量时，最好加双引号””避免出问题</p><pre><code>false || { echo cmd1 ; echo cmd2 ; }false || (echo cmd1 ; echo cmd2)</code></pre><h4 id="12-使用read命令来接受输入"><a href="#12-使用read命令来接受输入" class="headerlink" title="12.使用read命令来接受输入"></a>12.使用read命令来接受输入</h4><p>read         使用read来把输入值分配给一个或多个shell变量</p><ul><li><p>-p     指定要显示的提示</p></li><li><p>-s    静默输出，一般用于密码</p></li><li><p>-n     N指定输入的字符长度N</p></li><li><p>-d     ‘字符’输入结束符，类型与输入重定向的&lt;&lt;EOF</p></li><li><p>-t N  TIMEOUT为N秒，N秒内无输入将自动退出</p></li></ul><p>read命令从标准输入中读取单词，并给每个单词分配一个变量</p><p>例如：</p><p><code>read -p “Enter a filename:” FILE</code>    标准输入将赋予变量$FILE</p><p>read命令从标准输入中读取单词，并给每个单词分配一个变量</p><p>read 给多个变量赋值的方法：</p><p>（1）将多个变量输入一个文件中，用空格分开，输出重定向</p><pre><code>read a b c &lt; f</code></pre><p>（2）用“&gt;&gt;&gt;”分开：</p><pre><code>read a b c &lt;&lt;&lt; “x y z”</code></pre><h3 id="五、配置用户环境"><a href="#五、配置用户环境" class="headerlink" title="五、配置用户环境"></a>五、配置用户环境</h3><h4 id="1-bash的配置文件"><a href="#1-bash的配置文件" class="headerlink" title="1.bash的配置文件"></a>1.bash的配置文件</h4><p>按生效范围划分，存在两类：</p><h5 id="全局配置："><a href="#全局配置：" class="headerlink" title="全局配置："></a>全局配置：</h5><ul><li><p>/etc/profile</p></li><li><p>/etc/profile.d/*.sh</p></li><li><p>/etc/bashrc</p></li></ul><h5 id="个人配置："><a href="#个人配置：" class="headerlink" title="个人配置："></a>个人配置：</h5><ul><li><p>~/.profile</p></li><li><p>~/.bashrc</p></li></ul><h4 id="2-shell登录的两种方式："><a href="#2-shell登录的两种方式：" class="headerlink" title="2.shell登录的两种方式："></a>2.shell登录的两种方式：</h4><h5 id="交互式登录："><a href="#交互式登录：" class="headerlink" title="交互式登录："></a>交互式登录：</h5><ul><li><p>1.直接输入账号密码登录</p></li><li><p>2.su – username 切换的用户</p></li></ul><p>执行顺序：/etc/profile –&gt; /etc/profile.d/*.sh –&gt; ~/.bash_profile –&gt; ~/.bashrc–&gt; /etc/bashrc</p><h5 id="非交互式的登录："><a href="#非交互式的登录：" class="headerlink" title="非交互式的登录："></a>非交互式的登录：</h5><ul><li><p>1.su usernme</p></li><li><p>2.图形界面打开的终端</p></li><li><p>3.执行脚本</p></li><li><p>4.任何其他的bash实例</p></li></ul><p>执行顺序：~/.bashrc –&gt; /etc/bashrc –&gt; /etc/profile.d/*.sh</p><p>注：只在交互式登录生效：/etc/profile，~/.bash_profile</p><h5 id="配置执行文件按功能划分，存在两类："><a href="#配置执行文件按功能划分，存在两类：" class="headerlink" title="配置执行文件按功能划分，存在两类："></a>配置执行文件按功能划分，存在两类：</h5><p>profile类和bashrc类</p><p>Profile类：为交互式登录的shell提供配置</p><ul><li><p>全局生效：/etc/profile ，/etc/profile.d/*.sh</p></li><li><p>个人生效：~/.bash_profile</p></li></ul><p>功用：</p><ul><li><p>（1）用于定义环境变量</p></li><li><p>（2）运行命令或脚本</p></li></ul><p>Bashrc类：为非交互式和交互式登录的shell提供配置</p><ul><li><p>全局生效：/etc/bashrc</p></li><li><p>个人生效：~/.bashrc</p></li></ul><p>功用：</p><ul><li><p>（1）定义命令别名和函数</p></li><li><p>（2）定义本地变量</p></li></ul><p>修改profile和bashrc文件后使生效的两种方法：</p><ul><li><p>（1）重新启动shell进程</p></li><li><p>（2）.或sourc；例：.~/.bashrc</p></li></ul><p>注意： .或source执行脚本表示将在当前进程运行，而不是开启一个子进程运行（配置文件一般用此方式执行）</p><h5 id="bash执行脚本则是开启一个进程执行（运行脚本一般用此方式执行）"><a href="#bash执行脚本则是开启一个进程执行（运行脚本一般用此方式执行）" class="headerlink" title="bash执行脚本则是开启一个进程执行（运行脚本一般用此方式执行）"></a>bash执行脚本则是开启一个进程执行（运行脚本一般用此方式执行）</h5><p>Bash退出任务<br>保存在~./.bash_logout文件中（用户）</p><p>在退出登录shell时运行</p><p>可用于：</p><ul><li><p>创建自动备份</p></li><li><p>清除临时文件</p></li><li><p>清除操作历史等</p></li><li><p>特殊的变量$-</p><p>  #echo $-</p><p>  #hibBH</p></li><li><p>h：hash缓存功能；set -h，关闭hash功能；set +h，开启hash功能</p></li><li><p>i：代表交互式shell</p></li><li><p>m：打开监控模式</p></li><li><p>B：大括号扩展</p></li><li><p>H：history，命令操作历史</p></li></ul><h5 id="bash展开命令的优先级："><a href="#bash展开命令的优先级：" class="headerlink" title="bash展开命令的优先级："></a>bash展开命令的优先级：</h5><ul><li><p>把命令行分成单个命令词</p></li><li><p>展开别名</p></li><li><p>展开大括号{}</p></li><li><p>展开波浪符~</p></li><li><p>命令替换$()和</p></li><li><p>再次把命令行分成命令词</p></li><li><p>展开文件通配（*、？等）</p></li><li><p>I/O重定向</p></li><li><p>运行命令</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;shell脚本编程基础（1）&quot;&gt;&lt;a href=&quot;#shell脚本编程基础（1）&quot; class=&quot;headerlink&quot; title=&quot;shell脚本编程基础（1）&quot;&gt;&lt;/a&gt;shell脚本编程基础（1）&lt;/h2&gt;&lt;h3 id=&quot;一、编程基础&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/tags/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>vim文本编辑器及文本处理常用命令</title>
    <link href="http://yoursite.com/2018/04/08/vim%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E5%8F%8A%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/04/08/vim文本编辑器及文本处理常用命令/</id>
    <published>2018-04-08T11:00:00.000Z</published>
    <updated>2018-06-04T12:48:52.630Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vim文本编辑器及文本处理常用命令"><a href="#vim文本编辑器及文本处理常用命令" class="headerlink" title="vim文本编辑器及文本处理常用命令"></a>vim文本编辑器及文本处理常用命令</h2><blockquote><p>Vim是从 vi发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p></blockquote><h3 id="一、文本编辑器的种类主要有"><a href="#一、文本编辑器的种类主要有" class="headerlink" title="一、文本编辑器的种类主要有"></a>一、文本编辑器的种类主要有</h3><ul><li><p>行编辑器：sed</p></li><li><p>全屏编辑器：nano，vi</p></li><li><p>vim – Vi Improved（vi文本编辑器的升级版）</p></li></ul><h3 id="二、Vim文本编辑器相关命令："><a href="#二、Vim文本编辑器相关命令：" class="headerlink" title="二、Vim文本编辑器相关命令："></a>二、Vim文本编辑器相关命令：</h3><p>Vim是从 vi发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><h4 id="1-vim打开文件："><a href="#1-vim打开文件：" class="headerlink" title="1.vim打开文件："></a>1.vim打开文件：</h4><p>vim[option]…FILE…</p><ul><li><p>+#    打开文件后，让光标处于第#行行首</p></li><li><p>-o     后跟多个文件可水平显示多个窗口</p></li><li><p>-O    后跟多个文件可垂直显示多个窗口</p></li><li><p>-b     以二进制方式打开文件</p></li><li><p>-d file1 file2… 比较多个文件</p></li></ul><p>注：当一个文件不存在时，用vim打开编辑存盘后会自动创建它</p><h4 id="2-vim的三种主要模式："><a href="#2-vim的三种主要模式：" class="headerlink" title="2.vim的三种主要模式："></a>2.vim的三种主要模式：</h4><ul><li><p>命令（normal）模式：默认模式，可移动光标，剪切/粘贴文本。左下角显示文本路径，行数，字符数，右下角显示光标位置</p></li><li><p>插入（insert）模式：也叫编辑模式，修改文本。左下角显示 –INSERT–</p></li><li><p>扩展命令（extended command）模式：保存、退出等。左下角显示 “：”</p></li></ul><h4 id="3-vim模式切换："><a href="#3-vim模式切换：" class="headerlink" title="3.vim模式切换："></a>3.vim模式切换：</h4><p>命令模式—&gt;插入模式</p><ul><li><p>i：在光标处输入</p></li><li><p>I：在光标所在行首输入</p></li><li><p>a：在光标所在处后输入</p></li><li><p>A：在光标所在行行尾输入</p></li><li><p>o：在光标所在行的下方打开一个新行</p></li><li><p>O：在光标所在行的上方打开一个新行</p></li></ul><p>插入模式—&gt;命令模式</p><ul><li>ESC</li></ul><p>命令模式—&gt;扩展命令模式</p><ul><li>：</li></ul><p>扩展命令模式—&gt;命令模式</p><ul><li>ESC，Enter</li></ul><h4 id="4-vim的其他一些模式："><a href="#4-vim的其他一些模式：" class="headerlink" title="4.vim的其他一些模式："></a>4.vim的其他一些模式：</h4><ul><li><p>替换（replace）模式：        命令模式下R切换，可随意替换字符；右下角显示–REPALCE–</p></li><li><p>可视化（visual）模式：v    切换面向字符的可视化模式;右下角显示–VISUAL–V  切换面向行的可视化模式</p></li><li><p>ctrl+v   面试块的可视化模式</p></li></ul><h4 id="5-vim关闭文件"><a href="#5-vim关闭文件" class="headerlink" title="5.vim关闭文件"></a>5.vim关闭文件</h4><p>扩展模式</p><p>按”：”从命令模式进入Ex模式</p><ul><li><p>wq   存盘退出</p></li><li><p>q       文本未修改，不存盘退出</p></li><li><p>q！  文本已被修改，想不存盘退出</p></li><li><p>w file      文件另存为file</p></li><li><p>r file 读取file文件内容到当前文件</p></li><li><p>！command    直接在扩展模式下执行命令</p></li><li><p>r！command  读入命令的输入到当前文件光标处</p></li></ul><p>命令模式下也可关闭文件（不推荐使用）</p><ul><li><p>ZZ     保存退出</p></li><li><p>ZQ    不保存退出</p></li></ul><h4 id="6-命令模式常用命令："><a href="#6-命令模式常用命令：" class="headerlink" title="6.命令模式常用命令："></a>6.命令模式常用命令：</h4><p>单词间跳转：</p><ul><li><p>w      下一个单词词首</p></li><li><p>e       下一个单词词尾</p></li><li><p>b       当前或前一个单词的词首</p></li></ul><p>当前页跳转：</p><ul><li><p>H      页首</p></li><li><p>M     页中间</p></li><li><p>L       页底</p></li></ul><p>行首行尾跳转：</p><ul><li><p>^       跳转至行首第一个非空白字符</p></li><li><p>0       跳转至行首</p></li><li><p>$       跳转至行</p></li></ul><p>行间移动：</p><ul><li><p>#G    调至第#行；扩展模式下可执行 ：G</p></li><li><p>G      最后一行</p></li><li><p>1G，gg    第一行</p></li></ul><p>命令模式下字符操作</p><ul><li><p>x：删除光标所在处字符</p></li><li><p>#x：删除从光标所在处开始#个字符</p></li><li><p>xp：交换光标所在处字符和它后面字符的位置（原理是剪切粘贴）</p></li><li><p>~：波浪符转换大小写</p></li><li><p>J：删除当前行后的换行符</p></li><li><p>r：替换光标所在处字符</p></li></ul><ul><li><p>d：删除命令</p></li><li><p>d$    当前光标删除至行尾</p></li><li><p>d^    当前光标删除到非空行首</p></li><li><p>d0    当前光标删除到行首</p></li><li><p>dw   删除单词</p></li><li><p>dd    删除光标所在的行</p></li><li><p>#dd  多行删除，一下删除#行</p></li></ul><ul><li><p>y：复制命令（用法类似d删除）</p></li><li><p>y$     复制当前光标到行尾</p></li><li><p>y^     复当前光标位置到非空行首</p></li><li><p>yw    复制单词</p></li><li><p>yy     复制光标所在的行</p></li></ul><ul><li><p>p：粘贴</p></li><li><p>p       粘贴至光标所在行下一行</p></li><li><p>P       粘贴至光标所在行上一行</p></li></ul><ul><li><p>u：撤销更改</p></li><li><p>#u    撤销之前多次修改</p></li><li><p>U      撤销光标落在这行后所有此行的修改</p></li><li><p>Ctrl+r       返回上次撤销</p></li></ul><h4 id="7-扩展命令模式常用命令："><a href="#7-扩展命令模式常用命令：" class="headerlink" title="7.扩展命令模式常用命令："></a>7.扩展命令模式常用命令：</h4><p>格式：地址定界+编辑命令</p><p>地址定界</p><ul><li><p>：#  跳到第#行</p></li><li><p>：#，#    第左侧第#行，到右侧第#行；2,5表示第2到第5行</p></li><li><p>：#，+#  从左侧第#行，加上右侧#的行；2，+3表示第2到5行</p></li><li><p>：.   当前行</p></li><li><p>$       最后一行</p></li><li><p>%      全文，相当于1，$</p></li><li><p>：/pat1/,/pat2/               从pat1匹配到的行开始，到第一次被pat2匹配到的行</p></li><li><p>：/pat1/，#   可混用</p></li></ul><p>使用方式：后跟一个编辑命令</p><ul><li><p>d       删除</p></li><li><p>y       复制</p></li><li><p>w file        将范围内行另存至指定文件中</p></li><li><p>r file 在指定位置插入匹配内容</p></li></ul><p>查找字符</p><ul><li><p>/PATTERN：从光标所在处向文件尾部查找</p></li><li><p>？PATTERN：从光标所在处向文件首部查找</p></li><li><p>n：与命令同方向</p></li><li><p>N：与命令反方向</p></li></ul><p>查找并替换</p><ul><li>s/要查找的内容/替换为的内容/修饰符</li></ul><p>修饰符：</p><ul><li><p>i：忽略大小写</p></li><li><p>g：全局替换每一行的第一次出现的匹配</p></li><li><p>gc：全局替换所有匹配，每次替换前询问</p></li></ul><p>查找替换的分隔符/可用其他分隔符代替：如#，@</p><p>命令模式</p><ul><li><p>u：撤销更改</p></li><li><p>ctrl+r        恢复上一次撤销</p></li><li><p>.        重复执行上一次操作</p></li></ul><h4 id="8-vim的剪贴板"><a href="#8-vim的剪贴板" class="headerlink" title="8.vim的剪贴板"></a>8.vim的剪贴板</h4><p>有26个命名剪贴板和一个无命名剪贴板，存放不同的剪切内容，可以不同会话间分享</p><ul><li><p>”myy 表示复制光标所在行到m剪贴板</p></li><li><p>“mp 表示将m剪贴板内容粘贴</p></li><li><p>3″tyy 表示复制3行内容到t剪贴板</p></li><li><p>“tp   表示将t剪贴板内容粘贴</p></li></ul><h4 id="9-vim多文件模式"><a href="#9-vim多文件模式" class="headerlink" title="9.vim多文件模式"></a>9.vim多文件模式</h4><p>vim FILE1 FILE2 FILE3</p><ul><li><p>：next     下一个文件</p></li><li><p>：prev     上一个文件</p></li><li><p>：first      第一个文件</p></li><li><p>：last       最后一个文件</p></li><li><p>：wall      保存所有文件</p></li><li><p>：qall       退出所有</p></li><li><p>：wqall   保存退出</p></li></ul><p>单文件的窗口分隔：方便对照文件内容</p><ul><li><p>ctrl+w放开后按s           水平分割</p></li><li><p>ctrl+w放开后按v          垂直分割</p></li><li><p>ctrl+w放开后按q          取消相邻窗口</p></li><li><p>ctrl+w放开后按w                取消全部窗口；与：wqall相同</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/QQ%E5%9B%BE%E7%89%8720180408193404.png" alt="enter image description here"></p><h3 id="三、定制vim的工作特性"><a href="#三、定制vim的工作特性" class="headerlink" title="三、定制vim的工作特性"></a>三、定制vim的工作特性</h3><h4 id="1-扩展命令模式下执行："><a href="#1-扩展命令模式下执行：" class="headerlink" title="1.扩展命令模式下执行："></a>1.扩展命令模式下执行：</h4><ul><li><p>set number      添加行号</p></li><li><p>set nonumber 取消行号</p></li></ul><p>此操作仅临时有效，退出重进vim后，操作失效，要想永久保存vim的工作特性，需写入配置文件中</p><h4 id="2-配置文件：使vim工作特性永久有效"><a href="#2-配置文件：使vim工作特性永久有效" class="headerlink" title="2.配置文件：使vim工作特性永久有效"></a>2.配置文件：使vim工作特性永久有效</h4><ul><li><p>全局：/etc/vimrc</p></li><li><p>个人：~/.vimrc</p></li></ul><h4 id="3-其他一些常用vim特性命令："><a href="#3-其他一些常用vim特性命令：" class="headerlink" title="3.其他一些常用vim特性命令："></a>3.其他一些常用vim特性命令：</h4><h5 id="忽略大小写"><a href="#忽略大小写" class="headerlink" title="忽略大小写"></a>忽略大小写</h5><ul><li><p>set ic        忽略大小写</p></li><li><p>set noic 取消忽略大小写</p></li></ul><h5 id="自动缩进"><a href="#自动缩进" class="headerlink" title="自动缩进"></a>自动缩进</h5><ul><li><p>set ai        自动和上一行对齐</p></li><li><p>set noai   取消对齐</p></li></ul><h5 id="文件格式转换"><a href="#文件格式转换" class="headerlink" title="文件格式转换"></a>文件格式转换</h5><ul><li><p>set fileformat=unix         Windows文件转换Linux文件</p></li><li><p>set fileformat=dos Linux文件转换Windows文件</p></li></ul><h5 id="设置光标所在行下划线"><a href="#设置光标所在行下划线" class="headerlink" title="设置光标所在行下划线"></a>设置光标所在行下划线</h5><ul><li><p>set cursorline           启用</p></li><li><p>set no cursorline     禁用</p></li></ul><h5 id="复制时保留格式："><a href="#复制时保留格式：" class="headerlink" title="复制时保留格式："></a>复制时保留格式：</h5><ul><li><p>set paste          启用</p></li><li><p>set nopaste              禁用</p></li></ul><h5 id="查看全部已配置的vim工作特性"><a href="#查看全部已配置的vim工作特性" class="headerlink" title="查看全部已配置的vim工作特性"></a>查看全部已配置的vim工作特性</h5><ul><li><p>：set        显示全部已配置set</p></li><li><p>：help     查看帮助</p></li></ul><h3 id="四、文本处理常用命令"><a href="#四、文本处理常用命令" class="headerlink" title="四、文本处理常用命令"></a>四、文本处理常用命令</h3><h4 id="cut-按列抽取文本"><a href="#cut-按列抽取文本" class="headerlink" title="cut            按列抽取文本"></a>cut            按列抽取文本</h4><ul><li><p>-d     指定分隔符</p></li><li><p>-f      指定第几列</p></li><li><p>–output-delimiter=’ ‘      指定单引号中符号作为分隔符</p></li></ul><h4 id="diff-比较两个文件直接的差别，后跟file1，file2"><a href="#diff-比较两个文件直接的差别，后跟file1，file2" class="headerlink" title="diff           比较两个文件直接的差别，后跟file1，file2"></a>diff           比较两个文件直接的差别，后跟file1，file2</h4><ul><li>-u</li></ul><h4 id="head"><a href="#head" class="headerlink" title="head"></a>head</h4><ul><li><p>-n     显示头n行</p></li><li><p>-c     显示头n个字节</p></li></ul><h4 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h4><ul><li><p>-n     显示最后n行</p></li><li><p>-c     显示最后n个字节</p></li><li><p>-f      跟踪文本的变化（追加内容），可写为tailf</p></li><li><p>-F     跟踪文件名</p></li></ul><h4 id="sort-排序"><a href="#sort-排序" class="headerlink" title="sort          排序"></a>sort          排序</h4><ul><li><p>-t      指定分隔符（类似cut -d）</p></li><li><p>-k     指定第几列（类似cut -f）</p></li><li><p>-n     以数字排序</p></li><li><p>-r      倒序排列</p></li><li><p>-f      忽略大小写</p></li><li><p>-u     删除重复的行压缩到一行</p></li><li><p>-R     随机排序</p></li></ul><h4 id="paste-合并两个文件同行号的列到一行"><a href="#paste-合并两个文件同行号的列到一行" class="headerlink" title="paste                合并两个文件同行号的列到一行"></a>paste                合并两个文件同行号的列到一行</h4><ul><li><p>-s      合并两个文件按一行显示</p></li><li><p>-d     指定分隔符，类似cut -d的用法</p></li></ul><h4 id="grep-基于行过滤的文本过滤工具（grep文本处理三剑客之一）"><a href="#grep-基于行过滤的文本过滤工具（grep文本处理三剑客之一）" class="headerlink" title="grep         基于行过滤的文本过滤工具（grep文本处理三剑客之一）"></a>grep         基于行过滤的文本过滤工具（grep文本处理三剑客之一）</h4><ul><li><p>-v     显示不被匹配到的行</p></li><li><p>-i      忽略字符大小写</p></li><li><p>-n     添加匹配到的行的行号</p></li><li><p>-c     统计被匹配到的行数</p></li><li><p>-o     仅显示匹配到的字符</p></li><li><p>-q     静默模式</p></li><li><p>-A#   包含此匹配行和后#行</p></li><li><p>-B#   包含此匹配行和前#行</p></li><li><p>-C#   包含此匹配行和前后#行</p></li><li><p>-e     实现多个匹配字符的或者（or）关系 -e a -e b：a或b</p></li><li><p>-w    匹配整个单词，数字、字母、下划线都算单词一部分</p></li><li><p>-r      递归目录</p></li><li><p>-E     使用ERE，扩展的正则表达式</p></li><li><p>-F     相当于fgrep</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;vim文本编辑器及文本处理常用命令&quot;&gt;&lt;a href=&quot;#vim文本编辑器及文本处理常用命令&quot; class=&quot;headerlink&quot; title=&quot;vim文本编辑器及文本处理常用命令&quot;&gt;&lt;/a&gt;vim文本编辑器及文本处理常用命令&lt;/h2&gt;&lt;blockquote&gt;

      
    
    </summary>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
      <category term="文本处理" scheme="http://yoursite.com/tags/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>文本三剑客之grep及正则表达式用法</title>
    <link href="http://yoursite.com/2018/04/07/%E6%96%87%E6%9C%AC%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8Bgrep%E5%8F%8A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/07/文本三剑客之grep及正则表达式用法/</id>
    <published>2018-04-07T11:00:00.000Z</published>
    <updated>2018-06-04T12:36:25.556Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文本三剑客之grep及正则表达式用法"><a href="#文本三剑客之grep及正则表达式用法" class="headerlink" title="文本三剑客之grep及正则表达式用法"></a>文本三剑客之grep及正则表达式用法</h2><h4 id="一、文本三剑客之grep介绍"><a href="#一、文本三剑客之grep介绍" class="headerlink" title="一、文本三剑客之grep介绍"></a>一、文本三剑客之grep介绍</h4><blockquote><p>grep （缩写来自Globally search a Regular Expression and Print）是一种强大的文本搜索工具，它能使用特定模式匹配（包括正则表达式）搜索文本，并默认输出匹配行。</p></blockquote><h5 id="1-Linux文本处理三剑客："><a href="#1-Linux文本处理三剑客：" class="headerlink" title="1.Linux文本处理三剑客："></a>1.Linux文本处理三剑客：</h5><ul><li><p>grep：文本过滤工具</p></li><li><p>sed：文本编辑工具（传送门）</p></li><li><p>awk：Linux上的实现gawk，文本报告生成器（传送门）</p></li></ul><h5 id="grep，基于行过滤的文本过滤工具"><a href="#grep，基于行过滤的文本过滤工具" class="headerlink" title="grep，基于行过滤的文本过滤工具"></a>grep，基于行过滤的文本过滤工具</h5><p>格式：<br>grep [OPTION]… PATTERN [FILE]…<br>option：</p><ul><li><p>-v     显示不被匹配到的行</p></li><li><p>-i      忽略字符大小写</p></li><li><p>-n     添加匹配到的行的行号</p></li><li><p>-c     统计被匹配到的行数</p></li><li><p>-o     仅显示匹配到的字符</p></li><li><p>-q     静默模式</p></li><li><p>-A#   包含此匹配行和后#行</p></li><li><p>-B#   包含此匹配行和前#行</p></li><li><p>-C#   包含此匹配行和前后#行</p></li><li><p>-e     实现多个匹配字符的或者（or）关系 -e a -e b：a或b</p></li><li><p>-w    匹配整个单词，数字、字母、下划线都算单词一部分</p></li><li><p>-r      递归目录</p></li><li><p>-E     使用ERE，扩展的正则表达式</p></li><li><p>-F     相当于fgrep</p></li></ul><p>grep工具之所以功能强大，是因为它支持正则表达式进行匹配，那什么又是正则表达式呢?</p><h4 id="二-正则表达式的相关概念"><a href="#二-正则表达式的相关概念" class="headerlink" title="二.正则表达式的相关概念"></a>二.正则表达式的相关概念</h4><h5 id="1-正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。"><a href="#1-正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。" class="headerlink" title="1.正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。"></a>1.正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。</h5><p>元字符使正则表达式具有处理能力。所谓元字符就是指那些在正则表达式中具有特殊意义的专用字符，可以用来规定其前导字符（即位于元字符前面的字符）在目标对象中的出现模式</p><p>正则表达式（REGEXP）：由一类特殊字符及文本字符所编写的模式，其中有些字符（元字符）不表示字符表面意义，而表示控制或通配功能</p><h5 id="2-正则表达式与通配符的区别"><a href="#2-正则表达式与通配符的区别" class="headerlink" title="2.正则表达式与通配符的区别"></a>2.正则表达式与通配符的区别</h5><p>通配符匹配的是文件名中的字符，不能匹配文件的文本内容的字符串（详见前篇：带你认识Linux中的通配符），这时候就需要用到正则表达式。</p><h5 id="3-正则表达式分两类"><a href="#3-正则表达式分两类" class="headerlink" title="3.正则表达式分两类"></a>3.正则表达式分两类</h5><ul><li><p>基本正则表达式：BRE；只承认的元字符有^$.[]*其他字符识别为普通字符：()需要转义</p></li><li><p>扩展正则表达式：ERE；则添加了（）{}?+| 等      grep -E，egrep</p></li></ul><h5 id="4-正则表达式引擎"><a href="#4-正则表达式引擎" class="headerlink" title="4.正则表达式引擎"></a>4.正则表达式引擎</h5><ul><li><p>采用不同算法，检查处理正则表达式的软件模块</p></li><li><p>基于PCRE语言（逐渐没落）兼容的正则表达式</p></li></ul><h5 id="5-元字符分类"><a href="#5-元字符分类" class="headerlink" title="5.元字符分类"></a>5.元字符分类</h5><p>字符匹配、匹配次数、位置锚定、分组（帮助文档：man 7 regex）</p><h4 id="三、基本正则表达式（BRE）的元字符介绍："><a href="#三、基本正则表达式（BRE）的元字符介绍：" class="headerlink" title="三、基本正则表达式（BRE）的元字符介绍："></a>三、基本正则表达式（BRE）的元字符介绍：</h4><h5 id="1-字符匹配："><a href="#1-字符匹配：" class="headerlink" title="1.字符匹配："></a>1.字符匹配：</h5><ul><li><p>.        匹配任意单个字符，放在[]中就表示点</p></li><li><p>[]      匹配括号内任意单个字符</p></li><li><p>[^]    匹配指定范围外的任意单个字符</p></li><li><p>[:alnum:] 任意一个字母和数字</p></li><li><p>[:alpha:]  任意一个字母</p></li><li><p>[:lower:]  任意一个小写字母</p></li><li><p>[:upper:]  任意一个大写字母</p></li><li><p>[:digit:]    任意一个数字</p></li><li><p>[:space:]  水平或垂直空白字符</p></li><li><p>[:punct:]  标点符号</p></li></ul><p>注意：正则表达式使用字符集作为搜索条件时，一定要加双引号，如”[[:digit:]]”；否则正则表达式会将字符集作为一个个字符进行识别</p><p>转义符“\”使正则表达式中具有特殊含义的字符显示其本身，如.只表示小数点</p><h5 id="2-匹配次数（某个字符出现的次数）"><a href="#2-匹配次数（某个字符出现的次数）" class="headerlink" title="2.匹配次数（某个字符出现的次数）"></a>2.匹配次数（某个字符出现的次数）</h5><ul><li><p>*       匹配前面的字符任意次，包括0次（贪婪模式，尽可能长的匹配）</p></li><li><p>.*     任意长度的任意字符</p></li><li><p>\？   匹配前面的字符0或1次，可看做 {0,1}</p></li><li><p>+     匹配前面的字符至少1次，可看做{1，}（可实现懒惰模式）</p></li><li><p>{m}        精确匹配前面的字符m次</p></li><li><p>{m，}   至少匹配前面的字符m次</p></li><li><p>{,m}      至多匹配前面的字符m次</p></li><li><p>{m，n}匹配前面的字符m到n次</p></li></ul><h5 id="3-位置锚定"><a href="#3-位置锚定" class="headerlink" title="3.位置锚定"></a>3.位置锚定</h5><ul><li><p>^       行首锚定，用于模式最左侧</p></li><li><p>$       行尾锚定，用于模式最右侧</p></li><li><p>^$    表示空行</p></li><li><p>\&lt;或\b     单词的词首锚定</p></li><li><p>>或\b     单词的次尾锚定</p></li><li><p>\&lt;word> 匹配整个单词，同grep -w</p></li></ul><h5 id="4-分组"><a href="#4-分组" class="headerlink" title="4.分组"></a>4.分组</h5><ul><li><p>()将一个或多个字符捆绑在一起，当做一个整体进行处理，如：(root)+</p></li><li><p>分组括号中匹配到的内容会被正则表达式记录与内部变量中，这些变量命名方为：\1,\2,\3,…</p></li><li><p>\1表示从左侧起第一个左括号以及与之匹配右括号之间的模式所匹配到的字符</p></li></ul><ul><li>后向引用：\1表示的是前面匹配的结果而不是前面匹配的模式 例： <code>echo rootxxrbbt|grep ‘\(r..t\).*\1’</code>  \1代表root，而不是r..t</li></ul><h5 id="5-或者："><a href="#5-或者：" class="headerlink" title="5.或者：|"></a>5.或者：|</h5><p>例：a|b：a或b； C|cat：C或cat \（C|c\）at：Cat或cat</p><h4 id="四、扩展正则表达式（ERE）元字符介绍："><a href="#四、扩展正则表达式（ERE）元字符介绍：" class="headerlink" title="四、扩展正则表达式（ERE）元字符介绍："></a>四、扩展正则表达式（ERE）元字符介绍：</h4><p>egrep      同grep -E<br>扩展正则表达式（ERE）可理解为将基础正则表达式中的转义符全部去掉，其字符匹配与基础正则表达式（BRE）相同。</p><h5 id="1-次数匹配："><a href="#1-次数匹配：" class="headerlink" title="1.次数匹配："></a>1.次数匹配：</h5><ul><li><p>*       匹配前面字符任意次</p></li><li><p>？    0或1次，可看做{0,1}</p></li><li><p>+       1次或多次.可看做{1，}</p></li><li><p>{m}  匹配m次</p></li><li><p>{m,n}        匹配m到n次</p></li></ul><h5 id="2-位置锚定："><a href="#2-位置锚定：" class="headerlink" title="2.位置锚定："></a>2.位置锚定：</h5><ul><li><p>^       行首</p></li><li><p>$       行尾</p></li><li><p>\&lt;,\b        语首</p></li><li><p>>,\b       语尾</p></li></ul><h5 id="3-分组："><a href="#3-分组：" class="headerlink" title="3.分组："></a>3.分组：</h5><ul><li><p>（）</p></li><li><p>后向引用：\1,\2,…</p></li></ul><h5 id="4-或者："><a href="#4-或者：" class="headerlink" title="4.或者："></a>4.或者：</h5><ul><li><p>a|b  a或b</p></li><li><p>C|cat       C或cat</p></li><li><p>（C|c）at       Cat或cat</p></li></ul><h4 id="五、正则表达式中的元字符与通配符的区别"><a href="#五、正则表达式中的元字符与通配符的区别" class="headerlink" title="五、正则表达式中的元字符与通配符的区别"></a>五、正则表达式中的元字符与通配符的区别</h4><p>作用不同：通配符匹配的是文件名中的字符，而正则表达式匹配的是文件的文本内容的字符串；</p><p>两者之间有很多相同之处，也有不同点，其中：</p><h5 id="1-正则表达式元字符与通配符代表意义不同的有："><a href="#1-正则表达式元字符与通配符代表意义不同的有：" class="headerlink" title="1.正则表达式元字符与通配符代表意义不同的有："></a>1.正则表达式元字符与通配符代表意义不同的有：</h5><p>######通配符中：</p><ul><li><p>* 表示任意长度的任意字符</p></li><li><p>? 表示任意一个单个字符</p></li></ul><p>######正则表达式：</p><ul><li><p>*表示匹配前面的字符任意次</p></li><li><p>. 表示匹配任意一个单个字符</p></li><li><p>.*表示任意长度的任意字符</p></li></ul><p>#####2.正则表达式元字符与通配符含义相似的有：</p><ul><li><p>[]      匹配括号内任意单个字符</p></li><li><p>[^]    匹配指定范围外的任意单个字符</p></li><li><p>[:alnum:] 任意一个字母和数字</p></li><li><p>[:alpha:]  任意一个字母</p></li><li><p>[:lower:]  任意一个小写字母</p></li><li><p>[:upper:]  任意一个大写字母</p></li><li><p>[:digit:]    任意一个数字</p></li><li><p>[:space:]  水平或垂直空白字符</p></li><li><p>[:punct:]  标点符号</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文本三剑客之grep及正则表达式用法&quot;&gt;&lt;a href=&quot;#文本三剑客之grep及正则表达式用法&quot; class=&quot;headerlink&quot; title=&quot;文本三剑客之grep及正则表达式用法&quot;&gt;&lt;/a&gt;文本三剑客之grep及正则表达式用法&lt;/h2&gt;&lt;h4 id=&quot;一
      
    
    </summary>
    
    
      <category term="grep" scheme="http://yoursite.com/tags/grep/"/>
    
      <category term="正则表达式" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>浅谈几种IO重定向变形用法</title>
    <link href="http://yoursite.com/2018/04/05/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8DIO%E9%87%8D%E5%AE%9A%E5%90%91%E5%8F%98%E5%BD%A2%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/05/浅谈几种IO重定向变形用法/</id>
    <published>2018-04-05T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈几种IO重定向变形用法"><a href="#浅谈几种IO重定向变形用法" class="headerlink" title="浅谈几种IO重定向变形用法"></a>浅谈几种IO重定向变形用法</h2><h3 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h3><p>首先，我们来认识一下linux系统中的几种标准输入和输出</p><p>什么是标准输入和输出呢？</p><p>Linux给程序提供了三种I/O设备，即：</p><ul><li><p>标准输入（STDIN）  0            默认接受来自键盘的输入</p></li><li><p>标准输出（STDOUT） 1      默认输出到终端窗口</p></li><li><p>标准错误（STDERR） 2       默认输出到终端窗口</p></li></ul><p>同时linux中使用“&gt;”和“&gt;&gt;”将标准输出和标准错误重新定向到文件中：</p><ul><li><p>“&gt;”后跟重定向文件，文件内容会被覆盖</p></li><li><p>>       把标准输出重定向到文件</p></li><li><p>2&gt;    把标准错误重定向到文件</p></li><li><p>&amp;&gt;    把标准输出和错误都定向到文件</p></li><li><p>1&gt;&amp;2        把标准输出定向到标准错误（简单来讲，对的变成错的）</p></li><li><p>2&gt;&amp;1        把标准错误定向到标准标准输出（错的变成对的）</p></li></ul><ul><li><p>“&gt;&gt;”后跟重定向文件，是在原有内容基础上，追加内容</p></li><li><p>>&gt;    追加标准输出重定向到文件</p></li><li><p>2&gt;&gt;  追加标准错误重定向到文件</p></li><li><p>&amp;&gt;&gt; 追加标准输出和错误都定向到文件</p></li></ul><p>那么下面我们来讨论下几种重定向的变形用法：</p><p>首先我们先建file1-6的6个空文件<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E7%A9%BA%E6%96%87%E4%BB%B6.png" alt="enter image description here"><br>这里我们看到:</p><p><code>ll /data/f1</code> 显示标准输出（f1文件详细信息）；</p><p><code>ll /erorr</code> 显示标准错误（提示无此目录）；<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E7%A1%AE%E4%B8%8E%E9%94%99%E8%AF%AF.png" alt="enter image description here"></p><h3 id="二、实验"><a href="#二、实验" class="headerlink" title="二、实验"></a>二、实验</h3><h4 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file1 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file1.png" alt="enter image description here"></p><p>结果:屏幕无显示，标准输出和标准错误输入到file1文件中</p><h4 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 2&gt;&amp;1 &gt; /data/file2</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file2.png" alt="enter image description here"></p><p>结果:屏幕显示标准错误，标准输出输入到file2文件中</p><h4 id="实验3"><a href="#实验3" class="headerlink" title="实验3"></a>实验3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 2&gt; /data/file3 1&gt;&amp;2</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file3.png" alt="enter image description here"></p><p>结果:屏幕无显示，标准输出和标准错误输入到file3文件中</p><h4 id="实验4"><a href="#实验4" class="headerlink" title="实验4"></a>实验4</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 1&gt;&amp;2 &gt; /data/file4</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file4.png" alt="enter image description here"></p><p>结果:屏幕显示标准错误，标准输出输入到file4文件中</p><h4 id="实验5"><a href="#实验5" class="headerlink" title="实验5"></a>实验5</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file5</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file5.png" alt="enter image description here"></p><p>结果:屏幕显示标准错误，标准输出输入到file5文件中</p><h4 id="实验6"><a href="#实验6" class="headerlink" title="实验6"></a>实验6</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file6 1&gt;&amp;2</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file6.png" alt="enter image description here"></p><p>结果:屏幕显示标准输出和标准错误，file6文件为空</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>观察6个小实验我们发现:</p><p>实验1,3得出的结果完全相同，屏幕无显示，标准输出和标准错误输入到file文件中。得出此结果也有两种</p><p>执行顺序的可能性：</p><ul><li><p>可能性1：实验1可看做，标准输出先重定向到file文件中，标准错误然后重定向为标准输出再次重定向到file文件中；实验3可看做，标准错误先重定向到file文件中，标准输出然后重定向为标准错误再次重定向到file文件中，所以file文件中既有标准输入又有标准输出。</p></li><li><p>可能性2：实验1可看做，标准输出和错误都经过2&gt;&amp;1的重定向后，全变为标准输出，再输入进file1件中；实验3可看做，标准输出和错误都经过1&gt;&amp;2的重定向后，全变为标准错误，再输入file3文件中。于是我们有了实验6，ll /data/f1 /erorr &gt; /data/file6 1&gt;&amp;2，得出结果屏幕显示标准输出和标准错误，file6文件为空，由此可认为实验6执行了可能性2的执行过程。</p></li></ul><p>结论1:当有1&gt;&amp;2或2&gt;&amp;1处于重定向组合命令结尾时，输出结果全部先执行1&gt;&amp;2或2&gt;&amp;1，再执行前面的重定向。</p><p>实验2,4,5得出的结果完全相同，即屏幕显示标准错误，标准输出输入到file5文件中</p><p>三条命令分别为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 2&gt;&amp;1 &gt; /data/file2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 1&gt;&amp;2 &gt; /data/file4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file5</span><br></pre></td></tr></table></figure><p>我们是否可以这样认为:</p><p>结论2:当2&gt;&amp;1或1&gt;&amp;2处在重定向组合命令中间位置时，2&gt;&amp;1或1&gt;&amp;2是不起作用的，可以忽略掉（此结论待定）</p><p>现在再来看这个问题</p><p>下列哪个标准输出结果与其他选项不同：（   ）</p><p>A.cmd &gt;log 2&gt;&amp;1</p><p>B.cmd 2&gt;&amp;1 &gt;log</p><p>C.cmd &amp;&gt; log</p><p>D,cmd 2&gt;log 1&gt;&amp;2</p><p>小伙伴们，现在用以上结论去做这道题，是不是很easy了呢</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;浅谈几种IO重定向变形用法&quot;&gt;&lt;a href=&quot;#浅谈几种IO重定向变形用法&quot; class=&quot;headerlink&quot; title=&quot;浅谈几种IO重定向变形用法&quot;&gt;&lt;/a&gt;浅谈几种IO重定向变形用法&lt;/h2&gt;&lt;h3 id=&quot;一、简介&quot;&gt;&lt;a href=&quot;#一、简介&quot;
      
    
    </summary>
    
    
      <category term="IO重定向" scheme="http://yoursite.com/tags/IO%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件权限详解</title>
    <link href="http://yoursite.com/2018/04/04/Linux%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/04/04/Linux文件权限详解/</id>
    <published>2018-04-04T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux文件权限详解"><a href="#Linux文件权限详解" class="headerlink" title="Linux文件权限详解"></a>Linux文件权限详解</h2><blockquote><p>Linux系统中不仅是对用户与组根据UID,GID进行了管理，还对Linux系统中的文件，按照用户与组进行分类，针对不同的群体进行了权限管理，用他来确定谁能通过何种方式对文件和目录进行访问和操作。</p></blockquote><h3 id="一、文件权限"><a href="#一、文件权限" class="headerlink" title="一、文件权限"></a>一、文件权限</h3><h4 id="1-文件的权限针对三类对象进行定义"><a href="#1-文件的权限针对三类对象进行定义" class="headerlink" title="1.文件的权限针对三类对象进行定义"></a>1.文件的权限针对三类对象进行定义</h4><ul><li><p>r：读取文件内容</p></li><li><p>w：修改文件内容</p></li><li><p>x：执行权限对除二进制程序以外的文件没什么意义</p></li></ul><h4 id="2-每个文件针对每类访问者定义了三种主要权限"><a href="#2-每个文件针对每类访问者定义了三种主要权限" class="headerlink" title="2.每个文件针对每类访问者定义了三种主要权限"></a>2.每个文件针对每类访问者定义了三种主要权限</h4><ul><li><p>r：Read      读</p></li><li><p>w：Write      写</p></li><li><p>x：eXecute      执行</p></li></ul><p>另 X：针对目录加执行权限，文件不加执行权限（因文件具备执行权限有安全隐患）</p><p>注意：root账户不受文件权限的读写限制，执行权限受限制</p><h4 id="3-对于文件和目录来说，r，w，x有着不同的作用和含义"><a href="#3-对于文件和目录来说，r，w，x有着不同的作用和含义" class="headerlink" title="3.对于文件和目录来说，r，w，x有着不同的作用和含义"></a>3.对于文件和目录来说，r，w，x有着不同的作用和含义</h4><p> 针对文件：</p><ul><li><p>r：读取文件内容</p></li><li><p>w：修改文件内容</p></li><li><p>x：执行权限对除二进制程序以外的文件没什么意义</p></li></ul><p>针对目录：</p><p>目录本质可看做是存放文件列表、节点号等内容的文件</p><ul><li><p>r：查看目录下的文件列表</p></li><li><p>w：删除和创建目录下的文件</p></li><li><p>x：可以cd进入目录，能查看目录中文件的详细属性，能访问目录下文件内容（基础权限）</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%9D%83%E9%99%90.png" alt="enter image description here"></p><h4 id="4-用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。"><a href="#4-用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。" class="headerlink" title="4.用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。"></a>4.用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。</h4><h3 id="二、修改文件访问权限的方法"><a href="#二、修改文件访问权限的方法" class="headerlink" title="二、修改文件访问权限的方法"></a>二、修改文件访问权限的方法</h3><p>chmod              修改权限 change mode</p><h4 id="1-mode法"><a href="#1-mode法" class="headerlink" title="1.mode法"></a>1.mode法</h4><p>格式：chmod who opt per file</p><ul><li><p>who：u g o a（all）</p></li><li><p>opt：+ – =</p></li><li><p>per：r w x X</p></li></ul><h4 id="2-数字法"><a href="#2-数字法" class="headerlink" title="2.数字法"></a>2.数字法</h4><p>格式：chmod XXX file</p><ul><li><p>rwx rw- r–</p></li><li><p>111 110 100</p></li><li><p>7   6   4</p></li></ul><ul><li><p>r：4</p></li><li><p>w：2</p></li><li><p>x：1</p></li></ul><p>例：chmod 764 file        给file文件添加 rwxrw-r– 权限</p><p>chmod -R +X dir               给dir目录添加X执行权限，dir目录下文件不添加执行权限</p><p>（如果dir目录下有文件已具备执行权限，则添加该文件执行权限）</p><h3 id="三、UMASK值"><a href="#三、UMASK值" class="headerlink" title="三、UMASK值"></a>三、UMASK值</h3><p>作用：取消对应的权限，影响创建文件和目录的默认权限</p><p>对目录：</p><ul><li>umask+default=777（dir）</li></ul><p>对文件：</p><ul><li>666-umask：观察结果，如果有奇数，奇数位+1，偶数不变</li></ul><h3 id="四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）"><a href="#四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）" class="headerlink" title="四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）"></a>四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）</h3><h4 id="1-suid"><a href="#1-suid" class="headerlink" title="1.suid"></a>1.suid</h4><p>作用：给一个用户继承二进制程序所有者拥有的权限</p><p>suid权限位 位于所有者的执行权限位上，如果一个文件具有suid权限，则所有者执行位为s，文件表现为红色背景</p><p>例：<code>ll /usr/bin/passwd</code></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E7%BA%A2%E8%89%B2suid.png" alt="enter image description here"></p><p>给file文件增加suid权限</p><ul><li><p>chmod u+s file</p></li><li><p>chmod 4755 file               suid数字法表示为4</p></li></ul><p>suid只适合作用在二进制程序上</p><h4 id="2-sgid"><a href="#2-sgid" class="headerlink" title="2.sgid"></a>2.sgid</h4><p>作用1：给一个用户继承二进制程序所有组拥有的权限</p><p>sgid权限位 位于所有组的执行权限位，如果一个文件具有suid权限，则所有组的执行位为s，文件表现为黄色背景</p><p>例：<code>ll which cat</code><br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E9%BB%84%E8%89%B2sgid.png" alt="enter image description here"></p><p>给file文件增加sgid权限</p><ul><li><p>chmod g+s file</p></li><li><p>chmod 2755 file               sgid数字法表示为2</p></li></ul><p>作用2：作用在目录上时，使一个目录下的新建的文件继承目录的所属组</p><h4 id="3-sticky"><a href="#3-sticky" class="headerlink" title="3.sticky"></a>3.sticky</h4><p> 作用：作用于目录上，此目录的文件只能被所有者删除</p><p>sticky权限位 位于其他的执行权限位上，如果一个文件具有sticky权限，则其他的执行位为t，目录表现为绿色背景</p><p>例：<code>ll -d /tmp</code><br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E7%BB%BF%E8%89%B2sticky.png" alt="enter image description here"></p><p>给dir目录添加sticky权限</p><ul><li><p>chmod o+t dir</p></li><li><p>chmod 1777 dir                sticky数字法表示为1</p></li></ul><h3 id="五、ACL访问控制列表"><a href="#五、ACL访问控制列表" class="headerlink" title="五、ACL访问控制列表"></a>五、ACL访问控制列表</h3><p>作用：实现更加灵活的权限管理，打破了三类用户的权限管理</p><h4 id="1-添加ACL权限"><a href="#1-添加ACL权限" class="headerlink" title="1.添加ACL权限"></a>1.添加ACL权限</h4><ul><li><p>setfacl -m u:wang:0 file 使wang账户对指定file文件无权限</p></li><li><p>setfacl -m u:mage:rw file       使mage账户对指定file文件有读写权限</p></li><li><p>setfacl -m g:g1:rw file 使g1组对指定file文件有读写权限</p></li><li><p>getfacl     file                     查看指定file文件的ACL权限</p></li></ul><p>ACL权限执行顺序类似于用户获取文件权限的顺序，getfacl顺序从上到下执行，一旦生效，下面的将不再生效（如果属于多个组，权限累加）</p><h4 id="2-删除ACL权限"><a href="#2-删除ACL权限" class="headerlink" title="2.删除ACL权限"></a>2.删除ACL权限</h4><ul><li><p>setfacl -x u:wang file      删除wang账户对指定file文件的ACL权限</p></li><li><p>setfacl -x g:g1 file   删除g1组对指定file文件的ACL权限</p></li></ul><h4 id="3-ACL权限下的mask"><a href="#3-ACL权限下的mask" class="headerlink" title="3.ACL权限下的mask"></a>3.ACL权限下的mask</h4><p>设置用户对指定文件所能拥有的最大权限（限高作用）</p><ul><li><p>setfacl -m mask::r file             使指定文件file所拥有的最大权限位读r</p></li><li><p>setfacl -x mask::r file               取消指定文件file的最大权限限制mask</p></li><li><p>setfacl -b f1                      取消f1文件所有的ACL权限</p></li></ul><p>ACL生效顺序：所有者、自定义用户、自定义组、其他人</p><h4 id="4-备份和恢复ACL权限"><a href="#4-备份和恢复ACL权限" class="headerlink" title="4.备份和恢复ACL权限"></a>4.备份和恢复ACL权限</h4><ul><li><p>getfacl -R /tmp/dir1&gt;acl.txt           将dir1目录下ACL权限备份</p></li><li><p>setfacl -R –set-file=acl.txt /tem/dir      恢复dir1目录下ACL权限</p></li></ul><h3 id="六、文件权限操作的常用命令"><a href="#六、文件权限操作的常用命令" class="headerlink" title="六、文件权限操作的常用命令"></a>六、文件权限操作的常用命令</h3><h4 id="1-chown-设置文件所有者（普通用户无法修改文件所有者）"><a href="#1-chown-设置文件所有者（普通用户无法修改文件所有者）" class="headerlink" title="1.chown              设置文件所有者（普通用户无法修改文件所有者）"></a>1.chown              设置文件所有者（普通用户无法修改文件所有者）</h4><ul><li><p>-R     递归</p></li><li><p>user：group   同时修改所有者，所有组</p></li></ul><h4 id="2-chgrp-设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）"><a href="#2-chgrp-设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）" class="headerlink" title="2.chgrp                设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）"></a>2.chgrp                设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）</h4><ul><li>-R     递归</li></ul><h4 id="3-chmod-设置指定文件权限"><a href="#3-chmod-设置指定文件权限" class="headerlink" title="3.chmod              设置指定文件权限"></a>3.chmod              设置指定文件权限</h4><ul><li><p>-R     递归</p></li><li><p>–reference=f1 f2 f3        参考f1文件权限设置f2，f3文件</p></li></ul><h4 id="4-chattr-给指定文件添加保护，避免root账户误操作"><a href="#4-chattr-给指定文件添加保护，避免root账户误操作" class="headerlink" title="4,chattr               给指定文件添加保护，避免root账户误操作"></a>4,chattr               给指定文件添加保护，避免root账户误操作</h4><ul><li><p>i      锁定文件，不能删除，不能改名，不能更改内容</p></li><li><p>-i      解锁+i</p></li><li><p>-a     锁定文件，不能删除，不能改名，但可追加内容（追加重定向）</p></li><li><p>-a     解锁+a</p></li><li><p>+A    指定文件读时间atime不再更改</p></li></ul><h4 id="5-lsattr-查看指定文件是否有锁定状态"><a href="#5-lsattr-查看指定文件是否有锁定状态" class="headerlink" title="5.lsattr                 查看指定文件是否有锁定状态"></a>5.lsattr                 查看指定文件是否有锁定状态</h4><h4 id="6-setfacl-设置文件ACL权限"><a href="#6-setfacl-设置文件ACL权限" class="headerlink" title="6.setfacl              设置文件ACL权限"></a>6.setfacl              设置文件ACL权限</h4><ul><li><p>-m mask::r file          使指定文件file所拥有的最大权限位读r</p></li><li><p>-x mask::r file            取消指定文件file的最大权限限制mask</p></li><li><p>-b f1                   取消f1文件所有的ACL权限</p></li><li><p>-R –set-file=acl.txt /tem/dir   恢复dir1目录下ACL权限</p></li></ul><h4 id="7-getfacl-查看文件ACL权限"><a href="#7-getfacl-查看文件ACL权限" class="headerlink" title="7.getfacl              查看文件ACL权限"></a>7.getfacl              查看文件ACL权限</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux文件权限详解&quot;&gt;&lt;a href=&quot;#Linux文件权限详解&quot; class=&quot;headerlink&quot; title=&quot;Linux文件权限详解&quot;&gt;&lt;/a&gt;Linux文件权限详解&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Linux系统中不仅是对用户与组根据UID
      
    
    </summary>
    
    
      <category term="文件权限" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户与组管理命令的易混淆点和重合点</title>
    <link href="http://yoursite.com/2018/04/03/Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4%E7%9A%84%E6%98%93%E6%B7%B7%E6%B7%86%E7%82%B9%E5%92%8C%E9%87%8D%E5%90%88%E7%82%B9/"/>
    <id>http://yoursite.com/2018/04/03/Linux用户与组管理命令的易混淆点和重合点/</id>
    <published>2018-04-03T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.521Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux用户与组管理命令的易混淆点和重合点"><a href="#Linux用户与组管理命令的易混淆点和重合点" class="headerlink" title="Linux用户与组管理命令的易混淆点和重合点"></a>Linux用户与组管理命令的易混淆点和重合点</h2><blockquote><p>Linux用户与组的管理命令主要有useradd、usermod、userdel、groupadd、groupmod、groupdel、groupmems、gpasswd、passwd、newgrp等等（详见上篇Linux用户与组的管理详解），其中每条命令也都有很多的可选项，对于初学者来说很容易造成混淆；此外，这些命令之间有很多相重合的用法，即：拥有多种命令可实现相同的需求的情况。</p></blockquote><h3 id="一、易混淆点：关于GID的改变"><a href="#一、易混淆点：关于GID的改变" class="headerlink" title="一、易混淆点：关于GID的改变"></a>一、易混淆点：关于GID的改变</h3><h4 id="1-改变一个用户的gid"><a href="#1-改变一个用户的gid" class="headerlink" title="1.改变一个用户的gid"></a>1.改变一个用户的gid</h4><pre><code>usermod -g[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#usermod -g 4322 wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=4322(mage) groups=4322(mage)</code></pre><p>此条命令改变了用户的主组，需注意的是新改变的主组需已存在</p><h4 id="2-临时改变一个用户的gid"><a href="#2-临时改变一个用户的gid" class="headerlink" title="2.临时改变一个用户的gid"></a>2.临时改变一个用户的gid</h4><pre><code>[wangx@CentOS6 ~]$iduid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023[wangx@CentOS6 ~]$newgrp mage[wangx@CentOS6 ~]$iduid=1666(wangx) gid=4322(mage) groups=4322(mage),1235(wangx) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023[wangx@CentOS6 ~]$id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><p>此条命令作用为切换当前登录用户的主组，注意是临时切换，重新登录后失效，使用id  user命令看到的还是切换前的主组</p><h4 id="3-改变组的gid"><a href="#3-改变组的gid" class="headerlink" title="3.改变组的gid"></a>3.改变组的gid</h4><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#groupmod -g 1236 wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1236(wangx) groups=1236(wangx)</code></pre><p>此条命令仅仅是改变了组的ID，组成员还是原来的组成员，没有变化。</p><h3 id="二、增、删辅助组的多种方式"><a href="#二、增、删辅助组的多种方式" class="headerlink" title="二、增、删辅助组的多种方式"></a>二、增、删辅助组的多种方式</h3><h4 id="1-指定用户user加入组group"><a href="#1-指定用户user加入组group" class="headerlink" title="1.指定用户user加入组group"></a>1.指定用户user加入组group</h4><p>groupmems -a user -g group    </p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#groupmems -a wangx -g mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><h4 id="2-将用户user添加至指定组group中"><a href="#2-将用户user添加至指定组group中" class="headerlink" title="2.将用户user添加至指定组group中"></a>2.将用户user添加至指定组group中</h4><p>gpasswd -a user group     </p><pre><code>[root@CentOS6 ~]#gpasswd -a wangx mageAdding user wangx to group mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><h4 id="3-为user用户添加辅助组"><a href="#3-为user用户添加辅助组" class="headerlink" title="3.为user用户添加辅助组"></a>3.为user用户添加辅助组</h4><p>注意：新的辅助组覆盖原辅助组<br>usermod -G</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#usermod -G mage wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><h4 id="4-从group组中删除用户user"><a href="#4-从group组中删除用户user" class="headerlink" title="4.从group组中删除用户user"></a>4.从group组中删除用户user</h4><p>groupmems  -d  user  -g  group</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)[root@CentOS6 ~]#groupmems -d wangx -g mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)</code></pre><h4 id="5-将用户user从group组中删除"><a href="#5-将用户user从group组中删除" class="headerlink" title="5.将用户user从group组中删除"></a>5.将用户user从group组中删除</h4><p>gpasswd      -d   user  group</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)[root@CentOS6 ~]#gpasswd -d wangx mageRemoving user wangx from group mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)</code></pre><h4 id="6-两种方法均可删除所有辅助组"><a href="#6-两种方法均可删除所有辅助组" class="headerlink" title="6.两种方法均可删除所有辅助组"></a>6.两种方法均可删除所有辅助组</h4><p>usermod -G user user<br>usermod -G   “”   user</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)[root@CentOS6 ~]#usermod -G wangx wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)</code></pre><h3 id="三、其他的一些拥有多种命令可实现相同需求的情况"><a href="#三、其他的一些拥有多种命令可实现相同需求的情况" class="headerlink" title="三、其他的一些拥有多种命令可实现相同需求的情况"></a>三、其他的一些拥有多种命令可实现相同需求的情况</h3><h4 id="1-修改一个用户的shell类型（2种方法）"><a href="#1-修改一个用户的shell类型（2种方法）" class="headerlink" title="1.修改一个用户的shell类型（2种方法）"></a>1.修改一个用户的shell类型（2种方法）</h4><p>命令1：chsh             修改用户的shell</p><p>命令2：usermod -s  新的默认shell</p><h4 id="2-修改一个用户的描述信息（2种方法）"><a href="#2-修改一个用户的描述信息（2种方法）" class="headerlink" title="2.修改一个用户的描述信息（2种方法）"></a>2.修改一个用户的描述信息（2种方法）</h4><p>命令1：chfn              修改用户描述信息</p><p>命令2：usermod -c  新的用户描述信息</p><h4 id="3-修改一个账号下次登录自动修改密码（2种方法）"><a href="#3-修改一个账号下次登录自动修改密码（2种方法）" class="headerlink" title="3.修改一个账号下次登录自动修改密码（2种方法）"></a>3.修改一个账号下次登录自动修改密码（2种方法）</h4><p>命令1：chage -l wang    使wang账户口令立马失效，下次登录自动修改</p><p>命令2：passwd -e wang 使wang账户口令立马失效，下次登录自动修改</p><h4 id="4-给一个账号加锁（4种方法）"><a href="#4-给一个账号加锁（4种方法）" class="headerlink" title="4.给一个账号加锁（4种方法）"></a>4.给一个账号加锁（4种方法）</h4><p>命令1：usermod -L</p><p>命令2：passwd -l</p><p>命令3：usermod -U</p><p>命令4：passwd -u</p><h4 id="5-给一个账号指定最短使用期限（mindays）（2种方法）"><a href="#5-给一个账号指定最短使用期限（mindays）（2种方法）" class="headerlink" title="5.给一个账号指定最短使用期限（mindays）（2种方法）"></a>5.给一个账号指定最短使用期限（mindays）（2种方法）</h4><p>命令1：passwd -n</p><p>命令2：chage -m</p><h4 id="6-最大使用期限（maxdays）（2种方法）"><a href="#6-最大使用期限（maxdays）（2种方法）" class="headerlink" title="6.最大使用期限（maxdays）（2种方法）"></a>6.最大使用期限（maxdays）（2种方法）</h4><p>命令1：passwd -x</p><p>命令2：chage -M</p><h4 id="7-设置一个账号提前多少天开始警告（warndays）（2种方法）"><a href="#7-设置一个账号提前多少天开始警告（warndays）（2种方法）" class="headerlink" title="7.设置一个账号提前多少天开始警告（warndays）（2种方法）"></a>7.设置一个账号提前多少天开始警告（warndays）（2种方法）</h4><p>命令1：passwd -w</p><p>命令2：chage -W</p><h4 id="8-设置一个账号非活动期限（inactivedays）（3种方法）"><a href="#8-设置一个账号非活动期限（inactivedays）（3种方法）" class="headerlink" title="8.设置一个账号非活动期限（inactivedays）（3种方法）"></a>8.设置一个账号非活动期限（inactivedays）（3种方法）</h4><p>命令1：passwd -i</p><p>命令2：usermod -f</p><p>命令3：chage -I</p><h4 id="9-设置一个账号的有效期（expiredate）（2种方法）"><a href="#9-设置一个账号的有效期（expiredate）（2种方法）" class="headerlink" title="9.设置一个账号的有效期（expiredate）（2种方法）"></a>9.设置一个账号的有效期（expiredate）（2种方法）</h4><p>命令1：usermod -e YYYY-MM-DD    设置用户账号过期时间</p><p>命令2：chage -E YYYY-MM-DD 设置用户账号过期时间</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux用户与组管理命令的易混淆点和重合点&quot;&gt;&lt;a href=&quot;#Linux用户与组管理命令的易混淆点和重合点&quot; class=&quot;headerlink&quot; title=&quot;Linux用户与组管理命令的易混淆点和重合点&quot;&gt;&lt;/a&gt;Linux用户与组管理命令的易混淆点和重
      
    
    </summary>
    
    
      <category term="用户与组" scheme="http://yoursite.com/tags/%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84/"/>
    
  </entry>
  
</feed>
