<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-04T12:48:52.630Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>头皮发麻</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vim文本编辑器及文本处理常用命令</title>
    <link href="http://yoursite.com/2018/04/08/vim%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E5%8F%8A%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/04/08/vim文本编辑器及文本处理常用命令/</id>
    <published>2018-04-08T11:00:00.000Z</published>
    <updated>2018-06-04T12:48:52.630Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vim文本编辑器及文本处理常用命令"><a href="#vim文本编辑器及文本处理常用命令" class="headerlink" title="vim文本编辑器及文本处理常用命令"></a>vim文本编辑器及文本处理常用命令</h2><blockquote><p>Vim是从 vi发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p></blockquote><h3 id="一、文本编辑器的种类主要有"><a href="#一、文本编辑器的种类主要有" class="headerlink" title="一、文本编辑器的种类主要有"></a>一、文本编辑器的种类主要有</h3><ul><li><p>行编辑器：sed</p></li><li><p>全屏编辑器：nano，vi</p></li><li><p>vim – Vi Improved（vi文本编辑器的升级版）</p></li></ul><h3 id="二、Vim文本编辑器相关命令："><a href="#二、Vim文本编辑器相关命令：" class="headerlink" title="二、Vim文本编辑器相关命令："></a>二、Vim文本编辑器相关命令：</h3><p>Vim是从 vi发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><h4 id="1-vim打开文件："><a href="#1-vim打开文件：" class="headerlink" title="1.vim打开文件："></a>1.vim打开文件：</h4><p>vim[option]…FILE…</p><ul><li><p>+#    打开文件后，让光标处于第#行行首</p></li><li><p>-o     后跟多个文件可水平显示多个窗口</p></li><li><p>-O    后跟多个文件可垂直显示多个窗口</p></li><li><p>-b     以二进制方式打开文件</p></li><li><p>-d file1 file2… 比较多个文件</p></li></ul><p>注：当一个文件不存在时，用vim打开编辑存盘后会自动创建它</p><h4 id="2-vim的三种主要模式："><a href="#2-vim的三种主要模式：" class="headerlink" title="2.vim的三种主要模式："></a>2.vim的三种主要模式：</h4><ul><li><p>命令（normal）模式：默认模式，可移动光标，剪切/粘贴文本。左下角显示文本路径，行数，字符数，右下角显示光标位置</p></li><li><p>插入（insert）模式：也叫编辑模式，修改文本。左下角显示 –INSERT–</p></li><li><p>扩展命令（extended command）模式：保存、退出等。左下角显示 “：”</p></li></ul><h4 id="3-vim模式切换："><a href="#3-vim模式切换：" class="headerlink" title="3.vim模式切换："></a>3.vim模式切换：</h4><p>命令模式—&gt;插入模式</p><ul><li><p>i：在光标处输入</p></li><li><p>I：在光标所在行首输入</p></li><li><p>a：在光标所在处后输入</p></li><li><p>A：在光标所在行行尾输入</p></li><li><p>o：在光标所在行的下方打开一个新行</p></li><li><p>O：在光标所在行的上方打开一个新行</p></li></ul><p>插入模式—&gt;命令模式</p><ul><li>ESC</li></ul><p>命令模式—&gt;扩展命令模式</p><ul><li>：</li></ul><p>扩展命令模式—&gt;命令模式</p><ul><li>ESC，Enter</li></ul><h4 id="4-vim的其他一些模式："><a href="#4-vim的其他一些模式：" class="headerlink" title="4.vim的其他一些模式："></a>4.vim的其他一些模式：</h4><ul><li><p>替换（replace）模式：        命令模式下R切换，可随意替换字符；右下角显示–REPALCE–</p></li><li><p>可视化（visual）模式：v    切换面向字符的可视化模式;右下角显示–VISUAL–V  切换面向行的可视化模式</p></li><li><p>ctrl+v   面试块的可视化模式</p></li></ul><h4 id="5-vim关闭文件"><a href="#5-vim关闭文件" class="headerlink" title="5.vim关闭文件"></a>5.vim关闭文件</h4><p>扩展模式</p><p>按”：”从命令模式进入Ex模式</p><ul><li><p>wq   存盘退出</p></li><li><p>q       文本未修改，不存盘退出</p></li><li><p>q！  文本已被修改，想不存盘退出</p></li><li><p>w file      文件另存为file</p></li><li><p>r file 读取file文件内容到当前文件</p></li><li><p>！command    直接在扩展模式下执行命令</p></li><li><p>r！command  读入命令的输入到当前文件光标处</p></li></ul><p>命令模式下也可关闭文件（不推荐使用）</p><ul><li><p>ZZ     保存退出</p></li><li><p>ZQ    不保存退出</p></li></ul><h4 id="6-命令模式常用命令："><a href="#6-命令模式常用命令：" class="headerlink" title="6.命令模式常用命令："></a>6.命令模式常用命令：</h4><p>单词间跳转：</p><ul><li><p>w      下一个单词词首</p></li><li><p>e       下一个单词词尾</p></li><li><p>b       当前或前一个单词的词首</p></li></ul><p>当前页跳转：</p><ul><li><p>H      页首</p></li><li><p>M     页中间</p></li><li><p>L       页底</p></li></ul><p>行首行尾跳转：</p><ul><li><p>^       跳转至行首第一个非空白字符</p></li><li><p>0       跳转至行首</p></li><li><p>$       跳转至行</p></li></ul><p>行间移动：</p><ul><li><p>#G    调至第#行；扩展模式下可执行 ：G</p></li><li><p>G      最后一行</p></li><li><p>1G，gg    第一行</p></li></ul><p>命令模式下字符操作</p><ul><li><p>x：删除光标所在处字符</p></li><li><p>#x：删除从光标所在处开始#个字符</p></li><li><p>xp：交换光标所在处字符和它后面字符的位置（原理是剪切粘贴）</p></li><li><p>~：波浪符转换大小写</p></li><li><p>J：删除当前行后的换行符</p></li><li><p>r：替换光标所在处字符</p></li></ul><ul><li><p>d：删除命令</p></li><li><p>d$    当前光标删除至行尾</p></li><li><p>d^    当前光标删除到非空行首</p></li><li><p>d0    当前光标删除到行首</p></li><li><p>dw   删除单词</p></li><li><p>dd    删除光标所在的行</p></li><li><p>#dd  多行删除，一下删除#行</p></li></ul><ul><li><p>y：复制命令（用法类似d删除）</p></li><li><p>y$     复制当前光标到行尾</p></li><li><p>y^     复当前光标位置到非空行首</p></li><li><p>yw    复制单词</p></li><li><p>yy     复制光标所在的行</p></li></ul><ul><li><p>p：粘贴</p></li><li><p>p       粘贴至光标所在行下一行</p></li><li><p>P       粘贴至光标所在行上一行</p></li></ul><ul><li><p>u：撤销更改</p></li><li><p>#u    撤销之前多次修改</p></li><li><p>U      撤销光标落在这行后所有此行的修改</p></li><li><p>Ctrl+r       返回上次撤销</p></li></ul><h4 id="7-扩展命令模式常用命令："><a href="#7-扩展命令模式常用命令：" class="headerlink" title="7.扩展命令模式常用命令："></a>7.扩展命令模式常用命令：</h4><p>格式：地址定界+编辑命令</p><p>地址定界</p><ul><li><p>：#  跳到第#行</p></li><li><p>：#，#    第左侧第#行，到右侧第#行；2,5表示第2到第5行</p></li><li><p>：#，+#  从左侧第#行，加上右侧#的行；2，+3表示第2到5行</p></li><li><p>：.   当前行</p></li><li><p>$       最后一行</p></li><li><p>%      全文，相当于1，$</p></li><li><p>：/pat1/,/pat2/               从pat1匹配到的行开始，到第一次被pat2匹配到的行</p></li><li><p>：/pat1/，#   可混用</p></li></ul><p>使用方式：后跟一个编辑命令</p><ul><li><p>d       删除</p></li><li><p>y       复制</p></li><li><p>w file        将范围内行另存至指定文件中</p></li><li><p>r file 在指定位置插入匹配内容</p></li></ul><p>查找字符</p><ul><li><p>/PATTERN：从光标所在处向文件尾部查找</p></li><li><p>？PATTERN：从光标所在处向文件首部查找</p></li><li><p>n：与命令同方向</p></li><li><p>N：与命令反方向</p></li></ul><p>查找并替换</p><ul><li>s/要查找的内容/替换为的内容/修饰符</li></ul><p>修饰符：</p><ul><li><p>i：忽略大小写</p></li><li><p>g：全局替换每一行的第一次出现的匹配</p></li><li><p>gc：全局替换所有匹配，每次替换前询问</p></li></ul><p>查找替换的分隔符/可用其他分隔符代替：如#，@</p><p>命令模式</p><ul><li><p>u：撤销更改</p></li><li><p>ctrl+r        恢复上一次撤销</p></li><li><p>.        重复执行上一次操作</p></li></ul><h4 id="8-vim的剪贴板"><a href="#8-vim的剪贴板" class="headerlink" title="8.vim的剪贴板"></a>8.vim的剪贴板</h4><p>有26个命名剪贴板和一个无命名剪贴板，存放不同的剪切内容，可以不同会话间分享</p><ul><li><p>”myy 表示复制光标所在行到m剪贴板</p></li><li><p>“mp 表示将m剪贴板内容粘贴</p></li><li><p>3″tyy 表示复制3行内容到t剪贴板</p></li><li><p>“tp   表示将t剪贴板内容粘贴</p></li></ul><h4 id="9-vim多文件模式"><a href="#9-vim多文件模式" class="headerlink" title="9.vim多文件模式"></a>9.vim多文件模式</h4><p>vim FILE1 FILE2 FILE3</p><ul><li><p>：next     下一个文件</p></li><li><p>：prev     上一个文件</p></li><li><p>：first      第一个文件</p></li><li><p>：last       最后一个文件</p></li><li><p>：wall      保存所有文件</p></li><li><p>：qall       退出所有</p></li><li><p>：wqall   保存退出</p></li></ul><p>单文件的窗口分隔：方便对照文件内容</p><ul><li><p>ctrl+w放开后按s           水平分割</p></li><li><p>ctrl+w放开后按v          垂直分割</p></li><li><p>ctrl+w放开后按q          取消相邻窗口</p></li><li><p>ctrl+w放开后按w                取消全部窗口；与：wqall相同</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/QQ%E5%9B%BE%E7%89%8720180408193404.png" alt="enter image description here"></p><h3 id="三、定制vim的工作特性"><a href="#三、定制vim的工作特性" class="headerlink" title="三、定制vim的工作特性"></a>三、定制vim的工作特性</h3><h4 id="1-扩展命令模式下执行："><a href="#1-扩展命令模式下执行：" class="headerlink" title="1.扩展命令模式下执行："></a>1.扩展命令模式下执行：</h4><ul><li><p>set number      添加行号</p></li><li><p>set nonumber 取消行号</p></li></ul><p>此操作仅临时有效，退出重进vim后，操作失效，要想永久保存vim的工作特性，需写入配置文件中</p><h4 id="2-配置文件：使vim工作特性永久有效"><a href="#2-配置文件：使vim工作特性永久有效" class="headerlink" title="2.配置文件：使vim工作特性永久有效"></a>2.配置文件：使vim工作特性永久有效</h4><ul><li><p>全局：/etc/vimrc</p></li><li><p>个人：~/.vimrc</p></li></ul><h4 id="3-其他一些常用vim特性命令："><a href="#3-其他一些常用vim特性命令：" class="headerlink" title="3.其他一些常用vim特性命令："></a>3.其他一些常用vim特性命令：</h4><h5 id="忽略大小写"><a href="#忽略大小写" class="headerlink" title="忽略大小写"></a>忽略大小写</h5><ul><li><p>set ic        忽略大小写</p></li><li><p>set noic 取消忽略大小写</p></li></ul><h5 id="自动缩进"><a href="#自动缩进" class="headerlink" title="自动缩进"></a>自动缩进</h5><ul><li><p>set ai        自动和上一行对齐</p></li><li><p>set noai   取消对齐</p></li></ul><h5 id="文件格式转换"><a href="#文件格式转换" class="headerlink" title="文件格式转换"></a>文件格式转换</h5><ul><li><p>set fileformat=unix         Windows文件转换Linux文件</p></li><li><p>set fileformat=dos Linux文件转换Windows文件</p></li></ul><h5 id="设置光标所在行下划线"><a href="#设置光标所在行下划线" class="headerlink" title="设置光标所在行下划线"></a>设置光标所在行下划线</h5><ul><li><p>set cursorline           启用</p></li><li><p>set no cursorline     禁用</p></li></ul><h5 id="复制时保留格式："><a href="#复制时保留格式：" class="headerlink" title="复制时保留格式："></a>复制时保留格式：</h5><ul><li><p>set paste          启用</p></li><li><p>set nopaste              禁用</p></li></ul><h5 id="查看全部已配置的vim工作特性"><a href="#查看全部已配置的vim工作特性" class="headerlink" title="查看全部已配置的vim工作特性"></a>查看全部已配置的vim工作特性</h5><ul><li><p>：set        显示全部已配置set</p></li><li><p>：help     查看帮助</p></li></ul><h3 id="四、文本处理常用命令"><a href="#四、文本处理常用命令" class="headerlink" title="四、文本处理常用命令"></a>四、文本处理常用命令</h3><h4 id="cut-按列抽取文本"><a href="#cut-按列抽取文本" class="headerlink" title="cut            按列抽取文本"></a>cut            按列抽取文本</h4><ul><li><p>-d     指定分隔符</p></li><li><p>-f      指定第几列</p></li><li><p>–output-delimiter=’ ‘      指定单引号中符号作为分隔符</p></li></ul><h4 id="diff-比较两个文件直接的差别，后跟file1，file2"><a href="#diff-比较两个文件直接的差别，后跟file1，file2" class="headerlink" title="diff           比较两个文件直接的差别，后跟file1，file2"></a>diff           比较两个文件直接的差别，后跟file1，file2</h4><ul><li>-u</li></ul><h4 id="head"><a href="#head" class="headerlink" title="head"></a>head</h4><ul><li><p>-n     显示头n行</p></li><li><p>-c     显示头n个字节</p></li></ul><h4 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h4><ul><li><p>-n     显示最后n行</p></li><li><p>-c     显示最后n个字节</p></li><li><p>-f      跟踪文本的变化（追加内容），可写为tailf</p></li><li><p>-F     跟踪文件名</p></li></ul><h4 id="sort-排序"><a href="#sort-排序" class="headerlink" title="sort          排序"></a>sort          排序</h4><ul><li><p>-t      指定分隔符（类似cut -d）</p></li><li><p>-k     指定第几列（类似cut -f）</p></li><li><p>-n     以数字排序</p></li><li><p>-r      倒序排列</p></li><li><p>-f      忽略大小写</p></li><li><p>-u     删除重复的行压缩到一行</p></li><li><p>-R     随机排序</p></li></ul><h4 id="paste-合并两个文件同行号的列到一行"><a href="#paste-合并两个文件同行号的列到一行" class="headerlink" title="paste                合并两个文件同行号的列到一行"></a>paste                合并两个文件同行号的列到一行</h4><ul><li><p>-s      合并两个文件按一行显示</p></li><li><p>-d     指定分隔符，类似cut -d的用法</p></li></ul><h4 id="grep-基于行过滤的文本过滤工具（grep文本处理三剑客之一）"><a href="#grep-基于行过滤的文本过滤工具（grep文本处理三剑客之一）" class="headerlink" title="grep         基于行过滤的文本过滤工具（grep文本处理三剑客之一）"></a>grep         基于行过滤的文本过滤工具（grep文本处理三剑客之一）</h4><ul><li><p>-v     显示不被匹配到的行</p></li><li><p>-i      忽略字符大小写</p></li><li><p>-n     添加匹配到的行的行号</p></li><li><p>-c     统计被匹配到的行数</p></li><li><p>-o     仅显示匹配到的字符</p></li><li><p>-q     静默模式</p></li><li><p>-A#   包含此匹配行和后#行</p></li><li><p>-B#   包含此匹配行和前#行</p></li><li><p>-C#   包含此匹配行和前后#行</p></li><li><p>-e     实现多个匹配字符的或者（or）关系 -e a -e b：a或b</p></li><li><p>-w    匹配整个单词，数字、字母、下划线都算单词一部分</p></li><li><p>-r      递归目录</p></li><li><p>-E     使用ERE，扩展的正则表达式</p></li><li><p>-F     相当于fgrep</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;vim文本编辑器及文本处理常用命令&quot;&gt;&lt;a href=&quot;#vim文本编辑器及文本处理常用命令&quot; class=&quot;headerlink&quot; title=&quot;vim文本编辑器及文本处理常用命令&quot;&gt;&lt;/a&gt;vim文本编辑器及文本处理常用命令&lt;/h2&gt;&lt;blockquote&gt;

      
    
    </summary>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
      <category term="文本处理" scheme="http://yoursite.com/tags/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>文本三剑客之grep及正则表达式用法</title>
    <link href="http://yoursite.com/2018/04/07/%E6%96%87%E6%9C%AC%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8Bgrep%E5%8F%8A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/07/文本三剑客之grep及正则表达式用法/</id>
    <published>2018-04-07T11:00:00.000Z</published>
    <updated>2018-06-04T12:36:25.556Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文本三剑客之grep及正则表达式用法"><a href="#文本三剑客之grep及正则表达式用法" class="headerlink" title="文本三剑客之grep及正则表达式用法"></a>文本三剑客之grep及正则表达式用法</h2><h4 id="一、文本三剑客之grep介绍"><a href="#一、文本三剑客之grep介绍" class="headerlink" title="一、文本三剑客之grep介绍"></a>一、文本三剑客之grep介绍</h4><blockquote><p>grep （缩写来自Globally search a Regular Expression and Print）是一种强大的文本搜索工具，它能使用特定模式匹配（包括正则表达式）搜索文本，并默认输出匹配行。</p></blockquote><h5 id="1-Linux文本处理三剑客："><a href="#1-Linux文本处理三剑客：" class="headerlink" title="1.Linux文本处理三剑客："></a>1.Linux文本处理三剑客：</h5><ul><li><p>grep：文本过滤工具</p></li><li><p>sed：文本编辑工具（传送门）</p></li><li><p>awk：Linux上的实现gawk，文本报告生成器（传送门）</p></li></ul><h5 id="grep，基于行过滤的文本过滤工具"><a href="#grep，基于行过滤的文本过滤工具" class="headerlink" title="grep，基于行过滤的文本过滤工具"></a>grep，基于行过滤的文本过滤工具</h5><p>格式：<br>grep [OPTION]… PATTERN [FILE]…<br>option：</p><ul><li><p>-v     显示不被匹配到的行</p></li><li><p>-i      忽略字符大小写</p></li><li><p>-n     添加匹配到的行的行号</p></li><li><p>-c     统计被匹配到的行数</p></li><li><p>-o     仅显示匹配到的字符</p></li><li><p>-q     静默模式</p></li><li><p>-A#   包含此匹配行和后#行</p></li><li><p>-B#   包含此匹配行和前#行</p></li><li><p>-C#   包含此匹配行和前后#行</p></li><li><p>-e     实现多个匹配字符的或者（or）关系 -e a -e b：a或b</p></li><li><p>-w    匹配整个单词，数字、字母、下划线都算单词一部分</p></li><li><p>-r      递归目录</p></li><li><p>-E     使用ERE，扩展的正则表达式</p></li><li><p>-F     相当于fgrep</p></li></ul><p>grep工具之所以功能强大，是因为它支持正则表达式进行匹配，那什么又是正则表达式呢?</p><h4 id="二-正则表达式的相关概念"><a href="#二-正则表达式的相关概念" class="headerlink" title="二.正则表达式的相关概念"></a>二.正则表达式的相关概念</h4><h5 id="1-正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。"><a href="#1-正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。" class="headerlink" title="1.正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。"></a>1.正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。</h5><p>元字符使正则表达式具有处理能力。所谓元字符就是指那些在正则表达式中具有特殊意义的专用字符，可以用来规定其前导字符（即位于元字符前面的字符）在目标对象中的出现模式</p><p>正则表达式（REGEXP）：由一类特殊字符及文本字符所编写的模式，其中有些字符（元字符）不表示字符表面意义，而表示控制或通配功能</p><h5 id="2-正则表达式与通配符的区别"><a href="#2-正则表达式与通配符的区别" class="headerlink" title="2.正则表达式与通配符的区别"></a>2.正则表达式与通配符的区别</h5><p>通配符匹配的是文件名中的字符，不能匹配文件的文本内容的字符串（详见前篇：带你认识Linux中的通配符），这时候就需要用到正则表达式。</p><h5 id="3-正则表达式分两类"><a href="#3-正则表达式分两类" class="headerlink" title="3.正则表达式分两类"></a>3.正则表达式分两类</h5><ul><li><p>基本正则表达式：BRE；只承认的元字符有^$.[]*其他字符识别为普通字符：()需要转义</p></li><li><p>扩展正则表达式：ERE；则添加了（）{}?+| 等      grep -E，egrep</p></li></ul><h5 id="4-正则表达式引擎"><a href="#4-正则表达式引擎" class="headerlink" title="4.正则表达式引擎"></a>4.正则表达式引擎</h5><ul><li><p>采用不同算法，检查处理正则表达式的软件模块</p></li><li><p>基于PCRE语言（逐渐没落）兼容的正则表达式</p></li></ul><h5 id="5-元字符分类"><a href="#5-元字符分类" class="headerlink" title="5.元字符分类"></a>5.元字符分类</h5><p>字符匹配、匹配次数、位置锚定、分组（帮助文档：man 7 regex）</p><h4 id="三、基本正则表达式（BRE）的元字符介绍："><a href="#三、基本正则表达式（BRE）的元字符介绍：" class="headerlink" title="三、基本正则表达式（BRE）的元字符介绍："></a>三、基本正则表达式（BRE）的元字符介绍：</h4><h5 id="1-字符匹配："><a href="#1-字符匹配：" class="headerlink" title="1.字符匹配："></a>1.字符匹配：</h5><ul><li><p>.        匹配任意单个字符，放在[]中就表示点</p></li><li><p>[]      匹配括号内任意单个字符</p></li><li><p>[^]    匹配指定范围外的任意单个字符</p></li><li><p>[:alnum:] 任意一个字母和数字</p></li><li><p>[:alpha:]  任意一个字母</p></li><li><p>[:lower:]  任意一个小写字母</p></li><li><p>[:upper:]  任意一个大写字母</p></li><li><p>[:digit:]    任意一个数字</p></li><li><p>[:space:]  水平或垂直空白字符</p></li><li><p>[:punct:]  标点符号</p></li></ul><p>注意：正则表达式使用字符集作为搜索条件时，一定要加双引号，如”[[:digit:]]”；否则正则表达式会将字符集作为一个个字符进行识别</p><p>转义符“\”使正则表达式中具有特殊含义的字符显示其本身，如.只表示小数点</p><h5 id="2-匹配次数（某个字符出现的次数）"><a href="#2-匹配次数（某个字符出现的次数）" class="headerlink" title="2.匹配次数（某个字符出现的次数）"></a>2.匹配次数（某个字符出现的次数）</h5><ul><li><p>*       匹配前面的字符任意次，包括0次（贪婪模式，尽可能长的匹配）</p></li><li><p>.*     任意长度的任意字符</p></li><li><p>\？   匹配前面的字符0或1次，可看做 {0,1}</p></li><li><p>+     匹配前面的字符至少1次，可看做{1，}（可实现懒惰模式）</p></li><li><p>{m}        精确匹配前面的字符m次</p></li><li><p>{m，}   至少匹配前面的字符m次</p></li><li><p>{,m}      至多匹配前面的字符m次</p></li><li><p>{m，n}匹配前面的字符m到n次</p></li></ul><h5 id="3-位置锚定"><a href="#3-位置锚定" class="headerlink" title="3.位置锚定"></a>3.位置锚定</h5><ul><li><p>^       行首锚定，用于模式最左侧</p></li><li><p>$       行尾锚定，用于模式最右侧</p></li><li><p>^$    表示空行</p></li><li><p>\&lt;或\b     单词的词首锚定</p></li><li><p>>或\b     单词的次尾锚定</p></li><li><p>\&lt;word> 匹配整个单词，同grep -w</p></li></ul><h5 id="4-分组"><a href="#4-分组" class="headerlink" title="4.分组"></a>4.分组</h5><ul><li><p>()将一个或多个字符捆绑在一起，当做一个整体进行处理，如：(root)+</p></li><li><p>分组括号中匹配到的内容会被正则表达式记录与内部变量中，这些变量命名方为：\1,\2,\3,…</p></li><li><p>\1表示从左侧起第一个左括号以及与之匹配右括号之间的模式所匹配到的字符</p></li></ul><ul><li>后向引用：\1表示的是前面匹配的结果而不是前面匹配的模式 例： <code>echo rootxxrbbt|grep ‘\(r..t\).*\1’</code>  \1代表root，而不是r..t</li></ul><h5 id="5-或者："><a href="#5-或者：" class="headerlink" title="5.或者：|"></a>5.或者：|</h5><p>例：a|b：a或b； C|cat：C或cat \（C|c\）at：Cat或cat</p><h4 id="四、扩展正则表达式（ERE）元字符介绍："><a href="#四、扩展正则表达式（ERE）元字符介绍：" class="headerlink" title="四、扩展正则表达式（ERE）元字符介绍："></a>四、扩展正则表达式（ERE）元字符介绍：</h4><p>egrep      同grep -E<br>扩展正则表达式（ERE）可理解为将基础正则表达式中的转义符全部去掉，其字符匹配与基础正则表达式（BRE）相同。</p><h5 id="1-次数匹配："><a href="#1-次数匹配：" class="headerlink" title="1.次数匹配："></a>1.次数匹配：</h5><ul><li><p>*       匹配前面字符任意次</p></li><li><p>？    0或1次，可看做{0,1}</p></li><li><p>+       1次或多次.可看做{1，}</p></li><li><p>{m}  匹配m次</p></li><li><p>{m,n}        匹配m到n次</p></li></ul><h5 id="2-位置锚定："><a href="#2-位置锚定：" class="headerlink" title="2.位置锚定："></a>2.位置锚定：</h5><ul><li><p>^       行首</p></li><li><p>$       行尾</p></li><li><p>\&lt;,\b        语首</p></li><li><p>>,\b       语尾</p></li></ul><h5 id="3-分组："><a href="#3-分组：" class="headerlink" title="3.分组："></a>3.分组：</h5><ul><li><p>（）</p></li><li><p>后向引用：\1,\2,…</p></li></ul><h5 id="4-或者："><a href="#4-或者：" class="headerlink" title="4.或者："></a>4.或者：</h5><ul><li><p>a|b  a或b</p></li><li><p>C|cat       C或cat</p></li><li><p>（C|c）at       Cat或cat</p></li></ul><h4 id="五、正则表达式中的元字符与通配符的区别"><a href="#五、正则表达式中的元字符与通配符的区别" class="headerlink" title="五、正则表达式中的元字符与通配符的区别"></a>五、正则表达式中的元字符与通配符的区别</h4><p>作用不同：通配符匹配的是文件名中的字符，而正则表达式匹配的是文件的文本内容的字符串；</p><p>两者之间有很多相同之处，也有不同点，其中：</p><h5 id="1-正则表达式元字符与通配符代表意义不同的有："><a href="#1-正则表达式元字符与通配符代表意义不同的有：" class="headerlink" title="1.正则表达式元字符与通配符代表意义不同的有："></a>1.正则表达式元字符与通配符代表意义不同的有：</h5><p>######通配符中：</p><ul><li><p>* 表示任意长度的任意字符</p></li><li><p>? 表示任意一个单个字符</p></li></ul><p>######正则表达式：</p><ul><li><p>*表示匹配前面的字符任意次</p></li><li><p>. 表示匹配任意一个单个字符</p></li><li><p>.*表示任意长度的任意字符</p></li></ul><p>#####2.正则表达式元字符与通配符含义相似的有：</p><ul><li><p>[]      匹配括号内任意单个字符</p></li><li><p>[^]    匹配指定范围外的任意单个字符</p></li><li><p>[:alnum:] 任意一个字母和数字</p></li><li><p>[:alpha:]  任意一个字母</p></li><li><p>[:lower:]  任意一个小写字母</p></li><li><p>[:upper:]  任意一个大写字母</p></li><li><p>[:digit:]    任意一个数字</p></li><li><p>[:space:]  水平或垂直空白字符</p></li><li><p>[:punct:]  标点符号</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文本三剑客之grep及正则表达式用法&quot;&gt;&lt;a href=&quot;#文本三剑客之grep及正则表达式用法&quot; class=&quot;headerlink&quot; title=&quot;文本三剑客之grep及正则表达式用法&quot;&gt;&lt;/a&gt;文本三剑客之grep及正则表达式用法&lt;/h2&gt;&lt;h4 id=&quot;一
      
    
    </summary>
    
    
      <category term="grep" scheme="http://yoursite.com/tags/grep/"/>
    
      <category term="正则表达式" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>浅谈几种IO重定向变形用法</title>
    <link href="http://yoursite.com/2018/04/05/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8DIO%E9%87%8D%E5%AE%9A%E5%90%91%E5%8F%98%E5%BD%A2%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/05/浅谈几种IO重定向变形用法/</id>
    <published>2018-04-05T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈几种IO重定向变形用法"><a href="#浅谈几种IO重定向变形用法" class="headerlink" title="浅谈几种IO重定向变形用法"></a>浅谈几种IO重定向变形用法</h2><h3 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h3><p>首先，我们来认识一下linux系统中的几种标准输入和输出</p><p>什么是标准输入和输出呢？</p><p>Linux给程序提供了三种I/O设备，即：</p><ul><li><p>标准输入（STDIN）  0            默认接受来自键盘的输入</p></li><li><p>标准输出（STDOUT） 1      默认输出到终端窗口</p></li><li><p>标准错误（STDERR） 2       默认输出到终端窗口</p></li></ul><p>同时linux中使用“&gt;”和“&gt;&gt;”将标准输出和标准错误重新定向到文件中：</p><ul><li><p>“&gt;”后跟重定向文件，文件内容会被覆盖</p></li><li><p>>       把标准输出重定向到文件</p></li><li><p>2&gt;    把标准错误重定向到文件</p></li><li><p>&amp;&gt;    把标准输出和错误都定向到文件</p></li><li><p>1&gt;&amp;2        把标准输出定向到标准错误（简单来讲，对的变成错的）</p></li><li><p>2&gt;&amp;1        把标准错误定向到标准标准输出（错的变成对的）</p></li></ul><ul><li><p>“&gt;&gt;”后跟重定向文件，是在原有内容基础上，追加内容</p></li><li><p>>&gt;    追加标准输出重定向到文件</p></li><li><p>2&gt;&gt;  追加标准错误重定向到文件</p></li><li><p>&amp;&gt;&gt; 追加标准输出和错误都定向到文件</p></li></ul><p>那么下面我们来讨论下几种重定向的变形用法：</p><p>首先我们先建file1-6的6个空文件<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E7%A9%BA%E6%96%87%E4%BB%B6.png" alt="enter image description here"><br>这里我们看到:</p><p><code>ll /data/f1</code> 显示标准输出（f1文件详细信息）；</p><p><code>ll /erorr</code> 显示标准错误（提示无此目录）；<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E7%A1%AE%E4%B8%8E%E9%94%99%E8%AF%AF.png" alt="enter image description here"></p><h3 id="二、实验"><a href="#二、实验" class="headerlink" title="二、实验"></a>二、实验</h3><h4 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file1 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file1.png" alt="enter image description here"></p><p>结果:屏幕无显示，标准输出和标准错误输入到file1文件中</p><h4 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 2&gt;&amp;1 &gt; /data/file2</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file2.png" alt="enter image description here"></p><p>结果:屏幕显示标准错误，标准输出输入到file2文件中</p><h4 id="实验3"><a href="#实验3" class="headerlink" title="实验3"></a>实验3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 2&gt; /data/file3 1&gt;&amp;2</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file3.png" alt="enter image description here"></p><p>结果:屏幕无显示，标准输出和标准错误输入到file3文件中</p><h4 id="实验4"><a href="#实验4" class="headerlink" title="实验4"></a>实验4</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 1&gt;&amp;2 &gt; /data/file4</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file4.png" alt="enter image description here"></p><p>结果:屏幕显示标准错误，标准输出输入到file4文件中</p><h4 id="实验5"><a href="#实验5" class="headerlink" title="实验5"></a>实验5</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file5</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file5.png" alt="enter image description here"></p><p>结果:屏幕显示标准错误，标准输出输入到file5文件中</p><h4 id="实验6"><a href="#实验6" class="headerlink" title="实验6"></a>实验6</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file6 1&gt;&amp;2</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file6.png" alt="enter image description here"></p><p>结果:屏幕显示标准输出和标准错误，file6文件为空</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>观察6个小实验我们发现:</p><p>实验1,3得出的结果完全相同，屏幕无显示，标准输出和标准错误输入到file文件中。得出此结果也有两种</p><p>执行顺序的可能性：</p><ul><li><p>可能性1：实验1可看做，标准输出先重定向到file文件中，标准错误然后重定向为标准输出再次重定向到file文件中；实验3可看做，标准错误先重定向到file文件中，标准输出然后重定向为标准错误再次重定向到file文件中，所以file文件中既有标准输入又有标准输出。</p></li><li><p>可能性2：实验1可看做，标准输出和错误都经过2&gt;&amp;1的重定向后，全变为标准输出，再输入进file1件中；实验3可看做，标准输出和错误都经过1&gt;&amp;2的重定向后，全变为标准错误，再输入file3文件中。于是我们有了实验6，ll /data/f1 /erorr &gt; /data/file6 1&gt;&amp;2，得出结果屏幕显示标准输出和标准错误，file6文件为空，由此可认为实验6执行了可能性2的执行过程。</p></li></ul><p>结论1:当有1&gt;&amp;2或2&gt;&amp;1处于重定向组合命令结尾时，输出结果全部先执行1&gt;&amp;2或2&gt;&amp;1，再执行前面的重定向。</p><p>实验2,4,5得出的结果完全相同，即屏幕显示标准错误，标准输出输入到file5文件中</p><p>三条命令分别为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 2&gt;&amp;1 &gt; /data/file2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 1&gt;&amp;2 &gt; /data/file4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file5</span><br></pre></td></tr></table></figure><p>我们是否可以这样认为:</p><p>结论2:当2&gt;&amp;1或1&gt;&amp;2处在重定向组合命令中间位置时，2&gt;&amp;1或1&gt;&amp;2是不起作用的，可以忽略掉（此结论待定）</p><p>现在再来看这个问题</p><p>下列哪个标准输出结果与其他选项不同：（   ）</p><p>A.cmd &gt;log 2&gt;&amp;1</p><p>B.cmd 2&gt;&amp;1 &gt;log</p><p>C.cmd &amp;&gt; log</p><p>D,cmd 2&gt;log 1&gt;&amp;2</p><p>小伙伴们，现在用以上结论去做这道题，是不是很easy了呢</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;浅谈几种IO重定向变形用法&quot;&gt;&lt;a href=&quot;#浅谈几种IO重定向变形用法&quot; class=&quot;headerlink&quot; title=&quot;浅谈几种IO重定向变形用法&quot;&gt;&lt;/a&gt;浅谈几种IO重定向变形用法&lt;/h2&gt;&lt;h3 id=&quot;一、简介&quot;&gt;&lt;a href=&quot;#一、简介&quot;
      
    
    </summary>
    
    
      <category term="IO重定向" scheme="http://yoursite.com/tags/IO%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件权限详解</title>
    <link href="http://yoursite.com/2018/04/04/Linux%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/04/04/Linux文件权限详解/</id>
    <published>2018-04-04T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux文件权限详解"><a href="#Linux文件权限详解" class="headerlink" title="Linux文件权限详解"></a>Linux文件权限详解</h2><blockquote><p>Linux系统中不仅是对用户与组根据UID,GID进行了管理，还对Linux系统中的文件，按照用户与组进行分类，针对不同的群体进行了权限管理，用他来确定谁能通过何种方式对文件和目录进行访问和操作。</p></blockquote><h3 id="一、文件权限"><a href="#一、文件权限" class="headerlink" title="一、文件权限"></a>一、文件权限</h3><h4 id="1-文件的权限针对三类对象进行定义"><a href="#1-文件的权限针对三类对象进行定义" class="headerlink" title="1.文件的权限针对三类对象进行定义"></a>1.文件的权限针对三类对象进行定义</h4><ul><li><p>r：读取文件内容</p></li><li><p>w：修改文件内容</p></li><li><p>x：执行权限对除二进制程序以外的文件没什么意义</p></li></ul><h4 id="2-每个文件针对每类访问者定义了三种主要权限"><a href="#2-每个文件针对每类访问者定义了三种主要权限" class="headerlink" title="2.每个文件针对每类访问者定义了三种主要权限"></a>2.每个文件针对每类访问者定义了三种主要权限</h4><ul><li><p>r：Read      读</p></li><li><p>w：Write      写</p></li><li><p>x：eXecute      执行</p></li></ul><p>另 X：针对目录加执行权限，文件不加执行权限（因文件具备执行权限有安全隐患）</p><p>注意：root账户不受文件权限的读写限制，执行权限受限制</p><h4 id="3-对于文件和目录来说，r，w，x有着不同的作用和含义"><a href="#3-对于文件和目录来说，r，w，x有着不同的作用和含义" class="headerlink" title="3.对于文件和目录来说，r，w，x有着不同的作用和含义"></a>3.对于文件和目录来说，r，w，x有着不同的作用和含义</h4><p> 针对文件：</p><ul><li><p>r：读取文件内容</p></li><li><p>w：修改文件内容</p></li><li><p>x：执行权限对除二进制程序以外的文件没什么意义</p></li></ul><p>针对目录：</p><p>目录本质可看做是存放文件列表、节点号等内容的文件</p><ul><li><p>r：查看目录下的文件列表</p></li><li><p>w：删除和创建目录下的文件</p></li><li><p>x：可以cd进入目录，能查看目录中文件的详细属性，能访问目录下文件内容（基础权限）</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%9D%83%E9%99%90.png" alt="enter image description here"></p><h4 id="4-用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。"><a href="#4-用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。" class="headerlink" title="4.用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。"></a>4.用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。</h4><h3 id="二、修改文件访问权限的方法"><a href="#二、修改文件访问权限的方法" class="headerlink" title="二、修改文件访问权限的方法"></a>二、修改文件访问权限的方法</h3><p>chmod              修改权限 change mode</p><h4 id="1-mode法"><a href="#1-mode法" class="headerlink" title="1.mode法"></a>1.mode法</h4><p>格式：chmod who opt per file</p><ul><li><p>who：u g o a（all）</p></li><li><p>opt：+ – =</p></li><li><p>per：r w x X</p></li></ul><h4 id="2-数字法"><a href="#2-数字法" class="headerlink" title="2.数字法"></a>2.数字法</h4><p>格式：chmod XXX file</p><ul><li><p>rwx rw- r–</p></li><li><p>111 110 100</p></li><li><p>7   6   4</p></li></ul><ul><li><p>r：4</p></li><li><p>w：2</p></li><li><p>x：1</p></li></ul><p>例：chmod 764 file        给file文件添加 rwxrw-r– 权限</p><p>chmod -R +X dir               给dir目录添加X执行权限，dir目录下文件不添加执行权限</p><p>（如果dir目录下有文件已具备执行权限，则添加该文件执行权限）</p><h3 id="三、UMASK值"><a href="#三、UMASK值" class="headerlink" title="三、UMASK值"></a>三、UMASK值</h3><p>作用：取消对应的权限，影响创建文件和目录的默认权限</p><p>对目录：</p><ul><li>umask+default=777（dir）</li></ul><p>对文件：</p><ul><li>666-umask：观察结果，如果有奇数，奇数位+1，偶数不变</li></ul><h3 id="四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）"><a href="#四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）" class="headerlink" title="四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）"></a>四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）</h3><h4 id="1-suid"><a href="#1-suid" class="headerlink" title="1.suid"></a>1.suid</h4><p>作用：给一个用户继承二进制程序所有者拥有的权限</p><p>suid权限位 位于所有者的执行权限位上，如果一个文件具有suid权限，则所有者执行位为s，文件表现为红色背景</p><p>例：<code>ll /usr/bin/passwd</code></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E7%BA%A2%E8%89%B2suid.png" alt="enter image description here"></p><p>给file文件增加suid权限</p><ul><li><p>chmod u+s file</p></li><li><p>chmod 4755 file               suid数字法表示为4</p></li></ul><p>suid只适合作用在二进制程序上</p><h4 id="2-sgid"><a href="#2-sgid" class="headerlink" title="2.sgid"></a>2.sgid</h4><p>作用1：给一个用户继承二进制程序所有组拥有的权限</p><p>sgid权限位 位于所有组的执行权限位，如果一个文件具有suid权限，则所有组的执行位为s，文件表现为黄色背景</p><p>例：<code>ll which cat</code><br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E9%BB%84%E8%89%B2sgid.png" alt="enter image description here"></p><p>给file文件增加sgid权限</p><ul><li><p>chmod g+s file</p></li><li><p>chmod 2755 file               sgid数字法表示为2</p></li></ul><p>作用2：作用在目录上时，使一个目录下的新建的文件继承目录的所属组</p><h4 id="3-sticky"><a href="#3-sticky" class="headerlink" title="3.sticky"></a>3.sticky</h4><p> 作用：作用于目录上，此目录的文件只能被所有者删除</p><p>sticky权限位 位于其他的执行权限位上，如果一个文件具有sticky权限，则其他的执行位为t，目录表现为绿色背景</p><p>例：<code>ll -d /tmp</code><br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E7%BB%BF%E8%89%B2sticky.png" alt="enter image description here"></p><p>给dir目录添加sticky权限</p><ul><li><p>chmod o+t dir</p></li><li><p>chmod 1777 dir                sticky数字法表示为1</p></li></ul><h3 id="五、ACL访问控制列表"><a href="#五、ACL访问控制列表" class="headerlink" title="五、ACL访问控制列表"></a>五、ACL访问控制列表</h3><p>作用：实现更加灵活的权限管理，打破了三类用户的权限管理</p><h4 id="1-添加ACL权限"><a href="#1-添加ACL权限" class="headerlink" title="1.添加ACL权限"></a>1.添加ACL权限</h4><ul><li><p>setfacl -m u:wang:0 file 使wang账户对指定file文件无权限</p></li><li><p>setfacl -m u:mage:rw file       使mage账户对指定file文件有读写权限</p></li><li><p>setfacl -m g:g1:rw file 使g1组对指定file文件有读写权限</p></li><li><p>getfacl     file                     查看指定file文件的ACL权限</p></li></ul><p>ACL权限执行顺序类似于用户获取文件权限的顺序，getfacl顺序从上到下执行，一旦生效，下面的将不再生效（如果属于多个组，权限累加）</p><h4 id="2-删除ACL权限"><a href="#2-删除ACL权限" class="headerlink" title="2.删除ACL权限"></a>2.删除ACL权限</h4><ul><li><p>setfacl -x u:wang file      删除wang账户对指定file文件的ACL权限</p></li><li><p>setfacl -x g:g1 file   删除g1组对指定file文件的ACL权限</p></li></ul><h4 id="3-ACL权限下的mask"><a href="#3-ACL权限下的mask" class="headerlink" title="3.ACL权限下的mask"></a>3.ACL权限下的mask</h4><p>设置用户对指定文件所能拥有的最大权限（限高作用）</p><ul><li><p>setfacl -m mask::r file             使指定文件file所拥有的最大权限位读r</p></li><li><p>setfacl -x mask::r file               取消指定文件file的最大权限限制mask</p></li><li><p>setfacl -b f1                      取消f1文件所有的ACL权限</p></li></ul><p>ACL生效顺序：所有者、自定义用户、自定义组、其他人</p><h4 id="4-备份和恢复ACL权限"><a href="#4-备份和恢复ACL权限" class="headerlink" title="4.备份和恢复ACL权限"></a>4.备份和恢复ACL权限</h4><ul><li><p>getfacl -R /tmp/dir1&gt;acl.txt           将dir1目录下ACL权限备份</p></li><li><p>setfacl -R –set-file=acl.txt /tem/dir      恢复dir1目录下ACL权限</p></li></ul><h3 id="六、文件权限操作的常用命令"><a href="#六、文件权限操作的常用命令" class="headerlink" title="六、文件权限操作的常用命令"></a>六、文件权限操作的常用命令</h3><h4 id="1-chown-设置文件所有者（普通用户无法修改文件所有者）"><a href="#1-chown-设置文件所有者（普通用户无法修改文件所有者）" class="headerlink" title="1.chown              设置文件所有者（普通用户无法修改文件所有者）"></a>1.chown              设置文件所有者（普通用户无法修改文件所有者）</h4><ul><li><p>-R     递归</p></li><li><p>user：group   同时修改所有者，所有组</p></li></ul><h4 id="2-chgrp-设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）"><a href="#2-chgrp-设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）" class="headerlink" title="2.chgrp                设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）"></a>2.chgrp                设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）</h4><ul><li>-R     递归</li></ul><h4 id="3-chmod-设置指定文件权限"><a href="#3-chmod-设置指定文件权限" class="headerlink" title="3.chmod              设置指定文件权限"></a>3.chmod              设置指定文件权限</h4><ul><li><p>-R     递归</p></li><li><p>–reference=f1 f2 f3        参考f1文件权限设置f2，f3文件</p></li></ul><h4 id="4-chattr-给指定文件添加保护，避免root账户误操作"><a href="#4-chattr-给指定文件添加保护，避免root账户误操作" class="headerlink" title="4,chattr               给指定文件添加保护，避免root账户误操作"></a>4,chattr               给指定文件添加保护，避免root账户误操作</h4><ul><li><p>i      锁定文件，不能删除，不能改名，不能更改内容</p></li><li><p>-i      解锁+i</p></li><li><p>-a     锁定文件，不能删除，不能改名，但可追加内容（追加重定向）</p></li><li><p>-a     解锁+a</p></li><li><p>+A    指定文件读时间atime不再更改</p></li></ul><h4 id="5-lsattr-查看指定文件是否有锁定状态"><a href="#5-lsattr-查看指定文件是否有锁定状态" class="headerlink" title="5.lsattr                 查看指定文件是否有锁定状态"></a>5.lsattr                 查看指定文件是否有锁定状态</h4><h4 id="6-setfacl-设置文件ACL权限"><a href="#6-setfacl-设置文件ACL权限" class="headerlink" title="6.setfacl              设置文件ACL权限"></a>6.setfacl              设置文件ACL权限</h4><ul><li><p>-m mask::r file          使指定文件file所拥有的最大权限位读r</p></li><li><p>-x mask::r file            取消指定文件file的最大权限限制mask</p></li><li><p>-b f1                   取消f1文件所有的ACL权限</p></li><li><p>-R –set-file=acl.txt /tem/dir   恢复dir1目录下ACL权限</p></li></ul><h4 id="7-getfacl-查看文件ACL权限"><a href="#7-getfacl-查看文件ACL权限" class="headerlink" title="7.getfacl              查看文件ACL权限"></a>7.getfacl              查看文件ACL权限</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux文件权限详解&quot;&gt;&lt;a href=&quot;#Linux文件权限详解&quot; class=&quot;headerlink&quot; title=&quot;Linux文件权限详解&quot;&gt;&lt;/a&gt;Linux文件权限详解&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Linux系统中不仅是对用户与组根据UID
      
    
    </summary>
    
    
      <category term="文件权限" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户与组管理命令的易混淆点和重合点</title>
    <link href="http://yoursite.com/2018/04/03/Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4%E7%9A%84%E6%98%93%E6%B7%B7%E6%B7%86%E7%82%B9%E5%92%8C%E9%87%8D%E5%90%88%E7%82%B9/"/>
    <id>http://yoursite.com/2018/04/03/Linux用户与组管理命令的易混淆点和重合点/</id>
    <published>2018-04-03T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.521Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux用户与组管理命令的易混淆点和重合点"><a href="#Linux用户与组管理命令的易混淆点和重合点" class="headerlink" title="Linux用户与组管理命令的易混淆点和重合点"></a>Linux用户与组管理命令的易混淆点和重合点</h2><blockquote><p>Linux用户与组的管理命令主要有useradd、usermod、userdel、groupadd、groupmod、groupdel、groupmems、gpasswd、passwd、newgrp等等（详见上篇Linux用户与组的管理详解），其中每条命令也都有很多的可选项，对于初学者来说很容易造成混淆；此外，这些命令之间有很多相重合的用法，即：拥有多种命令可实现相同的需求的情况。</p></blockquote><h3 id="一、易混淆点：关于GID的改变"><a href="#一、易混淆点：关于GID的改变" class="headerlink" title="一、易混淆点：关于GID的改变"></a>一、易混淆点：关于GID的改变</h3><h4 id="1-改变一个用户的gid"><a href="#1-改变一个用户的gid" class="headerlink" title="1.改变一个用户的gid"></a>1.改变一个用户的gid</h4><pre><code>usermod -g[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#usermod -g 4322 wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=4322(mage) groups=4322(mage)</code></pre><p>此条命令改变了用户的主组，需注意的是新改变的主组需已存在</p><h4 id="2-临时改变一个用户的gid"><a href="#2-临时改变一个用户的gid" class="headerlink" title="2.临时改变一个用户的gid"></a>2.临时改变一个用户的gid</h4><pre><code>[wangx@CentOS6 ~]$iduid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023[wangx@CentOS6 ~]$newgrp mage[wangx@CentOS6 ~]$iduid=1666(wangx) gid=4322(mage) groups=4322(mage),1235(wangx) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023[wangx@CentOS6 ~]$id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><p>此条命令作用为切换当前登录用户的主组，注意是临时切换，重新登录后失效，使用id  user命令看到的还是切换前的主组</p><h4 id="3-改变组的gid"><a href="#3-改变组的gid" class="headerlink" title="3.改变组的gid"></a>3.改变组的gid</h4><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#groupmod -g 1236 wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1236(wangx) groups=1236(wangx)</code></pre><p>此条命令仅仅是改变了组的ID，组成员还是原来的组成员，没有变化。</p><h3 id="二、增、删辅助组的多种方式"><a href="#二、增、删辅助组的多种方式" class="headerlink" title="二、增、删辅助组的多种方式"></a>二、增、删辅助组的多种方式</h3><h4 id="1-指定用户user加入组group"><a href="#1-指定用户user加入组group" class="headerlink" title="1.指定用户user加入组group"></a>1.指定用户user加入组group</h4><p>groupmems -a user -g group    </p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#groupmems -a wangx -g mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><h4 id="2-将用户user添加至指定组group中"><a href="#2-将用户user添加至指定组group中" class="headerlink" title="2.将用户user添加至指定组group中"></a>2.将用户user添加至指定组group中</h4><p>gpasswd -a user group     </p><pre><code>[root@CentOS6 ~]#gpasswd -a wangx mageAdding user wangx to group mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><h4 id="3-为user用户添加辅助组"><a href="#3-为user用户添加辅助组" class="headerlink" title="3.为user用户添加辅助组"></a>3.为user用户添加辅助组</h4><p>注意：新的辅助组覆盖原辅助组<br>usermod -G</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#usermod -G mage wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><h4 id="4-从group组中删除用户user"><a href="#4-从group组中删除用户user" class="headerlink" title="4.从group组中删除用户user"></a>4.从group组中删除用户user</h4><p>groupmems  -d  user  -g  group</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)[root@CentOS6 ~]#groupmems -d wangx -g mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)</code></pre><h4 id="5-将用户user从group组中删除"><a href="#5-将用户user从group组中删除" class="headerlink" title="5.将用户user从group组中删除"></a>5.将用户user从group组中删除</h4><p>gpasswd      -d   user  group</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)[root@CentOS6 ~]#gpasswd -d wangx mageRemoving user wangx from group mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)</code></pre><h4 id="6-两种方法均可删除所有辅助组"><a href="#6-两种方法均可删除所有辅助组" class="headerlink" title="6.两种方法均可删除所有辅助组"></a>6.两种方法均可删除所有辅助组</h4><p>usermod -G user user<br>usermod -G   “”   user</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)[root@CentOS6 ~]#usermod -G wangx wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)</code></pre><h3 id="三、其他的一些拥有多种命令可实现相同需求的情况"><a href="#三、其他的一些拥有多种命令可实现相同需求的情况" class="headerlink" title="三、其他的一些拥有多种命令可实现相同需求的情况"></a>三、其他的一些拥有多种命令可实现相同需求的情况</h3><h4 id="1-修改一个用户的shell类型（2种方法）"><a href="#1-修改一个用户的shell类型（2种方法）" class="headerlink" title="1.修改一个用户的shell类型（2种方法）"></a>1.修改一个用户的shell类型（2种方法）</h4><p>命令1：chsh             修改用户的shell</p><p>命令2：usermod -s  新的默认shell</p><h4 id="2-修改一个用户的描述信息（2种方法）"><a href="#2-修改一个用户的描述信息（2种方法）" class="headerlink" title="2.修改一个用户的描述信息（2种方法）"></a>2.修改一个用户的描述信息（2种方法）</h4><p>命令1：chfn              修改用户描述信息</p><p>命令2：usermod -c  新的用户描述信息</p><h4 id="3-修改一个账号下次登录自动修改密码（2种方法）"><a href="#3-修改一个账号下次登录自动修改密码（2种方法）" class="headerlink" title="3.修改一个账号下次登录自动修改密码（2种方法）"></a>3.修改一个账号下次登录自动修改密码（2种方法）</h4><p>命令1：chage -l wang    使wang账户口令立马失效，下次登录自动修改</p><p>命令2：passwd -e wang 使wang账户口令立马失效，下次登录自动修改</p><h4 id="4-给一个账号加锁（4种方法）"><a href="#4-给一个账号加锁（4种方法）" class="headerlink" title="4.给一个账号加锁（4种方法）"></a>4.给一个账号加锁（4种方法）</h4><p>命令1：usermod -L</p><p>命令2：passwd -l</p><p>命令3：usermod -U</p><p>命令4：passwd -u</p><h4 id="5-给一个账号指定最短使用期限（mindays）（2种方法）"><a href="#5-给一个账号指定最短使用期限（mindays）（2种方法）" class="headerlink" title="5.给一个账号指定最短使用期限（mindays）（2种方法）"></a>5.给一个账号指定最短使用期限（mindays）（2种方法）</h4><p>命令1：passwd -n</p><p>命令2：chage -m</p><h4 id="6-最大使用期限（maxdays）（2种方法）"><a href="#6-最大使用期限（maxdays）（2种方法）" class="headerlink" title="6.最大使用期限（maxdays）（2种方法）"></a>6.最大使用期限（maxdays）（2种方法）</h4><p>命令1：passwd -x</p><p>命令2：chage -M</p><h4 id="7-设置一个账号提前多少天开始警告（warndays）（2种方法）"><a href="#7-设置一个账号提前多少天开始警告（warndays）（2种方法）" class="headerlink" title="7.设置一个账号提前多少天开始警告（warndays）（2种方法）"></a>7.设置一个账号提前多少天开始警告（warndays）（2种方法）</h4><p>命令1：passwd -w</p><p>命令2：chage -W</p><h4 id="8-设置一个账号非活动期限（inactivedays）（3种方法）"><a href="#8-设置一个账号非活动期限（inactivedays）（3种方法）" class="headerlink" title="8.设置一个账号非活动期限（inactivedays）（3种方法）"></a>8.设置一个账号非活动期限（inactivedays）（3种方法）</h4><p>命令1：passwd -i</p><p>命令2：usermod -f</p><p>命令3：chage -I</p><h4 id="9-设置一个账号的有效期（expiredate）（2种方法）"><a href="#9-设置一个账号的有效期（expiredate）（2种方法）" class="headerlink" title="9.设置一个账号的有效期（expiredate）（2种方法）"></a>9.设置一个账号的有效期（expiredate）（2种方法）</h4><p>命令1：usermod -e YYYY-MM-DD    设置用户账号过期时间</p><p>命令2：chage -E YYYY-MM-DD 设置用户账号过期时间</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux用户与组管理命令的易混淆点和重合点&quot;&gt;&lt;a href=&quot;#Linux用户与组管理命令的易混淆点和重合点&quot; class=&quot;headerlink&quot; title=&quot;Linux用户与组管理命令的易混淆点和重合点&quot;&gt;&lt;/a&gt;Linux用户与组管理命令的易混淆点和重
      
    
    </summary>
    
    
      <category term="用户与组" scheme="http://yoursite.com/tags/%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户与组管理详解</title>
    <link href="http://yoursite.com/2018/04/02/Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/04/02/Linux用户与组管理详解/</id>
    <published>2018-04-02T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux用户与组管理详解"><a href="#Linux用户与组管理详解" class="headerlink" title="Linux用户与组管理详解"></a>Linux用户与组管理详解</h2><blockquote><p>在linux系统上，用户管理是基于用户名和密码的方式进行资源的分配，了解和掌握用户与组的管理是从事运维工作所必须具备的能力，也是将来从事运维行业的重要工作之一。这里我将介绍Linux系统中用户与组的一些相关概念及管理用户与组的常见命令等：</p></blockquote><h4 id="安全3A"><a href="#安全3A" class="headerlink" title="安全3A"></a>安全3A</h4><p>Linux通过三个机制来保证用户的安全：</p><ul><li><p>Authentication：认证</p></li><li><p>Authorization：授权</p></li><li><p>Accouting|Audition：审计</p></li></ul><h4 id="用户user"><a href="#用户user" class="headerlink" title="用户user"></a>用户user</h4><p>令牌：token</p><p>Linux用户：Username</p><p>管理员：root，UID=0（拥有对系统的最高操作权限）</p><p>普通用户：</p><ul><li><p>系统用户：1-499,1-999（centos7）</p></li><li><p>登录用户：500+，1000+（centos7）</p></li></ul><h4 id="组-group："><a href="#组-group：" class="headerlink" title="组 group："></a>组 group：</h4><p>Linux组：Groupname/GID</p><p>管理员组：root，GID=0</p><p>普通组：</p><ul><li><p>系统组：1-499,1-999（centos7）</p></li><li><p>普通组：500+，1000+（centos7）</p></li></ul><p>在创建用户不指定组的情况下，默认创建一个与该用户名相同的组作为该用户的主组</p><h4 id="组的类别："><a href="#组的类别：" class="headerlink" title="组的类别："></a>组的类别：</h4><p>用户的主要组：</p><p>用户必须属于一个且只有一个主组</p><p>组名同用户名，且仅包含一个用户，私有组</p><p>用户的附加组：</p><p>一个用户可以属于零个或多个附加组</p><h4 id="安全上下文"><a href="#安全上下文" class="headerlink" title="安全上下文"></a>安全上下文</h4><p>进程所能够访问资源的权限取决于进程的运行者的身份</p><h4 id="用户和组的配置文件"><a href="#用户和组的配置文件" class="headerlink" title="用户和组的配置文件"></a>用户和组的配置文件</h4><ul><li><p>/etc/passwd：        存放用户及其属性信息</p></li><li><p>/etc/shadow：       存放用户密码及其相关信息</p></li><li><p>/etc/group：  存放组及属性信息</p></li><li><p>/etc/gshadow：     存放组密码及其相关信息</p></li><li><p>/etc/default/useradd：新建账户模板信息</p></li></ul><h4 id="etc-passwd"><a href="#etc-passwd" class="headerlink" title="/etc/passwd"></a>/etc/passwd</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/passwd.png" alt="enter image description here"></p><p>name：password:UID:GID:GECEO:directory:shell</p><ol><li><p>用户名</p></li><li><p>密码：显示为x</p></li><li><p>UID：用户ID</p></li><li><p>GID：组ID</p></li><li><p>描述信息：GECOS，可添加用户描述信息</p></li><li><p>家目录：用户家目录</p></li><li><p>shell类型：用户shell类型</p><h4 id="etc-shadow"><a href="#etc-shadow" class="headerlink" title="/etc/shadow"></a>/etc/shadow</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/shadow.png" alt="enter image description here"></p></li><li><p>用户名</p></li><li><p>密码加密：算法$6；!!表示账户锁定</p></li><li><p>上次修改密码时间：距离1970.1.1的天数</p></li><li><p>密码最小修改时间：距离下次修改密码至少需间隔的天数（0表示随时可变更）</p></li><li><p>密码最大修改时间：距离本次密码修改时间最多可间隔的天数（99999表示永不过期）</p></li><li><p>密码提醒时间：距离密码即将到期提前警告的天数</p></li><li><p>密码到期后宽限时间：密码到期后账户还能使用的天数</p></li><li><p>账户有效期：该账户可使用的日期</p></li><li><p>保留区域：保留将来可能增加的区域</p></li></ol><h4 id="etc-group"><a href="#etc-group" class="headerlink" title="/etc/group"></a>/etc/group</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/group.png" alt="enter image description here"></p><p>group_name:password:GID:user_list</p><ol><li><p>组名</p></li><li><p>组密码：普通用户加入某个组时需要的密码（不推荐设置密码）</p></li><li><p>GID：组ID</p></li><li><p>组成员：“,”作为分隔符</p></li></ol><h4 id="etc-gshadow"><a href="#etc-gshadow" class="headerlink" title="/etc/gshadow"></a>/etc/gshadow</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/gshadow.png" alt="enter image description here"></p><p>group_name:encrypted_password:administrators:members</p><ol><li><p>组名</p></li><li><p>组密码</p></li><li><p>组管理员（组长）</p></li><li><p>组成员：“,”作为分隔符</p></li></ol><h4 id="etc-default-useradd"><a href="#etc-default-useradd" class="headerlink" title="/etc/default/useradd"></a>/etc/default/useradd</h4><ol><li><p>GROUP=100                     创建用户无指定组时默认所属的组users</p></li><li><p>HOME=/home                          创建用户默认家目录路径</p></li><li><p>INACTIVE=-1                    创建用户时默认没有宽限时间</p></li><li><p>EXPIRE=                             创建用户时默认有效期</p></li><li><p>SHELL=/bin/bash                      创建用户时默认shell类型</p></li><li><p>SKEL=/etc/skel                          创建用户时家目录模板</p></li><li><p>CREATE_MAIL_SPOOL=yes             创建用户时默认创建邮箱</p></li></ol><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><ul><li><p>vipw         等同于vi /etc/passwd</p></li><li><p>vigr           等同于vi /etc/group</p></li><li><p>pwck        检查passwd文件格式错误</p></li><li><p>grpck        检查group文件格式错误</p></li></ul><h3 id="用户与组的管理命令"><a href="#用户与组的管理命令" class="headerlink" title="用户与组的管理命令"></a>用户与组的管理命令</h3><p>用户管理命令及常用选项：</p><h4 id="useradd"><a href="#useradd" class="headerlink" title="useradd"></a>useradd</h4><p>etc/default/useradd存放创建用户时的默认信息</p><ul><li><p>-u     指定uid（生产环境中多台服务器保证程序是同一UID）</p></li><li><p>-o     不检查UID的唯一性，需配合-u使用（不建议UID一样）</p></li><li><p>-g     创建用户时指定主组</p></li><li><p>-c  创建用户时添加描述</p></li><li><p>-d     创建用户时指定家目录路径，二层目录（生产环境中创建给服务用的账户可能会用到）</p></li><li><p>-s      创建用户时指定shell类型/etc/shells</p></li><li><p>-r      创建系统用户（默认不创建家目录）</p></li><li><p>-m    强行创建家目录，用于系统用户，配合-r使用（生产环境中为服务生成系统用户）-M         强行不创建家目录，用于普通用户</p></li><li><p>-G     创建用户时加入到多个辅助组里，多个辅助组用“，”分开</p></li><li><p>-N   创建一个用户名和主组名不同的用户，默认users作为主组</p></li><li><p>-p    创建用户添加密码（不建议此种方式添加口令，口令会在shadow文件中明文）</p></li></ul><h4 id="usermod"><a href="#usermod" class="headerlink" title="usermod"></a>usermod</h4><ul><li><p>-u     修改UID</p></li><li><p>-g     修改GID（组需存在）</p></li><li><p>-G     修改辅助组（会将原来的辅助组覆盖），如果要保留原辅助组配合-a使用</p></li><li><p>-s      新的默认shell</p></li><li><p>-c     新的注释信息</p></li><li><p>-d     新家目录不会自动创建；若要创建新家目录并移动原家数据，同时使用-m选项（-m -d有顺序）</p></li><li><p>-l      新的用户名</p></li><li><p>-L     用户加锁</p></li><li><p>-U    用户解锁（centos6以后禁止此方式解锁）</p></li></ul><h4 id="userdel"><a href="#userdel" class="headerlink" title="userdel"></a>userdel</h4><ul><li>-r      删除用户的所有文件，家目录及邮箱（工作中不建议用，建议保留数据）</li></ul><h3 id="组帐号维护命令及常用选项"><a href="#组帐号维护命令及常用选项" class="headerlink" title="组帐号维护命令及常用选项"></a>组帐号维护命令及常用选项</h3><h4 id="groupadd"><a href="#groupadd" class="headerlink" title="groupadd"></a>groupadd</h4><ul><li><p>-g     指明GID号创建组</p></li><li><p>-r      创建系统组group（centos6：ID&lt;500、centos7：ID&lt;1000）</p></li></ul><h4 id="groupmod"><a href="#groupmod" class="headerlink" title="groupmod"></a>groupmod</h4><ul><li><p>-n     新的组名</p></li><li><p>-g     新的GID</p></li></ul><h4 id="groupdel-删除组（前提没有用户以此组为主组）"><a href="#groupdel-删除组（前提没有用户以此组为主组）" class="headerlink" title="groupdel 删除组（前提没有用户以此组为主组）"></a>groupdel 删除组（前提没有用户以此组为主组）</h4><h4 id="groupmems-查看指定组的成员"><a href="#groupmems-查看指定组的成员" class="headerlink" title="groupmems     查看指定组的成员"></a>groupmems     查看指定组的成员</h4><ul><li><p>-g     更改为指定组（只有root）</p></li><li><p>-a     指定用户加入组</p></li><li><p>-d     从组中删除用户</p></li><li><p>-p     从组中清除所有成员</p></li><li><p>-l      显示组成员列表（读取的/etc/group文件中对应组的最后一个字段的全部内容）</p></li></ul><h4 id="gpasswd-给组添加口令"><a href="#gpasswd-给组添加口令" class="headerlink" title="gpasswd           给组添加口令"></a>gpasswd           给组添加口令</h4><ul><li><p>-a user     将user添加至指定组中</p></li><li><p>-d user     从指定组中移除用户user</p></li><li><p>-A user1，user2…  设置有管理权限的用户列表（设置组管理员）</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux用户与组管理详解&quot;&gt;&lt;a href=&quot;#Linux用户与组管理详解&quot; class=&quot;headerlink&quot; title=&quot;Linux用户与组管理详解&quot;&gt;&lt;/a&gt;Linux用户与组管理详解&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在linux系统上，用户管
      
    
    </summary>
    
    
      <category term="用户与组" scheme="http://yoursite.com/tags/%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>带你认识Linux中的通配符</title>
    <link href="http://yoursite.com/2018/04/01/%E5%B8%A6%E4%BD%A0%E8%AE%A4%E8%AF%86Linux%E4%B8%AD%E7%9A%84%E9%80%9A%E9%85%8D%E7%AC%A6/"/>
    <id>http://yoursite.com/2018/04/01/带你认识Linux中的通配符/</id>
    <published>2018-04-01T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="带你认识Linux中的通配符"><a href="#带你认识Linux中的通配符" class="headerlink" title="带你认识Linux中的通配符"></a>带你认识Linux中的通配符</h2><blockquote><p>所谓的通配是指：显示以指定条件的文件，英文名为glob。通配符是一种特殊语句，用来模糊搜索文件。当查找文件夹时，可以使用它来代替一个或多个真正字符它使得文件管理更加快速，便捷，大大提升了工作效率。</p></blockquote><p>通配符是一种特殊语句，用来模糊搜索文件。当查找文件夹时，可以使用它来代替一个或多个真正字符它使得文件管理更加快速，便捷，大大提升了工作效率。</p><p>常用的通配符有  *   ?   []  等（可通过man 7 glob的帮助文档来查看所有通配符）</p><h4 id="1-表示任意长度的任意字符"><a href="#1-表示任意长度的任意字符" class="headerlink" title="1. * 表示任意长度的任意字符"></a>1. * 表示任意长度的任意字符</h4><p>例：     <code>ls -d /etc/a*</code>    </p><p>显示/etc目录下所有以a开头的文件与目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%98%9F%E5%8F%B7.png" alt="enter image description here"></p><h4 id="2-表示任意单个字符"><a href="#2-表示任意单个字符" class="headerlink" title="2. ? 表示任意单个字符"></a>2. ? 表示任意单个字符</h4><p>例：<code>ls  a?b</code></p><p>显示当前目录下所有以a开头中间有一个字符b结尾的文件<br>a10b 中间夹2个字符，因此不显示<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E9%97%AE%E5%8F%B7.png" alt="enter image description here"></p><h4 id="3-匹配指定范围内任意单个字符"><a href="#3-匹配指定范围内任意单个字符" class="headerlink" title="3. [] 匹配指定范围内任意单个字符"></a>3. [] 匹配指定范围内任意单个字符</h4><p>例：<code>ls -d /etc/[mn]*</code></p><p>显示/etc目录下所有以m开头或者n开头的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/3-2.png" alt="enter image description here"></p><h4 id="4-a-Z-：表示任意一个单个字母"><a href="#4-a-Z-：表示任意一个单个字母" class="headerlink" title="4.[a-Z]：表示任意一个单个字母"></a>4.[a-Z]：表示任意一个单个字母</h4><p>例：<code>ls -d*[a-Z]</code></p><p>显示目录下所有以字母开头的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%AD%97%E6%AF%8D-2.png" alt="enter image description here"></p><h4 id="5-0-9-：表示任意单个数字"><a href="#5-0-9-：表示任意单个数字" class="headerlink" title="5.[0-9]：表示任意单个数字"></a>5.[0-9]：表示任意单个数字</h4><p>例：<code>ls -d f[0-9]</code></p><p>显示当前目录下所有以f开头后跟任意一个数字的文件和目录<br>f16因含两个数字，则不予显示</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%95%B0%E5%AD%97.png" alt="enter image description here"></p><h4 id="6-匹配除指定范围以外的任意单个字符"><a href="#6-匹配除指定范围以外的任意单个字符" class="headerlink" title="6.[^]匹配除指定范围以外的任意单个字符"></a>6.[^]匹配除指定范围以外的任意单个字符</h4><p>例：<code>ls  -d   [^a]*</code></p><p>显示当前目录下所有不是a开头的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E9%99%A4.png" alt="enter image description here"><br>注意：对字符集或数字集取反时，托字符^加在括号内；如：[^0-9], [^[:alpha:]]</p><h4 id="7-alpha-表示所有的字母（不区分大小写）"><a href="#7-alpha-表示所有的字母（不区分大小写）" class="headerlink" title="7.[:alpha:]表示所有的字母（不区分大小写）"></a>7.[:alpha:]表示所有的字母（不区分大小写）</h4><p>例：<code>ls -d *[[:alpha:]]</code></p><p>显示当前目录下所有以字母结尾（不区分大小写）的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%AD%97%E6%AF%8D%E5%AD%97%E7%AC%A6%E9%9B%86.png" alt="enter image description here"></p><h4 id="8-digit-表示任意单个数字，效果同-0-9"><a href="#8-digit-表示任意单个数字，效果同-0-9" class="headerlink" title="8.[:digit:]表示任意单个数字，效果同[0-9]"></a>8.[:digit:]表示任意单个数字，效果同[0-9]</h4><p>例：<code>ls f[[:digit:]]</code></p><p>显示当前目录下所有f开头，单个数字结尾的文件，值得注意的是：[:digit:]只代表单个数字，f16文件因为f后跟两个数字，则不予显示<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6%E9%9B%86.png" alt="enter image description here"></p><h4 id="9-lower-表示任意单个小写字母"><a href="#9-lower-表示任意单个小写字母" class="headerlink" title="9.[:lower:]表示任意单个小写字母"></a>9.[:lower:]表示任意单个小写字母</h4><p>例：<code>ls -d [[:lower:]]*[[:lower:]]</code></p><p>显示所有当前目录下以小字字母开头且以小写字母结尾的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%B0%8F%E5%86%99%E5%AD%97%E6%AF%8D%E5%AD%97%E7%AC%A6%E9%9B%86.png" alt="enter image description here"></p><h4 id="10-upper-表示任意单个大写字母"><a href="#10-upper-表示任意单个大写字母" class="headerlink" title="10.[:upper:]表示任意单个大写字母"></a>10.[:upper:]表示任意单个大写字母</h4><p>例：<code>ls -d a*[[:upper:]]</code></p><p>显示当前目录下 所有以a开头并以一个大写字母结尾的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E5%86%99%E5%AD%97%E6%AF%8D%E5%AD%97%E7%AC%A6%E9%9B%86.png" alt="enter image description here"></p><h4 id="11-alnum-表示任意单个字母或数字"><a href="#11-alnum-表示任意单个字母或数字" class="headerlink" title="11.[:alnum:]表示任意单个字母或数字"></a>11.[:alnum:]表示任意单个字母或数字</h4><p>例：<code>ls -d [[:alnum:]]</code></p><p>显示当前目录下 所有以字母或数字结尾的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/T2H17KYXSPA7ORCX5.png" alt="enter image description here"></p><p>到此为止，常用的通配符使用方法就介绍到这里了，小伙伴们以后查找文件是不是更容易了呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;带你认识Linux中的通配符&quot;&gt;&lt;a href=&quot;#带你认识Linux中的通配符&quot; class=&quot;headerlink&quot; title=&quot;带你认识Linux中的通配符&quot;&gt;&lt;/a&gt;带你认识Linux中的通配符&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;所谓的通配是指：显
      
    
    </summary>
    
    
      <category term="通配符" scheme="http://yoursite.com/tags/%E9%80%9A%E9%85%8D%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件系统简介</title>
    <link href="http://yoursite.com/2018/03/30/Linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2018/03/30/Linux文件系统简介/</id>
    <published>2018-03-30T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.523Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux文件系统简介"><a href="#Linux文件系统简介" class="headerlink" title="Linux文件系统简介"></a>Linux文件系统简介</h2><blockquote><p>“一切皆是文件”是Linux基本哲学思想之一，可见文件系统在linux系统中的重要性，学好文件系统将为以后深入研究与学习Linux系统奠定良好的基础。</p></blockquote><h4 id="一、目录文件管理"><a href="#一、目录文件管理" class="headerlink" title="一、目录文件管理"></a>一、目录文件管理</h4><ul><li><p>/                         根目录每个文件和目录都从这里开始</p></li><li><p>/bin                   基本程序，一般为普通用户可执行的程序</p></li><li><p>/boot                 静态文件，系统文件</p></li><li><p>/dev                  存放硬件设备文件</p></li><li><p>/etc                   存放配置文件</p></li><li><p>/lib64                库文件</p></li><li><p>/media              挂载点</p></li><li><p>/mnt                 管理员手动挂载点</p></li><li><p>/opt                   第三方软件包</p></li><li><p>/sbin                 管理员运行的程序</p></li><li><p>/srv                   服务器相关数据</p></li><li><p>/tmp                  存放临时文件</p></li><li><p>/usr                   第二层目录结构</p></li><li><p>/var                   存放变化的文件，如/var/log存放日志</p></li><li><p>/home                家目录，存放用户信息</p></li><li><p>/root                  管理员的家目录‘’</p></li><li><p>/lost+found       分区为ext4具有（如centos6）</p></li><li><p>/misc                  实现光盘的自动挂载</p></li><li><p>/sys                    硬件相关信息</p></li><li><p>/proc                  存储内存中的状态信息</p></li><li><p>/selinux             安全策略（生产环境中一般禁用）</p></li></ul><h4 id="二、文件颜色"><a href="#二、文件颜色" class="headerlink" title="二、文件颜色"></a>二、文件颜色</h4><p>Linux系统通过不同的颜色来对文件进行区别，其中：</p><ul><li><p>蓝色                   —代表目录</p></li><li><p>绿色                   —可执行程序</p></li><li><p>红色                   —打包文件，压缩文件</p></li><li><p>浅蓝色               —链接文件（快捷方式）</p></li><li><p>粉色                   —套接字文件</p></li><li><p>浅黄色               —管道文件</p></li></ul><h4 id="三、文件类型"><a href="#三、文件类型" class="headerlink" title="三、文件类型"></a>三、文件类型</h4><ul><li><p>–                         普通文件</p></li><li><p>d                         目录文件</p></li><li><p>b                         块设备</p></li><li><p>c                         字符设备</p></li><li><p>l                          符号链接文件</p></li><li><p>p                         管道文件pipe</p></li><li><p>s                         套接字文件socket</p><h4 id="四、文件时间戳"><a href="#四、文件时间戳" class="headerlink" title="四、文件时间戳"></a>四、文件时间戳</h4><p>通过stat file 命令查看file文件时间戳：</p></li><li><p>mtime               文件最后修改时间</p></li><li><p>atime                 文件最后读取时间</p></li><li><p>ctime                 文件元数据最后发生变化的时间，如权限，所有组的变化</p></li></ul><h4 id="五、常用文件通配符"><a href="#五、常用文件通配符" class="headerlink" title="五、常用文件通配符"></a>五、常用文件通配符</h4><ul><li><p>*                       匹配零个或多个字符</p></li><li><p>？                       匹配任何单个字符</p></li><li><p>~                         当前用户家目录</p></li><li><p>[0-9]                  表示数字</p></li><li><p>[^0-9]               除数字以外</p></li><li><p>[a-z]                   小写字母</p></li><li><p>[A-Z]                 大写字母</p></li><li><p>[:digit:]              任意数字</p></li><li><p>[:lower:]            任意小写字母</p></li><li><p>[:upper:]           任意大写字母</p></li><li><p>[:alpha:]            任意大小写字母</p></li><li><p>[:alnum:]          任意数字或字母</p></li></ul><h4 id="六、节点编号inode"><a href="#六、节点编号inode" class="headerlink" title="六、节点编号inode"></a>六、节点编号inode</h4><p>Linux系统的文件数据都储存在块（block），此外还需有个地方来储存文件的元信息，比如文件权限、创建者、创建日期等。这种储存文件元信息的区域就叫做inode。</p><p>节点编号也是宝贵的资源，查看指针节点占用情况：df -i</p><p>每个节点编号占4字节</p><ul><li><p>直接指针：前12个指针为直接指针</p></li><li><p>一级指针：可保存4096/4=1024个指针，可存储文件大小1024*4096=4MB</p></li><li><p>二级指针：可存储文件大小1024<em>1024</em>4096=4GB</p></li><li><p>三级指针：可存储文件大小1024<em>1024</em>1024*4096=4TB</p></li></ul><h4 id="七、常用文件管理命令"><a href="#七、常用文件管理命令" class="headerlink" title="七、常用文件管理命令"></a>七、常用文件管理命令</h4><ol><li><p>ls 显示文件信息</p><p> -a 包含隐藏文件</p><p> -l 显示文件详细信息，可写为ll</p><p> -s 从大到小排列</p><p> -r 倒序排列</p><p> -d 只显示目录自身属性</p><p> -d */ 只显示当前目录下文件夹</p><p> -m MODE: 创建目录时直接指定权限</p></li><li><p>touch 创建文件</p><p> -a 仅改变atime和ctime</p><p> -m 仅改变mtime和ctime</p><p> -t[[CC]YY]MMDDhhmm[.ss] 指定atime和mtime的时间戳</p><p> -c 如果文件不存在，则不予创建</p></li></ol><ol start="3"><li><p>mkdir 创建目录</p><p> -p 存在于不报错，且可自动创建所需的各目录</p><p> -v 显示过程</p></li></ol><ol start="4"><li><p>cp 复制</p><p> -a 复制全部信息，用于备份；可复制特殊文件如字符文件，块文件</p><p> -i 覆盖前提示</p><p> -r 递归复制</p><p> -v 显示过程</p><p> -u 只复制源比目标更新文件或目标不存在的文件</p><p> –backup=numbered 目标存在，覆盖前先备份加数字后缀（建议加别名）</p></li><li><p>mv 移动或重命名文件（mv只支持单个文件重命名，rename可批量改名）</p><p> -i 移动前提示</p><p> -r 递归</p><p> -v 显示过程</p></li></ol><ol start="6"><li><p>rm 删除</p><p> -f 不去询问直接删除</p><p> -i 删除前交互提示</p><p> -r 递归</p></li></ol><p>好了，相信看完这些，您对Linux的文件系统已经有了一定的了解，是否对“一切皆是文件”有了自己的理解呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux文件系统简介&quot;&gt;&lt;a href=&quot;#Linux文件系统简介&quot; class=&quot;headerlink&quot; title=&quot;Linux文件系统简介&quot;&gt;&lt;/a&gt;Linux文件系统简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;“一切皆是文件”是Linux基本哲学思想之
      
    
    </summary>
    
    
      <category term="文件系统" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
</feed>
