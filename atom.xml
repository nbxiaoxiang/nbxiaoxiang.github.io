<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-26T11:33:58.139Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>头皮发麻</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建自己的yum源服务器</title>
    <link href="http://yoursite.com/2018/04/20/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84yum%E6%BA%90%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2018/04/20/搭建自己的yum源服务器/</id>
    <published>2018-04-20T15:00:00.000Z</published>
    <updated>2018-06-26T11:33:58.139Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>通过yum安装程序包最重要的一步就是指定yum仓库，今天我来教大家如何搭建自己的yum源服务器。  </p></blockquote><h3 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h3><p>准备两台Linux服务器，本文所用的服务器为CentOS6.9，及CentOS7.4服务器各一台，将演示CentOS7服务器作为yum源服务器，用CentOS6服务器进行yum访问。</p><h3 id="二、开启CentOS7自动挂载光盘服务"><a href="#二、开启CentOS7自动挂载光盘服务" class="headerlink" title="二、开启CentOS7自动挂载光盘服务"></a>二、开启CentOS7自动挂载光盘服务</h3><p>我们知道在CentOS6版本系统中，有一个“神奇”的目录/misc可实现光盘的自动挂载，但在CentOS7版本中默认并不支持此服务，需要我们进行手动安装autofs服务</p><ul><li><p>yum install autofs                             安装autofs包</p></li><li><p>systemctl start autofs                       开启自动挂载</p></li><li><p>systemctl enable autofs                    下次开机默认开启自动挂载</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%AE%89%E8%A3%85autofs.png" alt="enter image description here"></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%89%93%E5%BC%80autofs.png" alt="enter image description here"></p><h3 id="三、关闭防火墙"><a href="#三、关闭防火墙" class="headerlink" title="三、关闭防火墙"></a>三、关闭防火墙</h3><p>要注意CentOS6版本与CentOS7版本关闭防火墙的命令有所不同：</p><p>CentOS6：</p><ul><li><p>service iptables stop                      关闭防火墙</p></li><li><p>chkconfig iptables off                   下次启动时自动关闭防火墙</p></li></ul><p>CentOS7：</p><ul><li><p>systemctl stop firewalld                关闭防火墙</p></li><li><p>systemctl disable firewalld          下次启动时自动关闭防火墙</p></li></ul><h3 id="四、安装httpd服务"><a href="#四、安装httpd服务" class="headerlink" title="四、安装httpd服务"></a>四、安装httpd服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%AE%89%E8%A3%85httpd.png" alt="enter image description here"></p><h3 id="五、开启httpd服务"><a href="#五、开启httpd服务" class="headerlink" title="五、开启httpd服务"></a>五、开启httpd服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service httpd start</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%BC%80%E5%90%AFhttpd%E6%9C%8D%E5%8A%A1.png" alt="enter image description here"></p><p>将本机ip地址输入浏览器，不出意外就能访问我们搭建的测试页面啦！</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/httpd.png" alt="enter image description here"></p><h3 id="六、创建网页目录"><a href="#六、创建网页目录" class="headerlink" title="六、创建网页目录"></a>六、创建网页目录</h3><p>打开httpd包的文件列表，我们看到/var/www/html的文件夹，这里就是存放网页内容的目录了</p><ul><li><p>rpm -ql httpd                        查看httpd包的文件列表</p></li><li><p>cd /var/www/html              进入html目录</p></li><li><p>mkdir -pv centos/{6,7}/os/x86_64/                    创建挂载6，7yum源的目录</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="enter image description here"></p><h3 id="七、挂载yum源"><a href="#七、挂载yum源" class="headerlink" title="七、挂载yum源"></a>七、挂载yum源</h3><ul><li><p>mount      /dev/sr0       /var/www/centos/7/os/x86_64/           将6光盘挂载至6网络下</p></li><li><p>mount      /dev/sr1        /var/www/centos/6/os/x86_64/           将7光盘挂载至7目录下</p></li></ul><p>此时，在浏览器输入：ipadress/centos/版本号/os/x86_64/  就能看到我们挂载的yum源了</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/6-10.png" alt="enter image description here"></p><h3 id="八、在CentOS搭建yum仓库"><a href="#八、在CentOS搭建yum仓库" class="headerlink" title="八、在CentOS搭建yum仓库"></a>八、在CentOS搭建yum仓库</h3><ul><li><p>[test]                     仓库名</p></li><li><p>name=test           描述名，不设置不影响包的安装，但会报错</p></li><li><p>baseurl=<a href="http://172.20.102.79/centos/6/os/x86_64/" target="_blank" rel="noopener">http://172.20.102.79/centos/6/os/x86_64/</a>                    设置仓库地址链接</p></li><li><p>gpgcheck=0         默认为1，表示数字密钥安全检查，0表示不进行安全检查</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E5%AE%B6yum%E5%BA%93.png" alt="enter image description here"></p><p>九、更新yum仓库</p><ul><li><p>yum clean all          清空全部yum缓存</p></li><li><p>yum repolist           显示yum仓库列表</p></li></ul><p>此时我们看到test仓库下已经更新出有6706个包列表，现在我们就可以通过自己搭建的yum源服务器来安装程序包了！</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/yum%E8%AE%BF%E9%97%AE.png" alt="enter image description here"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;通过yum安装程序包最重要的一步就是指定yum仓库，今天我来教大家如何搭建自己的yum源服务器。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一、前期准备&quot;&gt;&lt;a href=&quot;#一、前期准备&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="yum" scheme="http://yoursite.com/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统磁盘及文件系统管理</title>
    <link href="http://yoursite.com/2018/04/20/Linux%E7%B3%BB%E7%BB%9F%E7%A3%81%E7%9B%98%E5%8F%8A%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/04/20/Linux系统磁盘及文件系统管理/</id>
    <published>2018-04-20T15:00:00.000Z</published>
    <updated>2018-06-26T12:03:07.291Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、磁盘基本概念"><a href="#一、磁盘基本概念" class="headerlink" title="一、磁盘基本概念"></a>一、磁盘基本概念</h3><h4 id="设备文件："><a href="#设备文件：" class="headerlink" title="设备文件："></a>设备文件：</h4><p>Linux中一切皆文件：open（），read（），write（），close（）</p><h4 id="设备类型："><a href="#设备类型：" class="headerlink" title="设备类型："></a>设备类型：</h4><ul><li><p>块设备：block，存储单位“块”，磁盘</p></li><li><p>字符设备：char，存储单位“字符”，键盘</p></li><li><p>设备文件：关联至一个设备驱动程序，进而能够跟与之对应硬件设备进行通信</p></li></ul><h4 id="设备号码："><a href="#设备号码：" class="headerlink" title="设备号码："></a>设备号码：</h4><ul><li><p>主设备号：maj，标识设备类型</p></li><li><p>次设备号：min，标识同一类型下的不同设备</p></li></ul><h4 id="磁盘结构"><a href="#磁盘结构" class="headerlink" title="磁盘结构"></a>磁盘结构</h4><p>并行：</p><ul><li><p>IDE：133MB/s</p></li><li><p>SCSI：640MB/s</p></li></ul><p>串口：</p><ul><li><p>SATA：6Gbps</p></li><li><p>SAS：6Gbps</p></li><li><p>USB：480MB/s</p></li></ul><h4 id="硬盘："><a href="#硬盘：" class="headerlink" title="硬盘："></a>硬盘：</h4><p> 机械硬盘（HDD）：传统普通硬盘，主要由：盘片，磁头，马达等组成</p><p>优势：相比固态硬盘，价格低，容量大，使用寿命长</p><p>固态硬盘（SSD）：用固态电子存储芯片阵列而制成的硬盘。</p><p>优势：相比机械硬盘，防震抗摔，传输速率，功率，噪音有优势，目前SSD不能完全取代HHD</p><h4 id="磁盘设备文件命名："><a href="#磁盘设备文件命名：" class="headerlink" title="磁盘设备文件命名："></a>磁盘设备文件命名：</h4><ul><li><p>/dev/DEV_FILE</p></li><li><p>SCSI,SATA,SAS,IDE,USB：      /dev/sd</p></li><li><p>虚拟磁盘：             /dev/vd</p></li><li><p>不同磁盘标识：            a-z，aa，ab…</p></li><li><p>/dev/sda,/dev/sdb</p></li><li><p>同一设备的不同分区：        1,2，…</p></li><li><p>/dev/sda1,/dev/sda5</p></li></ul><p>注：在脚本中，尽量避免使用磁盘设备文件名诸如sda，名称不稳定，应使用UUID</p><h4 id="磁盘存储术语："><a href="#磁盘存储术语：" class="headerlink" title="磁盘存储术语："></a>磁盘存储术语：</h4><ul><li><p>head：磁头；                 8bit寻址 2**8=256</p></li><li><p>track：磁道；</p></li><li><p>ctlinder：柱面                 10bit寻址       2**10=1024</p></li><li><p>sector：扇区          6bit寻址 2**6=64</p></li></ul><ul><li>chs：磁盘三维。柱面、磁头、扇区</li></ul><p>一个扇区共有512Byte，CHS可定义255<em>63</em>1024个扇区信息</p><p>echo 512<em>63</em>1024*255/1024/1024 | bc</p><p>8032M</p><p>CHS：老的命名方式，不超过8G</p><p>LBA：逻辑的块寻址，超过8G</p><h3 id="二、磁盘分区管理"><a href="#二、磁盘分区管理" class="headerlink" title="二、磁盘分区管理"></a>二、磁盘分区管理</h3><h4 id="我们知道使用磁盘有三个步骤："><a href="#我们知道使用磁盘有三个步骤：" class="headerlink" title="我们知道使用磁盘有三个步骤："></a>我们知道使用磁盘有三个步骤：</h4><ul><li><p>1、创建分区</p></li><li><p>2、创建文件系统：格式化</p></li><li><p>3、挂载：分配目录名</p></li></ul><h4 id="为什么要对磁盘进行分区？"><a href="#为什么要对磁盘进行分区？" class="headerlink" title="为什么要对磁盘进行分区？"></a>为什么要对磁盘进行分区？</h4><ul><li><p>1、优化I/O性能</p></li><li><p>2、实现磁盘空间配额限制</p></li><li><p>3、提高修复速度</p></li><li><p>4、隔离系统和程序</p></li><li><p>5、安装多个OS</p></li><li><p>6、采用不同的文件系统</p></li></ul><h4 id="分区类型"><a href="#分区类型" class="headerlink" title="分区类型"></a>分区类型</h4><p>两种分区方式：MBR，GPT</p><h5 id="MBR：Master-Boot-Record"><a href="#MBR：Master-Boot-Record" class="headerlink" title="MBR：Master Boot Record"></a>MBR：Master Boot Record</h5><p>诞生于1982年，使用32位表示扇区数，分区不能超过2T</p><p>MBR如何分区：按柱面</p><p>0磁道0扇区：512bytes</p><p>446bytes：boot loader</p><p>64bytes：分区表</p><p>16bytes：标识一个分区（最多4个分区）</p><p>2bytes：55AA（分区标识位）</p><p>支持4个主分区；3个主分区+1扩展分区（N个逻辑分区）</p><p>注：生产中最好给MBR分区表进行备份</p><p>BIOS+MBR</p><p>传统BIOS运行流程：</p><p>开机–&gt;BIOS初始化–&gt;BIOS自检–&gt;引导操作系统–&gt;进入系统</p><h5 id="GPT：GUID（Globals-Unique-Identifiers）"><a href="#GPT：GUID（Globals-Unique-Identifiers）" class="headerlink" title="GPT：GUID（Globals Unique Identifiers）"></a>GPT：GUID（Globals Unique Identifiers）</h5><p>支持128个分区，使用64位，支持8Z（512Byte/block）,64Z（4096Byte/block）</p><p>使用128位的通用唯一识别码UUID（Universally Unique Identifier）表示磁盘和</p><p>分区表自动备份在头和尾两份，并有CRC校验位</p><p>UEFI（同一扩展固件接口）：硬件支持GPT，使操作系统启动</p><p>分区表</p><p>MBR保护+GPT分区表+GPT划分数据+备份</p><p>UEFI+GPT</p><p>UERI运行流程</p><p>开机–&gt;UEFI初始化–&gt;引导操作系统–&gt;进入系统</p><h4 id="管理分区"><a href="#管理分区" class="headerlink" title="管理分区"></a>管理分区</h4><p>列出块设备：</p><p>lsblk</p><h4 id="创建分区使用："><a href="#创建分区使用：" class="headerlink" title="创建分区使用："></a>创建分区使用：</h4><ul><li><p>fdisk                  创建MBR分区</p></li><li><p>gdisk                 创建GPT分区</p></li><li><p>parted              高级分区操作</p></li></ul><h5 id="parted命令"><a href="#parted命令" class="headerlink" title="parted命令"></a>parted命令</h5><p>parted的操作都是实时生效的，小心使用</p><p>格式：parted[option]…[设备[命令[参数]…]…]</p><ul><li><p>parted /dev/sdb mklabel gpt|msdos              设置分区类型GPT或MBR</p></li><li><p>parted /dev/sdb print                               打印sdb分区列表信息</p></li><li><p>parted /dev/sdb mkpart primary 1 200 （默认M）  设置sdb分区大小</p></li><li><p>parted /dev/sdb rm 1                                删除sdb1分区</p></li><li><p>parted -l                                     列出分区信息</p></li></ul><h5 id="分区工具fdisk和gdisk"><a href="#分区工具fdisk和gdisk" class="headerlink" title="分区工具fdisk和gdisk"></a>分区工具fdisk和gdisk</h5><p>fdisk -l[-u][device…]       查看分区</p><p>fdisk /dev/sdb                 管理分区（交互式）</p><p>子命令：</p><ul><li><p>p               显示分区列表</p></li><li><p>t                更改分区类型（数据将丢失）</p></li><li><p>n               创建新分区</p></li><li><p>d               删除分区</p></li><li><p>t                添加设备标签</p></li><li><p>v                校验分区</p></li><li><p>u               转换单位</p></li><li><p>w              保存并退出</p></li><li><p>q               不保存并退出</p></li></ul><p>注：可使用重定向和多行重定向echo -e “n\np\n\n\n+2G\nw\n” | fdisk /dev/sdc</p><h4 id="同步分区表"><a href="#同步分区表" class="headerlink" title="同步分区表"></a>同步分区表</h4><ul><li><p>cat/proc/partations        查看内核是否已经识别新的分区</p></li><li><p>partprobe                 同步分区表（centos5,7可用）</p></li><li><p>partx -a  /dev/sda         增加分区同步分区表（centos6可用）时使用；</p></li><li><p>partx -d –nr M-N /dev/sda    删除分区同步分区表（centos6可用）时使用；</p></li></ul><h3 id="三、文件系统管理"><a href="#三、文件系统管理" class="headerlink" title="三、文件系统管理"></a>三、文件系统管理</h3><p>所谓文件系统，它是操作系统中藉以组织、存储和命名文件的结构。磁盘或分区和它所包括的文件系统的不同是很重要的，大部分应用程序都基于文件系统进行操作，在不同种文件系统上是不能工作的。</p><h4 id="文件系统类型"><a href="#文件系统类型" class="headerlink" title="文件系统类型"></a>文件系统类型</h4><ul><li><p>Linux文件系统：ext2，ext3，ext4，xfs，btrfs，reiserfs，jfs，swap</p></li><li><p>光盘：iso9660</p></li><li><p>Windows：FAT32,exFAT,NTFS</p></li><li><p>Unix：FFS（fast），UFS（unix），JFS2</p></li><li><p>网络文件系统：NFS，CIFS</p></li><li><p>集群文件系统：GFS2,OCFS2</p></li><li><p>分布式文件系统：fastfs,ceph,moosefs,mogilefs,glusterfs,Lustre</p></li><li><p>RAW：未经处理或者未经格式化产生的文件系统（性能好，但不便于管理）</p></li></ul><p>根据文件系统是否支持“journal（日志）”功能可分为：</p><ul><li><p>日志型文件系统：ext3，ext4，xfs，…（牺牲读取性能，防止数据文件破坏）</p></li><li><p>非日志型文件系统：ext2，vfat（易造成数据文件破坏）</p></li></ul><p>文件系统的组成部分：</p><p>内核中的模块：ext4，xfs，vfat</p><p>用户空间的管理工具：mkfs.ext4，mkfs.xfs，mkfs.vfat</p><p>Linux的虚拟文件系统：VFS</p><p>查看支持的文件系统：cat /proc/filesystems</p><h4 id="创建文件系统："><a href="#创建文件系统：" class="headerlink" title="创建文件系统："></a>创建文件系统：</h4><p>mkfs命令两种用法：</p><h5 id="mkfs-FS-TYPE-dev-DEVICE-建议使用此用法，直观不易出错"><a href="#mkfs-FS-TYPE-dev-DEVICE-建议使用此用法，直观不易出错" class="headerlink" title="mkfs.FS_TYPE  /dev/DEVICE 建议使用此用法，直观不易出错"></a>mkfs.FS_TYPE  /dev/DEVICE 建议使用此用法，直观不易出错</h5><ul><li><p>ext4</p></li><li><p>xfs</p></li><li><p>btrfs</p></li><li><p>vfat</p></li></ul><h5 id="mkfs-t-FS-TYPE-dev-DEVICE"><a href="#mkfs-t-FS-TYPE-dev-DEVICE" class="headerlink" title="mkfs -t FS_TYPE /dev/DEVICE"></a>mkfs -t FS_TYPE /dev/DEVICE</h5><p>-L ‘LABEL’                 设定卷标（分区标签）</p><h5 id="mke2fs-ext系统文件系统专用的管理工具"><a href="#mke2fs-ext系统文件系统专用的管理工具" class="headerlink" title="mke2fs                                 ext系统文件系统专用的管理工具"></a>mke2fs                                 ext系统文件系统专用的管理工具</h5><ul><li><p>-t{ext2|ext3|ext4} 创建文件系统类型</p></li><li><p>-b{1024|2048|4096}      设定block块的大小</p></li><li><p>-i #                     为数据空间每多少字节创建一个inode，此大小不应小于block大小</p></li><li><p>-L                       添加卷标签（建议使用挂载点作卷标）</p></li><li><p>-N #                   指定分区中创建#个inode</p></li><li><p>-l                        一个inode记录占用磁盘空间的大小，128-4096</p></li><li><p>-m #                          默认5%，管理员用户预留空间占总空间百分百</p></li></ul><p>文件系统标签LABEL</p><p>它是指向设备的另一种方法，与设备无关</p><h5 id="blkid-块设备属性信息查看"><a href="#blkid-块设备属性信息查看" class="headerlink" title="blkid                                   块设备属性信息查看"></a>blkid                                   块设备属性信息查看</h5><p>格式：blkid [option]…[DEVICE]</p><ul><li><p>-U UUID                    根据指定UUID来查找对应设备</p></li><li><p>-L LABEL           根据指定卷标来查找对应设备</p></li></ul><h5 id="e2label：管理ext系列文件系统的LABEL卷标"><a href="#e2label：管理ext系列文件系统的LABEL卷标" class="headerlink" title="e2label：管理ext系列文件系统的LABEL卷标"></a>e2label：管理ext系列文件系统的LABEL卷标</h5><p>格式：e2label DEVICE[LABEL]</p><h5 id="findfs-查找分区"><a href="#findfs-查找分区" class="headerlink" title="findfs                                  查找分区"></a>findfs                                  查找分区</h5><p>格式：findfs [option] LABEL = <label> 根据卷标查找</label></p><p>   findfs [option] UUID  = <uuid>        根据UUID查找</uuid></p><h5 id="tune2fs-重新设定ext系列文件系统可调整参数的值"><a href="#tune2fs-重新设定ext系列文件系统可调整参数的值" class="headerlink" title="tune2fs                              重新设定ext系列文件系统可调整参数的值"></a>tune2fs                              重新设定ext系列文件系统可调整参数的值</h5><ul><li><p>-l                        查看指定文件系统超级块信息</p></li><li><p>-L ‘LABEL’                 修改卷标</p></li><li><p>-m #                  修改预留给管理员空间的百分百</p></li><li><p>-j                        将ext2升级到ext3</p></li><li><p>-O                      文件系统属性启用或禁用，-O ^has_journal</p></li><li><p>-o                      调整文件系统的默认挂载选项，-o^acl</p></li><li><p>-U UUID                    修改UUID号</p></li></ul><h5 id="dumpe2fs"><a href="#dumpe2fs" class="headerlink" title="dumpe2fs"></a>dumpe2fs</h5><p>块分组管理，32768</p><p>超级块（superblock）<br>dumpe2fs       /dev/sda1        查看分区下所有超级块</p><p>-h              查看超级块信息</p><p>tune2fs             -l               查看超级块信息</p><p>超级块时存储文件系统的大小、有多少是空的和已经填满的占多少，以及它们各自的总数和其他诸如此类的信息。</p><p>要使用一个分区来进行数据访问，那么第一个要访问的就是超级块，由此可见超级块的重要性。</p><p>超级块占用第一号物理块，是文件系统的控制块。超级块包括：文件系统的大小、空闲块数目、空闲块索引表、空</p><p>闲i节点数目、空闲i节点索引表、封锁标记等。超级块时系统为文件分配存储空间、回收存储空间的依据。</p><p>所以，为了防止超级块数据损坏，就需要对超级块数据进行备份，以便于损坏时进行修复。</p><h4 id="文件系统检测和修复"><a href="#文件系统检测和修复" class="headerlink" title="文件系统检测和修复"></a>文件系统检测和修复</h4><p>常发生于死机或者非正常关机之后</p><p>挂载为文件系统标记为”no clean”</p><p>注意：一定不要在挂载状态下修复或检测，否则数据将破坏！</p><h5 id="fsck-文件系统检查"><a href="#fsck-文件系统检查" class="headerlink" title="fsck                                   文件系统检查"></a>fsck                                   文件系统检查</h5><p>fsck.FS_type</p><ul><li><p>fsck -t FS_type</p></li><li><p>-p                       自动修复错误</p></li><li><p>-r                       交互式修复错误</p></li></ul><p>注：FS_TYPE一定要与分区上已设置的文件系统类型相同</p><h5 id="e2fsck-ext系列文件专用的检测修复工具"><a href="#e2fsck-ext系列文件专用的检测修复工具" class="headerlink" title="e2fsck                                ext系列文件专用的检测修复工具"></a>e2fsck                                ext系列文件专用的检测修复工具</h5><ul><li><p>-y                       自动回答为yes</p></li><li><p>-f                       强制修</p></li></ul><h3 id="四、设备挂载管理"><a href="#四、设备挂载管理" class="headerlink" title="四、设备挂载管理"></a>四、设备挂载管理</h3><p>挂载：把额外的文件系统与根文件系统现场的目录建立起关联关系，进而使得此目录</p><p>作为其他文件访问入口的行为</p><p>一个挂载点只能挂载一个设备，但一个设备可挂载多个挂载点</p><p>挂载点建议要是空目录，否则该目录下原有文件将被隐藏，变为垃圾文件</p><p>卸载：为解除此关联关系的过程</p><p>把设备关联挂载点：mount Point</p><p>   monut</p><p>卸载时：可使用设备，也可使用挂载点</p><p>   umount</p><h4 id="挂载命令："><a href="#挂载命令：" class="headerlink" title="挂载命令："></a>挂载命令：</h4><p>通过查看/etc/mtab文件显示当前已挂载的所有设备</p><p>mount</p><p>格式：mount [-fnrsvw] [-t vfstype] [-o options] device  dir</p><p>device                       指明要挂载的设备</p><ul><li><p>（1）设备文件：例如dev/sda2</p></li><li><p>（2）卷标：-L ‘LABEL’，例如-L ‘MYDATA’</p></li><li><p>（3）UUID，-U ‘UUID’，例如-U ’35bfb8f8-1c9a-4f67-b8fe-a7edb84c4780’</p></li><li><p>（4）伪文件系统名称：proc，sysfs，devtmpfs，configfs</p></li></ul><p>dir                      挂载点</p><p>事先存在；建议使用空目录</p><p>进程正在使用中的设备无法被卸载</p><p>option：</p><ul><li><p>-t                       指定要挂载的设备上的文件系统类型</p></li><li><p>-r                       readontlt，只读挂载</p></li><li><p>-w                      r+w，读写挂载（默认）</p></li><li><p>-n                       centos6隐藏挂载，不更新/etc/mtab,mount不可见，cat /proc/mounts可见</p></li><li><p>-a                       自动挂载所有支持自动挂载的设备</p></li><li><p>-L ‘LABEL’                 以卷标指定挂载设备</p></li><li><p>-U ‘UUID’                  以UUID指定要挂载的设备</p></li><li><p>-B，–bind                绑定目录到另一个设备上。类似于软连接</p></li></ul><ul><li><p>-o options：(挂载文件系统的选项)，多个选项使用逗号分隔</p></li><li><p>async                         异步模式（默认模式）</p></li><li><p>sync                  同步模式,内存更改时，同时写磁盘</p></li><li><p>atime/noatime                包含目录和文件（是否更新atime，默认更新）</p></li><li><p>diratime/nodiratime       目录的访问时间戳</p></li><li><p>auto/noauto            是否支持自动挂载,是否支持-a选项</p></li><li><p>exec/noexec            是否支持将文件系统上运行应用程序</p></li><li><p>dev/nodev                是否支持在此文件系统上使用设备文件</p></li><li><p>suid/nosuid              是否支持suid和sgid权限</p></li><li><p>remount                   重新挂载</p></li><li><p>ro                      只读</p></li><li><p>rw                      读写</p></li><li><p>user/nouser             是否允许普通用户挂载此设备，/etc/fstab使用</p></li><li><p>acl                     启用此文件系统上的acl功能</p></li><li><p>loop                使用loop设备，把文件挂载目录，模拟设备</p></li></ul><p>默认：rw，suid，dev，exec，auto，nouser，async</p><h4 id="卸载命令："><a href="#卸载命令：" class="headerlink" title="卸载命令："></a>卸载命令：</h4><p>查看挂载情况：</p><p>findmnt   MOUNT_POINT|DEVICE</p><p>查看正在访问指定文件系统的进程：</p><p>lsof MONUT_POINT</p><pre><code>fuser  -v  MOUNT_POINT</code></pre><p>终止所有在正访问指定的文件系统的进程</p><p>   fuser  -km MONUT_POINT</p><p>卸载：</p><p>umount   DEVICE</p><pre><code>umount   MOUNT_POINT</code></pre><p>挂载点和/etc/fstab<br>配置文件系统体系</p><p>被mount、fsck和其他程序使用</p><p>系统重启时保留文件系统体系</p><p>可以在设备栏使用文件系统卷标</p><p>使用mount -a 命令挂载/etc/fstab中的所有文件系统</p><p>/etc/fstab        每行定义一个要挂载的文件系统<br>设备或伪文件系统    挂载点   文件系统类型   挂载选项   备份间隔时间{0|1|2}   文件系统检查{0|1}</p><p>要挂载的设备或伪文件系统</p><p>设备文件</p><ul><li><p>LABEL：LABEL=””</p></li><li><p>UUID：UUID=””</p></li></ul><p>伪文件系统名称：proc，sysfs</p><p>挂载点</p><p>文件系统类型</p><p>挂载选项：default</p><p>转储频率：0：不做备份 ； 1：每条转储 ； 2：每隔一天转储 ；</p><p>自检次序：0：不自检 ； 1：首先自检；一般只有rootfs才用1</p><p>一些特殊文件设备的挂载永久生效的设置：<br>vim /etc/fstab</p><ul><li><p>/root/p1  /mnt/p1          ext4           loop            0    0         挂载普通文件</p></li><li><p>/mnt/cdrom    /mnt/cdrom    iso9660    defaults      0    0      挂载光盘</p></li><li><p>/boot                /mnt/boot      none          bind         0    0      挂载目录到目录下</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、磁盘基本概念&quot;&gt;&lt;a href=&quot;#一、磁盘基本概念&quot; class=&quot;headerlink&quot; title=&quot;一、磁盘基本概念&quot;&gt;&lt;/a&gt;一、磁盘基本概念&lt;/h3&gt;&lt;h4 id=&quot;设备文件：&quot;&gt;&lt;a href=&quot;#设备文件：&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="文件系统" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="磁盘" scheme="http://yoursite.com/tags/%E7%A3%81%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统软件包管理介绍</title>
    <link href="http://yoursite.com/2018/04/20/Linux%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2018/04/20/Linux系统软件包管理介绍/</id>
    <published>2018-04-20T14:00:00.000Z</published>
    <updated>2018-06-08T13:00:18.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Linux发行版中附带有成千上万的可用包，其中包括了Internet工具、开发工具、办公工具、游戏等，如果你没有选择完整安装，则只会安装这些包的“子集”，如何删除不想要的包，如何安装遗漏的包，学习LInux系统的软件包管理将解决你的这些问题</p></blockquote><h3 id="一、软件包基础"><a href="#一、软件包基础" class="headerlink" title="一、软件包基础"></a>一、软件包基础</h3><h4 id="软件运行环境："><a href="#软件运行环境：" class="headerlink" title="软件运行环境："></a>软件运行环境：</h4><p>程序员代码–&gt;预处理–&gt;编译–&gt;汇编–&gt;链接</p><ul><li><p>静态编译：.a</p></li><li><p>动态编译：.so</p></li></ul><h4 id="包管理器："><a href="#包管理器：" class="headerlink" title="包管理器："></a>包管理器：</h4><p>二进制应用程序的组成部分</p><p>二进制文件、库文件、配置文件、帮助文件</p><h4 id="包命名："><a href="#包命名：" class="headerlink" title="包命名："></a>包命名：</h4><ul><li><p>源代码：name-VERSION.tar.gz|bz2|xz</p></li><li><p>包之间：可能存在依赖性关系，甚至循环依赖</p></li></ul><h4 id="解决依赖包管理工具："><a href="#解决依赖包管理工具：" class="headerlink" title="解决依赖包管理工具："></a>解决依赖包管理工具：</h4><ul><li><p>yum：rpm包管理器的前端工具</p></li><li><p>apt-get：deb包管理器前端工具</p></li><li><p>zypper：suse上的rpm前端管理工具</p></li><li><p>dnf：Fedora 18+ rpm包管理器前端管理工具</p></li></ul><h4 id="程序包管理器："><a href="#程序包管理器：" class="headerlink" title="程序包管理器："></a>程序包管理器：</h4><ul><li><p>debian：deb文件，dpkg包管理器</p></li><li><p>redhat：rpm文件，rpm包管理器</p></li><li><p>rpm：Redhat Package Manager</p></li><li><p>RPM Package Manager</p></li></ul><h3 id="二、RPM包管理"><a href="#二、RPM包管理" class="headerlink" title="二、RPM包管理"></a>二、RPM包管理</h3><h4 id="RPM代表Redhat-Packge-Manager（Redhat包管理器）"><a href="#RPM代表Redhat-Packge-Manager（Redhat包管理器）" class="headerlink" title="RPM代表Redhat Packge Manager（Redhat包管理器）"></a>RPM代表Redhat Packge Manager（Redhat包管理器）</h4><p>RPM现在已成为管理Redhat和UnitedLinux以及其他许多发行版本上的软件的标准。</p><p>RPM本质上就是一个包，包含可以立即在特定机器体系结构上安装和运行的Linux</p><p>软件。最初加载到发行版本中的所有软件都是通过一个RPM来安装的。</p><h4 id="RPM剖析："><a href="#RPM剖析：" class="headerlink" title="RPM剖析："></a>RPM剖析：</h4><p>RPM是文件包，它包括关于包及其功能和依赖关系（即在该包能够运行之前必须安装</p><p>其他哪些包）的信息。还包含包中的文件清单，指定这些文件必须加载到系统中的何</p><p>处，以及它们的初始权限如何。RPM还包含安装前脚本，这是由包开发人员编写的。</p><p>RPM其次还包含已编译的二进制文件。最后，RPM包含了安装后的脚本。</p><h4 id="RPM数据库："><a href="#RPM数据库：" class="headerlink" title="RPM数据库："></a>RPM数据库：</h4><p>/var/lib/rpm</p><p>包含了关于系统上已安装的每个RPM信息。这个数据库知道包之间的依赖关系，还知道每个包的</p><p>文档和配置文件的位置。在加载和卸载包时，RPM使用这个数据库来检查依赖关系。用户还可以</p><p>在这个数据库查询关于包的信息。</p><h4 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h4><p>常用选项：</p><ul><li><p>-i 安装包</p></li><li><p>-h 输出哈希（#）符号提供安装进度更新</p></li><li><p>-v 显示详细过程</p></li><li><p>-ihv是常用配合选项；</p></li><li><p>-e 删除已安装的包</p></li><li><p>-V 验证开关</p></li><li><p>-U 升级</p></li><li><p>-q 查询</p></li><li><p>-qc 显示包的配置文件</p></li><li><p>-qd 显示包的文档文件</p></li></ul><p>-qi 显示包描述</p><ul><li><p>-ql 显示包的文件列表</p></li><li><p>-qR 显示包的依赖关系</p></li></ul><h4 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm&#123;-i|–install&#125;[install-option]PACKAGE_FILE</span><br></pre></td></tr></table></figure><ul><li><p>-h 输出哈希（#）符号提供安装进度更新</p></li><li><p>-v 显示详细过程</p></li><li><p>-ihv是常用配合选项；</p></li></ul><h5 id="install-option"><a href="#install-option" class="headerlink" title="[install-option]"></a>[install-option]</h5><ul><li><p>–test 测试安装，但不真正执行安装</p></li><li><p>–nodeps 忽略依赖关系</p></li><li><p>–replacepkgs|replacefiles 覆盖包安装（可用来修复已安装的安装包）|覆盖文件安装</p></li><li><p>–nosignature 不检查来源的合法性（不安全）<br>RPM-GPG-KEY-CentOS-6</p></li><li><p>–nodigest 不检查包完整性 （不安全）</p></li><li><p>–noscripts 只装包不执行程序包脚本</p></li><li><p>–nopre 不执行安装前脚本</p></li><li><p>–nopost 不执行安装后脚本</p></li><li><p>–nopreun 不执行卸载前脚本</p></li><li><p>–nopostun 不执行卸载后脚本</p></li></ul><h5 id="升级："><a href="#升级：" class="headerlink" title="升级："></a>升级：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm&#123;-U|–upgrade&#125;[install-option]PACKAGE_FILE</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm&#123;-F|–freshen&#125;[install-option]PACKAGE_FILE</span><br></pre></td></tr></table></figure><p>upfrade 如果安装有旧版程序包，则升级</p><p>如果不存在旧版程序包，则安装</p><p>freshen 如果安装有旧版程序包，则升级</p><p>如果不存在旧版程序包，则不执行升级操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh PACKAGE_FILE…</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Fvh PACKAGE_FILE…</span><br></pre></td></tr></table></figure><p>注：内核升级不建议使用以上两种升级命令，建议使用-ivh重新安装另一个内核，Linux</p><p>支持多内核版本共存。</p><ul><li><p>–oldpackage 降级</p></li><li><p>–force 强制安装（可用来修复已安装的安装包）</p></li></ul><h5 id="查询："><a href="#查询：" class="headerlink" title="查询："></a>查询：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm&#123;-q|–query&#125;[select-options][query-options]</span><br></pre></td></tr></table></figure><p>注：包的名称必须精确匹配，不允许使用通配符。然而，如果记不住包的完整名称，您可以</p><p>使用 grep 工具来帮助找到它。可以使用 -qa 开关来查询所有已安装的包，并用 grep 来管道</p><p>输出您能记住的信息。例如：<code>rpm -qa | grep name</code></p><h5 id="select-option"><a href="#select-option" class="headerlink" title="[select-option]"></a>[select-option]</h5><ul><li><p>-a 查看所有已安装的包</p></li><li><p>-f 查看指定的文件由哪个程序包安装产生</p></li><li><p>-p rpmfile 针对尚未安装的程序包文件做查询操作（配合文件名而不是包名）</p></li><li><p>–whatprovides CAPABILITY 查询指定的关键字由哪个包所提供</p></li><li><p>–whatrequires CAPABILITY 查询指定的关键字被哪个包所依赖</p></li></ul><h5 id="query-options"><a href="#query-options" class="headerlink" title="[query-options]"></a>[query-options]</h5><ul><li><p>–changelog 查询rpm包的changelog</p></li><li><p>-c 查询程序的配置文件</p></li><li><p>-d 查询程序的文档</p></li><li><p>-i 查看包描述information</p></li><li><p>-l 查看指定的程序包安装后生成的文件</p></li><li><p>–scripts 查看程序包自带的脚本</p></li><li><p>–provides 列出指定程序包所提供的关键字</p></li><li><p>-R 查询指定程序包所依赖的关键字CAPABILITY</p></li><li><p>rpm2cpio 包文件|cpio -itv 预览包内文件</p></li><li><p>rpm2cpio 包文件|cpio -id “*.conf” 释放包内文件</p></li><li><p>包校验：<code>rpm{-V|–verify}[select-options][verify-options]PACKAGE_FILE</code></p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E9%AA%8C%E8%AF%81-V.png" alt="enter image description here"></p><h5 id="导入所需要公钥"><a href="#导入所需要公钥" class="headerlink" title="导入所需要公钥"></a>导入所需要公钥</h5><ul><li><p><code>rpm -K|checksig rpmfile</code> 检查包的完整性和签名</p></li><li><p><code>rpm –import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</code></p></li><li><p>CentOS 7发行版光盘提供：RPM-GPG-KEY-CentOS-7</p></li><li><p><code>rpm -qa “gpg-pubkey*”</code></p></li></ul><h3 id="三、YUM使用介绍"><a href="#三、YUM使用介绍" class="headerlink" title="三、YUM使用介绍"></a>三、YUM使用介绍</h3><p>Yellowdog Update Modifier，rpm的前端程序，可解决软件包相关依赖性，可在<br>多个库之间定位软件包，up2date的替代工具。<br>使用yum安装文件包出错一般都是下面2种情况：</p><h4 id="1-配置文件的格式错误"><a href="#1-配置文件的格式错误" class="headerlink" title="1.配置文件的格式错误"></a>1.配置文件的格式错误</h4><h4 id="2-缓存问题"><a href="#2-缓存问题" class="headerlink" title="2.缓存问题"></a>2.缓存问题</h4><p>注：yum不支持多个终端同时执行</p><p><code>yum repository</code>: yum repo，存储了众多rpm包，以及包的相关的元数据<br>文件（放置于特定目录repodata下）</p><h5 id="文件服务器："><a href="#文件服务器：" class="headerlink" title="文件服务器："></a>文件服务器：</h5><ul><li><p>http://</p></li><li><p>https://</p></li><li><p>ftp://</p></li><li><p>file://</p></li></ul><h5 id="仓库位置："><a href="#仓库位置：" class="headerlink" title="仓库位置："></a>仓库位置：</h5><p>/etc/yum.repos.d/*.repo</p><h5 id="仓库默认设置："><a href="#仓库默认设置：" class="headerlink" title="仓库默认设置："></a>仓库默认设置：</h5><p>/etc/yum.conf</p><h5 id="repo关键行"><a href="#repo关键行" class="headerlink" title="repo关键行"></a>repo关键行</h5><ul><li><p>[base]                                                 仓库名，不可以加空格</p></li><li><p>name=centos cdrom                        描述信息</p></li><li><p>baseurl= file：///mnt/cdrom<br>注：仓库路径为repodata目录的父目录</p></li><li><p>gpgcheck=0                                       默认为1，0表示不进行数字签名完整性检查</p></li><li><p>gpgkey=file：///mnt/cdrom/RPM-GPG-KEY-CentOS-7             自动导入秘钥</p></li><li><p>enabled=0                                          默认为1,0表示仓库禁用</p></li></ul><h5 id="yum日志："><a href="#yum日志：" class="headerlink" title="yum日志："></a>yum日志：</h5><p>/var/log/yum.log 包含了使用yum安装与卸载的日志</p><h5 id="yum的repo配置文件中可用的变量："><a href="#yum的repo配置文件中可用的变量：" class="headerlink" title="yum的repo配置文件中可用的变量："></a>yum的repo配置文件中可用的变量：</h5><ul><li><p>$releasever: 当前OS的发行版的主版本号</p></li><li><p>$basearch：基础平台；i386, x86_64</p></li></ul><p>例如：</p><ul><li><p><a href="http://server/centos/\$releasever/\$basearch/" target="_blank" rel="noopener">http://server/centos/\$releasever/\$basearch/</a></p></li><li><p><a href="http://server/centos/7/x86_64" target="_blank" rel="noopener">http://server/centos/7/x86_64</a></p></li><li><p><a href="http://server/centos/6/i384" target="_blank" rel="noopener">http://server/centos/6/i384</a></p></li></ul><h4 id="3-yum"><a href="#3-yum" class="headerlink" title="3.yum"></a>3.yum</h4><p>格式：<code>yum[option][command][package…]PACKAGE_FILE</code></p><h5 id="显示仓库列表："><a href="#显示仓库列表：" class="headerlink" title="显示仓库列表："></a>显示仓库列表：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist[all|enabled|disabled]</span><br></pre></td></tr></table></figure><h5 id="显示程序包："><a href="#显示程序包：" class="headerlink" title="显示程序包："></a>显示程序包：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list[all|glob_exp1][glob_exp2][…]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list&#123;available|installed|updates&#125;[glob_exp1][…]</span><br></pre></td></tr></table></figure><h5 id="安装程序包："><a href="#安装程序包：" class="headerlink" title="安装程序包："></a>安装程序包：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install package1 [package2] […]</span><br></pre></td></tr></table></figure><p><code>yum reinstall package1 [package2] […]</code> (重新安装)</p><h5 id="升级程序包："><a href="#升级程序包：" class="headerlink" title="升级程序包："></a>升级程序包：</h5><p><code>yum update [package1] [package2] […]</code>（升级）</p><p><code>yum downgrade package1 [package2] […]</code> （降级）</p><h5 id="检查可用升级："><a href="#检查可用升级：" class="headerlink" title="检查可用升级："></a>检查可用升级：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum check-update</span><br></pre></td></tr></table></figure><h5 id="卸载程序包："><a href="#卸载程序包：" class="headerlink" title="卸载程序包："></a>卸载程序包：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove | erase package1 [package2] […]</span><br></pre></td></tr></table></figure><h5 id="查看程序包information："><a href="#查看程序包information：" class="headerlink" title="查看程序包information："></a>查看程序包information：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info […] </span><br></pre></td></tr></table></figure><h5 id="查看指定的特性-可以是某文件-是由哪个程序包所提供："><a href="#查看指定的特性-可以是某文件-是由哪个程序包所提供：" class="headerlink" title="查看指定的特性(可以是某文件)是由哪个程序包所提供："></a>查看指定的特性(可以是某文件)是由哪个程序包所提供：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum provides | whatprovides feature1 [feature2] […]</span><br></pre></td></tr></table></figure><h5 id="清理本地缓存："><a href="#清理本地缓存：" class="headerlink" title="清理本地缓存："></a>清理本地缓存：</h5><p>清除/var/cache/yum/$basearch/$releasever缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean [ packages | metadata | expire-cache | rpmdb | plugins | all ]</span><br></pre></td></tr></table></figure><p>构建缓存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h5 id="搜索："><a href="#搜索：" class="headerlink" title="搜索："></a>搜索：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search string1 [string2] […]</span><br></pre></td></tr></table></figure><p>以指定的关键字搜索程序包名及summary信息</p><p>查看指定包所依赖的capabilities：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum deplist package1 [package2] […]</span><br></pre></td></tr></table></figure><h5 id="查看yum执行历史："><a href="#查看yum执行历史：" class="headerlink" title="查看yum执行历史："></a>查看yum执行历史：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum history [info|list|packages-list|packages-info|summary|addon-info|redo|undo|rollback|new|sync|stats]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum history</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum history info 6yum history undo 6</span><br></pre></td></tr></table></figure><p>日志：/var/log/yum.log</p><h5 id="安装及升级本地程序包："><a href="#安装及升级本地程序包：" class="headerlink" title="安装及升级本地程序包："></a>安装及升级本地程序包：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install rpmfile1 [rpmfile2] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update rpmfile1 [rpmfile2] […]</span><br></pre></td></tr></table></figure><h5 id="包组管理的相关命令："><a href="#包组管理的相关命令：" class="headerlink" title="包组管理的相关命令："></a>包组管理的相关命令：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall group1 [group2] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupupdate group1 [group2] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum grouplist [hidden] [groupwildcard] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupremove group1 [group2] […]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinfo group1 […]</span><br></pre></td></tr></table></figure><h3 id="四、源代码安装"><a href="#四、源代码安装" class="headerlink" title="四、源代码安装"></a>四、源代码安装</h3><p>C、C++：make项目管理器</p><p>configure脚本–&gt;Makefile.in–&gt;Makefile</p><p>C语言源代码编译安装三步骤：</p><h4 id="1、-configure"><a href="#1、-configure" class="headerlink" title="1、./configure"></a>1、./configure</h4><ul><li><p>–prefix=                              指定目录安装</p></li><li><p>–sysconfidir=                      指定/etc目录独立安装<br>（1）通过选项传递参数，指定启用特性，安装路径；执行会参考用户的指定已经Makefile.in<br>文件生成Makefile<br>（2）检查依赖到的外部环境，如依赖的软件包</p></li></ul><h4 id="2、make"><a href="#2、make" class="headerlink" title="2、make"></a>2、make</h4><p>编译过程，根据Makefile文件，构建应用程序</p><h4 id="3、make-install"><a href="#3、make-install" class="headerlink" title="3、make install"></a>3、make install</h4><p>复制文件到相应路径</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Linux发行版中附带有成千上万的可用包，其中包括了Internet工具、开发工具、办公工具、游戏等，如果你没有选择完整安装，则只会安装这些包的“子集”，如何删除不想要的包，如何安装遗漏的包，学习LInux系统的软件包管理将解决你的这些问题&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="软件包" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%8C%85/"/>
    
      <category term="rpm" scheme="http://yoursite.com/tags/rpm/"/>
    
      <category term="yum" scheme="http://yoursite.com/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>文本处理工具sed的高级用法</title>
    <link href="http://yoursite.com/2018/04/20/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7sed%E7%9A%84%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/20/文本处理工具sed的高级用法/</id>
    <published>2018-04-20T11:00:00.000Z</published>
    <updated>2018-06-08T12:39:49.127Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、模式空间与保持空间："><a href="#一、模式空间与保持空间：" class="headerlink" title="一、模式空间与保持空间："></a>一、模式空间与保持空间：</h3><p>我们知道sed工作机制是每次读取一行文本至模式空间（pattern space）中，在模式空间中完成处理，将</p><p>处理结果输出至标准输出设备；在模式空间中处理一行内容后会继续处理下一行，那么对于处理过的行可</p><p>能还有其他的处理，因此可以把处理过的行传送至一个叫保持空间（hold space）中，然后在后续的处理中</p><p>再次传送回模式空间中。这就类似加工车间和仓库的概念，好比模式空间是加工车间，保持空间就是仓</p><p>库，不过这里的仓库存储的都是些半成品的产品。</p><h3 id="二、sed高级用法："><a href="#二、sed高级用法：" class="headerlink" title="二、sed高级用法："></a>二、sed高级用法：</h3><p>Sed工具支持一些高级的命令来运用到保持空间中，这些高级命令有：</p><ul><li><p>P：打印模式空间开端至\n内容，并追加到默认输出之前 </p></li><li><p>h: 把模式空间中的内容覆盖至保持空间中 </p></li><li><p>H：把模式空间中的内容追加至保持空间中 </p></li><li><p>g: 从保持空间取出数据覆盖至模式空间 </p></li><li><p>G：从保持空间取出内容追加至模式空间 </p></li><li><p>x: 把模式空间中的内容与保持空间中的内容进行互换 </p></li><li><p>n: 读取匹配到的行的下一行覆盖至模式空间 </p></li><li><p>N：读取匹配到的行的下一行追加至模式空间 </p></li><li><p>d: 删除模式空间中的行 </p></li><li><p>D：如果模式空间包含换行符，则删除直到第一个换行符的模式空间中的文本，<br>并不会读取新的输入行，而使用合成的模式空间重新启动循环。如果模式空间<br>不包含换行符，则会像发出d命令那样启动正常的新循环。</p></li></ul><h3 id="三、示例分析："><a href="#三、示例分析：" class="headerlink" title="三、示例分析："></a>三、示例分析：</h3><p>以下我们均以该文档为例：</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%96%87%E6%A1%A3.png" alt="enter image description here"></p><h4 id="例1：cat-test2-sed-sed-‘G’"><a href="#例1：cat-test2-sed-sed-‘G’" class="headerlink" title="例1：cat test2.sed |sed ‘G’"></a>例1：<code>cat test2.sed |sed ‘G’</code></h4><p>解析：由于保持空间初始默认为空，所有将空行追加到每行的模式空间中输出，等同在每行的后面添加一个空行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B6.png" alt="enter image description here"></p><h4 id="例2：cat-test2-sed-sed-‘g’"><a href="#例2：cat-test2-sed-sed-‘g’" class="headerlink" title="例2：cat test2.sed |sed ‘g’"></a>例2：<code>cat test2.sed |sed ‘g’</code></h4><p>解析：g和G的区别在，g为覆盖模式空间，G为追加至模式空间，由于g默认为空，将每行的模式空间都覆盖为空行输出，所以表现为5个空行。<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B7.png" alt="enter image description here"></p><h4 id="例3：cat-test2-sed-sed-‘-d’"><a href="#例3：cat-test2-sed-sed-‘-d’" class="headerlink" title="例3：cat test2.sed |sed ‘$!d’"></a>例3：<code>cat test2.sed |sed ‘$!d’</code></h4><p>解析：\$表示尾行，\$!d则表示除了尾行都执行删除。<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B5.png" alt="enter image description here"></p><h4 id="例4：cat-test2-sed-sed-‘n-d’"><a href="#例4：cat-test2-sed-sed-‘n-d’" class="headerlink" title="例4：cat test2.sed |sed ‘n;d’"></a>例4：<code>cat test2.sed |sed ‘n;d’</code></h4><p>解析：n将第一行读入模式空间输出，并将下一行即第二行覆盖至模式空间并删除，如此循环，最终表现为只显示文本的奇数行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B9.png" alt="enter image description here"></p><h4 id="例5：cat-test2-sed-sed-‘N-D’"><a href="#例5：cat-test2-sed-sed-‘N-D’" class="headerlink" title="例5：cat test2.sed |sed ‘N;D’"></a>例5：<code>cat test2.sed |sed ‘N;D’</code></h4><p>解析：N将第二行追加至第一行的模式空间中，D删除模式空间内的第一行；对第二行执行命令，将第三行追加至第二行的模式空间内，并删除模式中的第一行；如此循环，最后只输出最后一行文本。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B3.png" alt="enter image description here"></p><h4 id="例6：cat-test2-sed-sed-‘-N-D’"><a href="#例6：cat-test2-sed-sed-‘-N-D’" class="headerlink" title="例6：cat test2.sed |sed ‘$!N;$!D’"></a>例6：<code>cat test2.sed |sed ‘$!N;$!D’</code></h4><p>解析:’\$!N;\$!D’即对文本中除了最后一行支持’N;D’操作，由例外5可知，除了最后一行执行’N;D’操作，得出】结果为只输出倒数第二行，最后一行文本不处理，默认输出，所有最后结果输出倒数两行的文本。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B4.png" alt="enter image description here"></p><h4 id="例7：cat-test2-sed-sed-n-‘n-p’"><a href="#例7：cat-test2-sed-sed-n-‘n-p’" class="headerlink" title="例7：cat test2.sed|sed -n ‘n;p’"></a>例7：<code>cat test2.sed|sed -n ‘n;p’</code></h4><p>解析：对第一行执行操作，n选项将第二行覆盖至模式空间，在第一行和第二行的默认输出后追加打印出来，-n取消默认输出，如此循环，最后得出文本的偶数行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B1.png" alt="enter image description here"></p><h4 id="例8：cat-test2-sed-sed-n-‘1-n-p’"><a href="#例8：cat-test2-sed-sed-n-‘1-n-p’" class="headerlink" title="例8：cat test2.sed|sed -n ‘1!n;p’"></a>例8：<code>cat test2.sed|sed -n ‘1!n;p’</code></h4><p>解析：与例7相比，例8为对除了第一行的其他行执行例7的操作，则最后的结果也为得出文本的奇数行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A5%87%E6%95%B0%E8%A1%8C.png" alt="enter image description here"></p><h4 id="例9：cat-test2-sed-sed-‘-d-G’"><a href="#例9：cat-test2-sed-sed-‘-d-G’" class="headerlink" title="例9：cat test2.sed |sed ‘/^$/d;G’"></a>例9：<code>cat test2.sed |sed ‘/^$/d;G’</code></h4><p>解析：^$为表示地址定界匹配到的空行，d将空行删除，G在每行的文本后添加一个空行；最后的输出结果即：删除文本内的空行，并在每行后追加一行空行。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B8.png" alt="enter image description here"></p><h4 id="例10：cat-test2-sed-sed-‘1-G-h-d’"><a href="#例10：cat-test2-sed-sed-‘1-G-h-d’" class="headerlink" title="例10：cat test2.sed |sed ‘1!G;h;$!d’"></a>例10：<code>cat test2.sed |sed ‘1!G;h;$!d’</code></h4><p>解析：1!G表示除了第一行，都执行将保持空间的内容追加至模式空间并输出，h命令使上一个模式空间内容将G覆盖，最后$!d只保留对最后一行的执行结果，具体表现为：</p><p>对第1行只进入模式空间默认输出，第2行将上一个模式空间内容（即第1行文本）覆盖至保持空间，共同进入模式空间（包含第2至1行文本）并输出；第3行将上一个模式空间内容（即第2至1行文本）覆盖至保持空间，共同进入模式空间（包含第3至1行文本）并输出；如此循环…….对第5行将上一个模式空间内容（第4至1行）覆盖至保持空间，共同进入模式空间（包含5至1行）输出；最后$!d除了最后一行的其他行的模式空间内容都删除，最后只留最后一行的执行结果，即将文本倒序输出。<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B2.png" alt="enter image description here"></p><h4 id="例11：cat-test2-sed-sed-n-‘1-G-h-p’"><a href="#例11：cat-test2-sed-sed-n-‘1-G-h-p’" class="headerlink" title="例11：cat test2.sed |sed -n ‘1!G;h;$p’"></a>例11：<code>cat test2.sed |sed -n ‘1!G;h;$p’</code></h4><p>解析：与例10相比，最后的$p只打印最后一行的模式空间内容（第5至1行），-n取消所有默认输出，得出的结果与例10相同，倒序将文本输出。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BE%8B10.png" alt="enter image description here"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、模式空间与保持空间：&quot;&gt;&lt;a href=&quot;#一、模式空间与保持空间：&quot; class=&quot;headerlink&quot; title=&quot;一、模式空间与保持空间：&quot;&gt;&lt;/a&gt;一、模式空间与保持空间：&lt;/h3&gt;&lt;p&gt;我们知道sed工作机制是每次读取一行文本至模式空间（patt
      
    
    </summary>
    
    
      <category term="sed" scheme="http://yoursite.com/tags/sed/"/>
    
      <category term="文本" scheme="http://yoursite.com/tags/%E6%96%87%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>文本三剑客之sed</title>
    <link href="http://yoursite.com/2018/04/15/%E6%96%87%E6%9C%AC%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8Bsed/"/>
    <id>http://yoursite.com/2018/04/15/文本三剑客之sed/</id>
    <published>2018-04-15T11:00:00.000Z</published>
    <updated>2018-06-08T12:20:19.767Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我们知道，sed被称为Linux中被称为文本处理三剑客之一，相比于grep命令匹配内容的功能，sed则能够做到对匹配到的文本内容对其进行编辑。</p></blockquote><h2 id="强大的处理文本的工具sed"><a href="#强大的处理文本的工具sed" class="headerlink" title="强大的处理文本的工具sed"></a>强大的处理文本的工具sed</h2><p>我们知道，sed被称为Linux中被称为文本处理三剑客之一，相比于grep命令匹配内容的功能，sed则能够做到对匹配到的文本内容对其进行编辑。</p><h3 id="一-sed，英文全称Stream-EDitor，翻译过来就是行编辑器"><a href="#一-sed，英文全称Stream-EDitor，翻译过来就是行编辑器" class="headerlink" title="一.sed，英文全称Stream EDitor，翻译过来就是行编辑器"></a>一.sed，英文全称Stream EDitor，翻译过来就是行编辑器</h3><h4 id="1-用法"><a href="#1-用法" class="headerlink" title="1.用法"></a>1.用法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed[option]…’script’ inputfile…</span><br></pre></td></tr></table></figure><p>其中‘script’可表示为’地址定界+编辑命令’</p><h4 id="2-option"><a href="#2-option" class="headerlink" title="2.option"></a>2.option</h4><ul><li><p>-n  取消默认打印内容到屏幕（示例1）</p></li><li><p>-e     多点编辑,表达且关系，与grep的-e不同，grep -e表达或关系（示例2）</p></li><li><p>-f      从指定文件中读取编辑脚本（示例3）</p></li><li><p>-r      支持使用扩展正则表达式</p></li><li><p>-i.bak       原处编辑，并备份文件file.bak（示例4）</p></li></ul><h4 id="3-地址定界："><a href="#3-地址定界：" class="headerlink" title="3.地址定界："></a>3.地址定界：</h4><ul><li>（1）不给地址：对全文进行处理</li><li><p>（2）单地址：#：指定的行，$：最后一行<br>/pattern/：支持正则表达式，被此模式所能匹配到的每一行</p></li><li><p>（3）地址范围：<br>#，#                         （示例5）<br>#，+#<br>/pat1/,/pat2/          （示例6）<br>/pat1/, #                  （示例7）</p></li><li><p>（4）~：步进<br>1~2  奇数行              （示例5）<br>2~2  偶数行</p></li></ul><h4 id="4-编辑命令："><a href="#4-编辑命令：" class="headerlink" title="4.编辑命令："></a>4.编辑命令：</h4><ul><li><p>d       删除模式空间匹配的行（示例4）</p></li><li><p>p       打印当前模式空间内容，追加到默认输出之后（示例1）</p></li><li><p>a[]text   在指定行后面追加文本（示例4）<br>如要实现插入内容空格开头可先追加\再输入空格<br>支持使用\n实现多行追加（示例8）</p></li><li><p>i[]text     在指定行前面插入文本（示例9）</p></li><li><p>c[]text    替换指定行尾单行或多行文本（示例10）</p></li><li><p>w /path/somefile   保存模式匹配的行到指定文件（示例11）</p></li><li><p>r /path/somefile     读取指定文件的文本匹配的行后（示例12）</p></li></ul><p>注意：w，r后跟文件一定要加空格</p><p>可利用此命令定义别名到.bashrc</p><ul><li><p>=       为模式空间中的行打印行号</p></li><li><p>! 取反，!需加载地址定界和编辑命令中间，如’2！d’（示例13）</p></li><li><p>s///：查找替换，支持使用其他分隔符；s###；s@@@（示例14）</p></li></ul><h3 id="二-示例"><a href="#二-示例" class="headerlink" title="二.示例"></a>二.示例</h3><p>以下我们创建文件test进行示例：</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6test.png" alt="enter image description here"></p><h4 id="示例1：sed-‘1-10p’-data-test-sed"><a href="#示例1：sed-‘1-10p’-data-test-sed" class="headerlink" title="示例1：sed   ‘1,10p’ /data/test.sed"></a>示例1：<code>sed   ‘1,10p’ /data/test.sed</code></h4><p>sed命令默认将文本内容打印到屏幕，由于执行命令p，文本内容被打印了两遍</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%B8%8D%E5%8A%A0-n.png" alt="enter image description here"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed  -n  ‘1,10p’ /data/test.sed</span><br></pre></td></tr></table></figure><p>sed   -n选项将取消默认输出到屏幕，仅显示p的执行结果</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%8A%A0-n.png" alt="enter image description here"></p><h4 id="示例2：sed-n-e-‘1p’-e-‘3p’"><a href="#示例2：sed-n-e-‘1p’-e-‘3p’" class="headerlink" title="示例2：sed -n -e ‘1p’  -e  ‘3p’"></a>示例2：<code>sed -n -e ‘1p’  -e  ‘3p’</code></h4><p>显示第一行和第三行，-e表示且的关系</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/e-1.png" alt="enter image description here"></p><h4 id="示例3：sed-n-f-sedscripts-txt-data-test-sed"><a href="#示例3：sed-n-f-sedscripts-txt-data-test-sed" class="headerlink" title="示例3：sed -n -f sedscripts.txt  /data/test.sed"></a>示例3：<code>sed -n -f sedscripts.txt  /data/test.sed</code></h4><p>将2,5p写入sedscripts.txt文件，-f选项读取sedscripts.txt，并执行文件中内容</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/f-%E5%BC%95%E7%94%A8%E6%96%87%E4%BB%B6.png" alt="enter image description here"></p><h4 id="示例4：sed-i-‘1-10a-’-data-test-sed"><a href="#示例4：sed-i-‘1-10a-’-data-test-sed" class="headerlink" title="示例4：sed -i  ‘1,10a#’   /data/test.sed"></a>示例4：<code>sed -i  ‘1,10a#’   /data/test.sed</code></h4><p>表示在第1至第10行内容后插入#，-i选项直接编辑了test.sed的文本内容</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/i-a.png" alt="enter image description here"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i  ‘/#/d’  /data/test.sed</span><br></pre></td></tr></table></figure><p>表示将所有带#的行删掉并编辑文本</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/i-d.png" alt="enter image description here"></p><p>示例5：<code>sed -n  ‘3p’</code>     打印第3行内容</p><p><code>sed  -n ‘2,5p’</code>                打印第2至第五行</p><p><code>sed  -n ‘2,+3p’</code>              打印第2至第5行</p><p><code>sed  -n  ‘1~2p’</code>              打印奇数行</p><p><code>sed  -n  ‘2~2p’</code>              打印偶数行</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%95%B0%E5%AD%97%E5%AE%9A%E7%95%8C.png" alt="enter image description here"></p><h4 id="示例6：正则定界，表示ifconfig命令输出中开头eth2的行，至开头为lo的行"><a href="#示例6：正则定界，表示ifconfig命令输出中开头eth2的行，至开头为lo的行" class="headerlink" title="示例6：正则定界，表示ifconfig命令输出中开头eth2的行，至开头为lo的行"></a>示例6：正则定界，表示ifconfig命令输出中开头eth2的行，至开头为lo的行</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E5%88%99%E5%AE%9A%E7%95%8C.png" alt="enter image description here"></p><h4 id="示例7：正则数字混合定界，表示ifconfig命令输出中，eth2开头的行到第12行的内容"><a href="#示例7：正则数字混合定界，表示ifconfig命令输出中，eth2开头的行到第12行的内容" class="headerlink" title="示例7：正则数字混合定界，表示ifconfig命令输出中，eth2开头的行到第12行的内容"></a>示例7：正则数字混合定界，表示ifconfig命令输出中，eth2开头的行到第12行的内容</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E5%88%99%E6%95%B0%E5%AD%97%E6%B7%B7%E5%90%88%E5%AE%9A%E7%95%8C.png" alt="enter image description here"></p><h4 id="示例8：多行插入，将aaa-nbbb插入到每行后面"><a href="#示例8：多行插入，将aaa-nbbb插入到每行后面" class="headerlink" title="示例8：多行插入，将aaa\nbbb插入到每行后面"></a>示例8：多行插入，将aaa\nbbb插入到每行后面</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/a%E5%A4%9A%E8%A1%8C.png" alt="enter image description here"></p><h4 id="示例9：sed-‘1-10i-’-data-test-sed"><a href="#示例9：sed-‘1-10i-’-data-test-sed" class="headerlink" title="示例9：sed  ‘1,10i#’  /data/test.sed"></a>示例9：<code>sed  ‘1,10i#’  /data/test.sed</code></h4><p>在每一行上面插入#</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/i%E4%B8%8A%E6%96%B9%E6%8F%92%E5%85%A5.png" alt="enter image description here"></p><h4 id="示例10：sed-‘1-5c’-data-test-sed"><a href="#示例10：sed-‘1-5c’-data-test-sed" class="headerlink" title="示例10：sed  ‘1,5c’  /data/test.sed"></a>示例10：<code>sed  ‘1,5c’  /data/test.sed</code></h4><p>将test.sed文件中1到5行替换为一个#</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/c%E6%9B%BF%E6%8D%A2%E5%8C%B9%E9%85%8D.png" alt="enter image description here"></p><h4 id="示例11：sed-‘2-5w-f1’-data-test-sed"><a href="#示例11：sed-‘2-5w-f1’-data-test-sed" class="headerlink" title="示例11：sed  ‘2,5w  f1’  /data/test.sed"></a>示例11：<code>sed  ‘2,5w  f1’  /data/test.sed</code></h4><p>将test.sed文件中第2到第5行内容打印到f1文件中<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/w-%E5%B0%86%E5%8C%B9%E9%85%8D%E5%86%85%E5%AE%B9%E8%BE%93%E5%87%BA%E5%88%B0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6.png" alt="enter image description here"></p><h4 id="示例12：sed-‘2-5r-f1’-data-test-sed"><a href="#示例12：sed-‘2-5r-f1’-data-test-sed" class="headerlink" title="示例12：sed  ‘2,5r  f1’  /data/test.sed"></a>示例12：<code>sed  ‘2,5r  f1’  /data/test.sed</code></h4><p>将f1的内容插入到第2至第5行</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/r-%E8%B7%9F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E5%8C%B9%E9%85%8D%E8%A1%8C.png" alt="enter image description here"></p><h4 id="示例13：sed-n-‘2-5-p’-data-test-sed"><a href="#示例13：sed-n-‘2-5-p’-data-test-sed" class="headerlink" title="示例13：sed  -n  ‘2,5!  p’  /data/test.sed"></a>示例13：<code>sed  -n  ‘2,5!  p’  /data/test.sed</code></h4><p>打印除了第2至第5行的内容</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%EF%BC%81%E9%99%A4%E4%BA%86.png" alt="enter image description here"></p><h4 id="示例14：ifconfig-sed-n-“2p”-sed-r-“s-addr-Bcast-1-”"><a href="#示例14：ifconfig-sed-n-“2p”-sed-r-“s-addr-Bcast-1-”" class="headerlink" title="示例14：ifconfig |sed -n “2p”|sed -r “s@.*addr:(.*) Bcast.*@\1@”"></a>示例14：<code>ifconfig |sed -n “2p”|sed -r “s@.*addr:(.*) Bcast.*@\1@”</code></h4><p>利用搜索替代，我们可以将任意段字符串定义成方法，然后表示出整行，再利用后向引用即可取出该字符串。</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E5%88%99%E5%8F%96IP.png" alt="enter image description here"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我们知道，sed被称为Linux中被称为文本处理三剑客之一，相比于grep命令匹配内容的功能，sed则能够做到对匹配到的文本内容对其进行编辑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;强大的处理文本的工具sed&quot;&gt;&lt;a href=&quot;#强
      
    
    </summary>
    
    
      <category term="sed" scheme="http://yoursite.com/tags/sed/"/>
    
      <category term="文本" scheme="http://yoursite.com/tags/%E6%96%87%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本编程基础（2）——新手注意事项及技巧16条</title>
    <link href="http://yoursite.com/2018/04/14/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89%E2%80%94%E2%80%94%E6%96%B0%E6%89%8B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E5%8F%8A%E6%8A%80%E5%B7%A716%E6%9D%A1/"/>
    <id>http://yoursite.com/2018/04/14/shell脚本编程基础（2）——新手注意事项及技巧16条/</id>
    <published>2018-04-14T11:00:00.000Z</published>
    <updated>2018-06-08T11:53:04.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总结了一些shell编程初学者常犯的错误、注意事项及技巧："><a href="#总结了一些shell编程初学者常犯的错误、注意事项及技巧：" class="headerlink" title="总结了一些shell编程初学者常犯的错误、注意事项及技巧："></a>总结了一些shell编程初学者常犯的错误、注意事项及技巧：</h2><h3 id="1-判断变量是否加"><a href="#1-判断变量是否加" class="headerlink" title="1.判断变量是否加$"></a>1.判断变量是否加$</h3><ul><li><p>（1）赋值变量时不加$</p></li><li><p>（2）如果命令能识别变量就不加\$,如果命令不能识别变量加$</p></li></ul><h3 id="2-存放多行字符时”-name”变量外加双引号可保留换行格式"><a href="#2-存放多行字符时”-name”变量外加双引号可保留换行格式" class="headerlink" title="2.存放多行字符时”$name”变量外加双引号可保留换行格式"></a>2.存放多行字符时”$name”变量外加双引号可保留换行格式</h3><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E4%BF%9D%E7%95%99%E6%A0%BC%E5%BC%8F.png" alt="enter image description here"></p><h3 id="3-和（）中执行命令的区别"><a href="#3-和（）中执行命令的区别" class="headerlink" title="3.{}和（）中执行命令的区别"></a>3.{}和（）中执行命令的区别</h3><p>（）中使用的命令为一次性的，小括号中相当于在子进程中执行命令,小括号继承括号外变量，但不会影响括号外变量</p><p>注：小括号中所说的子进程与常规的子进程不是一回事</p><p>而{ }中使用命令是在当前shell环境中执行，不会不开启子进程，会影响当前shell环境</p><h4 id="例1：x-1-echo-echo-echo-x-x-2-echo-x"><a href="#例1：x-1-echo-echo-echo-x-x-2-echo-x" class="headerlink" title="例1：x=1;echo $$;(echo $$;echo $x;x=2);echo $x"></a>例1：<code>x=1;echo $$;(echo $$;echo $x;x=2);echo $x</code></h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%B0%8F%E6%8B%AC%E5%8F%B7.png" alt="enter image description here"></p><p>虽然括号内开启了一个子进程，但该子进程号和括号外进程号一致；此外括号外变量会影响括号内，但括号内变量更改不会影响括号外。</p><h4 id="例2：（echo-exit）"><a href="#例2：（echo-exit）" class="headerlink" title="例2：（echo $$;exit）"></a>例2：<code>（echo $$;exit）</code></h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%B0%8F%E6%8B%AC%E5%8F%B7%E9%80%80%E5%87%BA.png" alt="enter image description here"></p><p>执行此命令，显示当前所在进程号，exit退出（）内子进程</p><p>{ }中使用命令是在当前shell环境中执行，不会不开启子进程，会影响当前shell环境</p><h4 id="例3：x-1-echo-echo-echo-x-x-2-echo-x"><a href="#例3：x-1-echo-echo-echo-x-x-2-echo-x" class="headerlink" title="例3：x=1;echo $$;{ echo $$;echo $x;x=2; };echo $x"></a>例3：<code>x=1;echo $$;{ echo $$;echo $x;x=2; };echo $x</code></h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E8%8A%B1%E6%8B%AC%E5%8F%B7.png" alt="enter image description here"></p><p>{}内命令相当于当前shell执行，因此括号外和括号内进程号一致，此外{}内变量影响了{}外的变量。</p><h4 id="例4：-echo-exit"><a href="#例4：-echo-exit" class="headerlink" title="例4：{  echo$$;exit;  }"></a>例4：<code>{  echo$$;exit;  }</code></h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E8%8A%B1%E6%8B%AC%E5%8F%B7%E9%80%80%E5%87%BA.png" alt="enter image description here"></p><p>执行此命令，显示当前所在进程号，exit退出当前shell；</p><p>因此编写脚本时，想要使用括号利用exit命令退出脚本，一定要使用{}，而不能使用（）</p><h3 id="4-4-短路与-amp-amp-和短路或-嵌套连续命令时可使用大括号"><a href="#4-4-短路与-amp-amp-和短路或-嵌套连续命令时可使用大括号" class="headerlink" title="4.4.短路与&amp;&amp;和短路或||嵌套连续命令时可使用大括号"></a>4.4.短路与&amp;&amp;和短路或||嵌套连续命令时可使用大括号</h3><p>如&amp;&amp;{  cmd1 ；cmd2 ； }；||{  cmd1 ；cmd2 ；}；</p><p>测试或命令结果为假时，后跟连续多条命令，必须需采用此种格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">false || &#123; echo cmd1 ; echo cmd2 ; &#125;</span><br></pre></td></tr></table></figure><p>表示测试或命令返回false时，执行cmd1，cmd2</p><p>测试或命令结果为真时，后跟连续多条命令，可写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true &amp;&amp; echo cmd1 &amp;&amp; echo cmd2</span><br></pre></td></tr></table></figure><p>也可写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true &amp;&amp; &#123; echo cmd1 ; echo cmd2 ; &#125;</span><br></pre></td></tr></table></figure><p>当条件测试或命令后同时出现短路且&amp;&amp;与短路或||有嵌套命令的情况时:</p><p>如：<code>[ Test ] &amp;&amp; { echo cmd1 ; echo cmd2 ; } || { echo cmd3; echo cmd4 ; }</code></p><p>表示当Test为真时，执行命令cmd1，cmd2；当Test为假时，执行cmd3，cmd4；</p><h3 id="5-引用超过10个以上的位置变量时，数字加-；如、-10要写为-10"><a href="#5-引用超过10个以上的位置变量时，数字加-；如、-10要写为-10" class="headerlink" title="5.引用超过10个以上的位置变量时，数字加{}；如、$10要写为\${10}"></a>5.引用超过10个以上的位置变量时，数字加{}；如、$10要写为\${10}</h3><p>不加{}时，默认将\$10当作\$1和0表示出来：</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E4%BA%8E10%E4%B8%AA%E5%8F%82%E6%95%B01.png" alt="enter image description here"></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E4%BA%8E10%E4%B8%AA%E5%8F%82%E6%95%B02.png" alt="enter image description here"></p><p>当给10加上大括号后，${10}才表示第10个位置变量：</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E4%BA%8E10%E4%B8%AA%E5%8F%82%E6%95%B03.png" alt="enter image description here"></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E4%BA%8E10%E4%B8%AA%E5%8F%82%E6%95%B04.png" alt="enter image description here"></p><h3 id="6-位置变量-与-的区别"><a href="#6-位置变量-与-的区别" class="headerlink" title="6.位置变量\$*与\$@的区别"></a>6.位置变量\$*与\$@的区别</h3><p>两者都可表示传递给脚本的所有参数，但\$*将每个参数合并为一个字符串</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%98%9F-1.png" alt="enter image description here"></p><p>而$@每个参数作为独立字符</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%9C%88.png" alt="enter image description here"></p><p>注意：\$@、\$*只在被双引号包起来的时候才会有差异。</p><h3 id="7-在使用-和test引用变量时，最好加双引号””避免出问题"><a href="#7-在使用-和test引用变量时，最好加双引号””避免出问题" class="headerlink" title="7.在使用[  ]和test引用变量时，最好加双引号””避免出问题"></a>7.在使用[  ]和test引用变量时，最好加双引号””避免出问题</h3><p>不加引号也许不会出错，但加上引号肯定不会有错</p><h3 id="8-脚本中进行变量的算术运算时，有空格尽量删除"><a href="#8-脚本中进行变量的算术运算时，有空格尽量删除" class="headerlink" title="8.脚本中进行变量的算术运算时，有空格尽量删除"></a>8.脚本中进行变量的算术运算时，有空格尽量删除</h3><p>变量的算术运算，多一个空格就会导致出错，所以尽量将空格删除</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97.png" alt="enter image description here"></p><h3 id="9-进行条件测试过程中，能加空格地方尽量都加空格"><a href="#9-进行条件测试过程中，能加空格地方尽量都加空格" class="headerlink" title="9.进行条件测试过程中，能加空格地方尽量都加空格"></a>9.进行条件测试过程中，能加空格地方尽量都加空格</h3><p>条件测试时，无论是括号两端还是字符两端少一个空格就会导致出错，所有尽量都加空格</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%A9%BA%E6%A0%BC.png" alt="enter image description here"></p><h3 id="10-使用-进行PATTERN匹配时，需要加双括号-，且正则表达式不能加引号，默认使用扩展正则表达式"><a href="#10-使用-进行PATTERN匹配时，需要加双括号-，且正则表达式不能加引号，默认使用扩展正则表达式" class="headerlink" title="10.使用=~进行PATTERN匹配时，需要加双括号[[ ]]，且正则表达式不能加引号，默认使用扩展正则表达式"></a>10.使用=~进行PATTERN匹配时，需要加双括号[[ ]]，且正则表达式不能加引号，默认使用扩展正则表达式</h3><p>正则表达式加引号就会导致错误结果，这与我们在使用grep与sed等命令利用到正则表达式需要加引号正好相反，需要注意</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.png" alt="enter image description here"></p><h3 id="11-用于字符串比较时的用到的操作应该都使用引号"><a href="#11-用于字符串比较时的用到的操作应该都使用引号" class="headerlink" title="11.用于字符串比较时的用到的操作应该都使用引号"></a>11.用于字符串比较时的用到的操作应该都使用引号</h3><p>同上，不加引号也许不会出错，但加上引号肯定不会有错</p><h3 id="12-右侧可匹配类似于通配符glob的用法"><a href="#12-右侧可匹配类似于通配符glob的用法" class="headerlink" title="12.[[  == ]]右侧可匹配类似于通配符glob的用法"></a>12.[[  == ]]右侧可匹配类似于通配符glob的用法</h3><p>此种匹配类似于通配符，但不完全等同于通配符，注意格式双中括号，双等号 [[ == ]]</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E7%B1%BB%E4%BC%BC%E9%80%9A%E9%85%8D%E7%AC%A6.png" alt="enter image description here"></p><h3 id="13-脚本里不支持别名"><a href="#13-脚本里不支持别名" class="headerlink" title="13.脚本里不支持别名"></a>13.脚本里不支持别名</h3><h3 id="14-文件测试后跟空字符时，也反馈为True。"><a href="#14-文件测试后跟空字符时，也反馈为True。" class="headerlink" title="14.文件测试后跟空字符时，也反馈为True。"></a>14.文件测试后跟空字符时，也反馈为True。</h3><p>例如：/data/fstab为普通文件，用-f选项判断时，后跟fstab文件或者空时都判断为真</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%96%87%E4%BB%B6%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD.png" alt="enter image description here"></p><p>因此要保证一个文件存在且满足测试条件时，</p><p>可表示为：<code>[ -n  “file”  -a  –f  “file” ]</code></p><p>file文件是否存在且为普通文件</p><h3 id="15-测试字符串是否为空除了-z及-n选项，还可用-“-var”-“”-；-x”-var”-“x”-来测试。"><a href="#15-测试字符串是否为空除了-z及-n选项，还可用-“-var”-“”-；-x”-var”-“x”-来测试。" class="headerlink" title="15.测试字符串是否为空除了-z及-n选项，还可用[  “\$var”  =  “”  ]；[  x”\$var”  =  “x”  ]来测试。"></a>15.测试字符串是否为空除了-z及-n选项，还可用[  “\$var”  =  “”  ]；[  x”\$var”  =  “x”  ]来测试。</h3><h4 id="例1：当-var为空时，使用-“-var”-“”-返回结果0"><a href="#例1：当-var为空时，使用-“-var”-“”-返回结果0" class="headerlink" title="例1：当\$var为空时，使用[  “\$var”  =  “”  ]返回结果0"></a>例1：当\$var为空时，使用[  “\$var”  =  “”  ]返回结果0</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%B5%8B%E8%AF%95%E4%B8%BA%E7%A9%BA1.png" alt="enter image description here"></p><h4 id="例2：当-var为空时，-x”-var”-“x”-返回结果为0"><a href="#例2：当-var为空时，-x”-var”-“x”-返回结果为0" class="headerlink" title="例2：当\$var为空时，[  x”\$var”  =  “x”  ]返回结果为0"></a>例2：当\$var为空时，[  x”\$var”  =  “x”  ]返回结果为0</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%B5%8B%E8%AF%95%E4%B8%BA%E7%A9%BA2.png" alt="enter image description here"></p><h3 id="16-养成好习惯：变量一使用完后就用unset删掉"><a href="#16-养成好习惯：变量一使用完后就用unset删掉" class="headerlink" title="16.养成好习惯：变量一使用完后就用unset删掉"></a>16.养成好习惯：变量一使用完后就用unset删掉</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;总结了一些shell编程初学者常犯的错误、注意事项及技巧：&quot;&gt;&lt;a href=&quot;#总结了一些shell编程初学者常犯的错误、注意事项及技巧：&quot; class=&quot;headerlink&quot; title=&quot;总结了一些shell编程初学者常犯的错误、注意事项及技巧：&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="编程" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统文件查找与解压缩方法</title>
    <link href="http://yoursite.com/2018/04/12/Linux%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E4%B8%8E%E8%A7%A3%E5%8E%8B%E7%BC%A9%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/12/Linux系统文件查找与解压缩方法/</id>
    <published>2018-04-12T11:00:00.000Z</published>
    <updated>2018-06-04T14:00:13.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux系统文件查找与解压缩方法"><a href="#Linux系统文件查找与解压缩方法" class="headerlink" title="Linux系统文件查找与解压缩方法"></a>Linux系统文件查找与解压缩方法</h2><blockquote><p>如同我们平时在操作 Windows系统时，文件查找与解压缩文件是经常要使用到的操作，Linux系统中也要经常用到相同的操作，今天我们就来介绍Linux系统中的一些文件查找与解压缩时使用到的工具。</p></blockquote><h3 id="一、文件查找"><a href="#一、文件查找" class="headerlink" title="一、文件查找"></a>一、文件查找</h3><h4 id="1-locate命令"><a href="#1-locate命令" class="headerlink" title="1.locate命令"></a>1.locate命令</h4><ul><li><p>优点：搜索速度快，节省系统性能（生产环境适合使用locate）</p></li><li><p>缺点：不能即时更新（文件索引数据库在每次开机后更新），要想搜索最新文件需手动输入命令updatedb更新文件索引数据库，模糊搜索；</p></li></ul><p>Locate命令适合搜索不经常变化的文件，如系统文件</p><p>查询系统上预建的文件索引数据库：</p><p>/var/lib/mlocate/mlocate.db</p><h5 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h5><ul><li><p>-i      忽略大小写</p></li><li><p>-b     只搜索基名符合条件的文件</p></li><li><p>-n     只列出前几个</p></li><li><p>-r      支持扩展正则表达式</p></li></ul><h4 id="2-find命令"><a href="#2-find命令" class="headerlink" title="2.find命令"></a>2.find命令</h4><ul><li><p>优点：精确查找；实时查找；搜索条件灵活</p></li><li><p>缺点：查找速度慢；占用系统性能</p></li></ul><p>find [OPTION]…[查找路径] [查找条件] [处理动作]</p><p>指定搜索层级：</p><h5 id="不指定情况下默认当前目录下搜索"><a href="#不指定情况下默认当前目录下搜索" class="headerlink" title="不指定情况下默认当前目录下搜索"></a>不指定情况下默认当前目录下搜索</h5><ul><li><p>-maxdepth level      最大搜索深度，默认为1层</p></li><li><p>-mindepth level 最小搜索深度</p></li></ul><h5 id="根据文件名和inode查找："><a href="#根据文件名和inode查找：" class="headerlink" title="根据文件名和inode查找："></a>根据文件名和inode查找：</h5><ul><li><p>-name “filename” 支持使用通配符glob；注意文件名一定加””</p></li><li><p>-iname “filename” 不区分字母大小写</p></li><li><p>-inum n             按节点号inode查找文件</p></li><li><p>-samefile name       查找相同inode的文件，即硬链接</p></li><li><p>-links n     查找链接数为n的文件</p></li><li><p>-regex “PATTERN” 使用正则表达式搜索</p></li></ul><h5 id="根据属主、属组查找："><a href="#根据属主、属组查找：" class="headerlink" title="根据属主、属组查找："></a>根据属主、属组查找：</h5><ul><li><p>-user USERNAME：查找属主为指定用户（UID）的文件</p></li><li><p>-group GRPNAME：查找属组为指定组（GID）的文件</p></li><li><p>-uid UID：       查找属主为指定UID号的文件</p></li><li><p>-gid GID：       查找属组为指定GID号的文件</p></li><li><p>-nouser：        查找没有属主的文件</p></li><li><p>-nogroup：     查找没有属组的文件</p></li><li><p>-nouser -o -nogroup       查找没有属主或没有属组的文件</p></li></ul><h5 id="根据文件类型查找："><a href="#根据文件类型查找：" class="headerlink" title="根据文件类型查找："></a>根据文件类型查找：</h5><h6 id="type-TYPE："><a href="#type-TYPE：" class="headerlink" title="-type TYPE："></a>-type TYPE：</h6><ul><li><p>f：   普通文件</p></li><li><p>d：  目录文件</p></li><li><p>l：   符号链接文件</p></li><li><p>s：   套接字文件</p></li><li><p>b：  块设备文件</p></li><li><p>c：  字符设备文件</p></li><li><p>p：  管道文件</p></li></ul><h5 id="搜索空文件或目录："><a href="#搜索空文件或目录：" class="headerlink" title="搜索空文件或目录："></a>搜索空文件或目录：</h5><h6 id="empty-查找空文件或空目录"><a href="#empty-查找空文件或空目录" class="headerlink" title="-empty             查找空文件或空目录"></a>-empty             查找空文件或空目录</h6><p>例：<code>find/app -type d -empty</code></p><h5 id="组合条件："><a href="#组合条件：" class="headerlink" title="组合条件："></a>组合条件：</h5><ul><li><p>-a     与</p></li><li><p>-o     或</p></li><li><p>-not,!       非</p></li></ul><h5 id="德摩根定律："><a href="#德摩根定律：" class="headerlink" title="德摩根定律："></a>德摩根定律：</h5><pre><code>（非A）或（非B）=非（A且B）（非A）且（非B）=非（A或B）</code></pre><p>注意：使用（）表示组合条件时，括号内两边一定要加空格,且括号一定要加转义符”\”。</p><h5 id="根据文件大小来查找："><a href="#根据文件大小来查找：" class="headerlink" title="根据文件大小来查找："></a>根据文件大小来查找：</h5><pre><code>-size[+|-]#UNIT</code></pre><p>常用单位：k，M，G，c（byte）</p><ul><li><p>1024c  (1024-1，1024]</p></li><li><p>+1024c    (1024,+)</p></li><li><p>-1024c     [0,1024-1]</p></li></ul><h5 id="根据时间戳查找："><a href="#根据时间戳查找：" class="headerlink" title="根据时间戳查找："></a>根据时间戳查找：</h5><h6 id="以“天”为单位："><a href="#以“天”为单位：" class="headerlink" title="以“天”为单位："></a>以“天”为单位：</h6><pre><code>-atime[+|-]#</code></pre><ul><li><p>3：[3,4)</p></li><li><p>+3:[4,+]</p></li><li><p>-4:[0,4)</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-mtime</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-ctime</span><br></pre></td></tr></table></figure><h6 id="以“分钟”为单位："><a href="#以“分钟”为单位：" class="headerlink" title="以“分钟”为单位："></a>以“分钟”为单位：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-atime</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-mtime</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-ctime</span><br></pre></td></tr></table></figure><h6 id="根据权限查找："><a href="#根据权限查找：" class="headerlink" title="根据权限查找："></a>根据权限查找：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-perm[/|+|-]MODE</span><br></pre></td></tr></table></figure><h6 id="MODE：精确权限匹配（数字法）"><a href="#MODE：精确权限匹配（数字法）" class="headerlink" title="MODE：精确权限匹配（数字法）"></a>MODE：精确权限匹配（数字法）</h6><p>/|+MODE：任何一类（u,g,o）对象的权限中只要能一位匹配即可，或关系；</p><p>CentOS6使用“+”，CentOS7使用“/”</p><p>-MODE：没类对象权限都有对应权限时，才会匹配，且关系；</p><h5 id="处理动作："><a href="#处理动作：" class="headerlink" title="处理动作："></a>处理动作：</h5><ul><li><p>-print                默认的处理动作，显示到屏幕</p></li><li><p>-ls             类似于对查找的文件执行”ls -l”命令</p></li><li><p>-delete             删除查找到的文件，不进行提示</p></li><li><p>-fls file     查找到的所有文件的长格式信息保存至指定文件中</p></li><li><p>-ok COMMAND{}\； {}代表前面搜索到的结果，-ok后必须跟\；结尾，语法要求；对查找到的每个文件执行COMMAND命令，每个文件执行命令时，会要求用户确认</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name “f*” -ok rm &#123;&#125; \；</span><br></pre></td></tr></table></figure><p>将f开头的文件删除，每个文件删除时会要求确认。</p><pre><code>-exec COMMAND{}\；</code></pre><p> 对每个搜索到的文件执行COMMAND命令，不要求用户确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name “f*” -exec mv &#123;&#125; /data/ \;</span><br></pre></td></tr></table></figure><p>将f开头的文件移动到data目录下，不要求用户确认</p><h3 id="二、压缩和解压缩"><a href="#二、压缩和解压缩" class="headerlink" title="二、压缩和解压缩"></a>二、压缩和解压缩</h3><p>Linux系统中支持多种文件解压缩工具，不同压缩工具压缩比有所不同，压缩后的后缀名也不一样。要注意的是：前面我们说过在linux系统中，文件是不通过后缀判断的，但在解压缩中是个例外，不同的解压缩工具对后缀是有要求的。</p><h3 id="1-Linux常见解压缩工具："><a href="#1-Linux常见解压缩工具：" class="headerlink" title="1.Linux常见解压缩工具："></a>1.Linux常见解压缩工具：</h3><ul><li><p>file-roller         图形化解压缩工具（类似于windows系统winrar）</p></li><li><p>compress/uncompress：       .Z后缀</p></li><li><p>gzip/gunzip：          .gz后缀（主流）</p></li><li><p>bzip2/bunzip2：              .bz2后缀（主流）</p></li><li><p>xz/unxz：                 .xz后缀（主流，新兴）</p></li><li><p>zip</p></li><li><p>tar</p></li><li><p>cpio</p></li></ul><h5 id="compress-uncompress"><a href="#compress-uncompress" class="headerlink" title="compress/uncompress"></a>compress/uncompress</h5><ul><li><p>-d     解压缩，相当于uncompress，压缩文件删除</p></li><li><p>-c     压缩结果输出至标准输出，不删除原文件</p></li></ul><p>例：<code>compress -c b &gt; b.Z</code> 解压文件b并且不删除</p><p>-v     显示详情</p><p>uncompress    解压缩，同compress -d，压缩文件删除</p><p><code>zcat file.Z &gt; file</code>  解压缩，原压缩文件不删除</p><h5 id="gzip-gunzip"><a href="#gzip-gunzip" class="headerlink" title="gzip/gunzip"></a>gzip/gunzip</h5><ul><li><p>-d     解压缩，相当于gunzip</p></li><li><p>-c     将压缩结果输出至标准输出，不删除原文件</p></li><li><p>-v     显示详情</p></li></ul><p><code>zcat file.gz &gt; file</code>  解压缩，原压缩文件不删除</p><h5 id="bzip2-bunzip"><a href="#bzip2-bunzip" class="headerlink" title="bzip2/bunzip"></a>bzip2/bunzip</h5><ul><li><p>-k     保留原文件</p></li><li><p>-d     解压缩</p></li></ul><p>bunzip2            解压缩</p><p>bzcat                 不解压缩前提查看文本内容，与gzip的zcat用法类似</p><h5 id="xz-unxz"><a href="#xz-unxz" class="headerlink" title="xz/unxz"></a>xz/unxz</h5><ul><li><p>-k     保留原文件</p></li><li><p>-d     解压缩</p></li></ul><p>unxz         解压缩，功能同xz -d</p><p>xzcat                 功能同zcat，bzcat</p><p>压缩比：xz &gt; bzip2 &gt; gzip &gt; compress</p><h5 id="zip-unzip"><a href="#zip-unzip" class="headerlink" title="zip/unzip"></a>zip/unzip</h5><p>打包压缩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -r /tsetdir/sysconfig /etc/sysconfig/</span><br></pre></td></tr></table></figure><p>解包解压缩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip sysconfig.zip</span><br></pre></td></tr></table></figure><p><code>cat /var/log/messages|zip messages</code> </p><p><code>unzip -p message &gt; message</code>      解压缩重定向</p><h5 id="tar工具：（Tape-ARchive，磁带归档的缩写）打包工具，并不压缩"><a href="#tar工具：（Tape-ARchive，磁带归档的缩写）打包工具，并不压缩" class="headerlink" title="tar工具：（Tape ARchive，磁带归档的缩写）打包工具，并不压缩"></a>tar工具：（Tape ARchive，磁带归档的缩写）打包工具，并不压缩</h5><p>tar[OPTION]…</p><ul><li><p>-c     创建一个打包文件</p></li><li><p>-C     指定解压的目录</p></li><li><p>-p     保留属性</p></li><li><p>-v     查看过程</p></li><li><p>-f      对哪个进行文件归档或打包</p></li><li><p>-t      查看列表</p></li></ul><h6 id="1-创建文档（打包文件或目录）"><a href="#1-创建文档（打包文件或目录）" class="headerlink" title="1.创建文档（打包文件或目录）"></a>1.创建文档（打包文件或目录）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cpvf /PATH/TO/SOMEFILE.tar FILE</span><br></pre></td></tr></table></figure><h6 id="2-追加文件到归档：注：不支持对压缩文件追加"><a href="#2-追加文件到归档：注：不支持对压缩文件追加" class="headerlink" title="2.追加文件到归档：注：不支持对压缩文件追加"></a>2.追加文件到归档：注：不支持对压缩文件追加</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -r -f /PATH/TO/SOMEFILE.tar FILE…</span><br></pre></td></tr></table></figure><h6 id="3-查看归档文件中的文件列表"><a href="#3-查看归档文件中的文件列表" class="headerlink" title="3.查看归档文件中的文件列表"></a>3.查看归档文件中的文件列表</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -t -f /PATH/TO/SOMEFILE.tar</span><br></pre></td></tr></table></figure><h6 id="4-展开归档（解包）"><a href="#4-展开归档（解包）" class="headerlink" title="4.展开归档（解包）"></a>4.展开归档（解包）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -x -f /PATH/TO/SOMEFILE.tar</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -x -f /PATH/TO/SOMEFILE.tar -C /PATH/</span><br></pre></td></tr></table></figure><h6 id="5-结合压缩工具实现：归档并压缩"><a href="#5-结合压缩工具实现：归档并压缩" class="headerlink" title="5.结合压缩工具实现：归档并压缩"></a>5.结合压缩工具实现：归档并压缩</h6><ul><li><p>-j：bizp2</p></li><li><p>-z：gzip</p></li><li><p>-J：xz</p></li></ul><h6 id="6-T选项指定输入文件，-X选项指定包含要排除的文件列表"><a href="#6-T选项指定输入文件，-X选项指定包含要排除的文件列表" class="headerlink" title="6.-T选项指定输入文件，-X选项指定包含要排除的文件列表"></a>6.-T选项指定输入文件，-X选项指定包含要排除的文件列表</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zcvf myback.tgz -T /root/includefilelist -X /root/excludefilelist</span><br></pre></td></tr></table></figure><h6 id="7-分割打的tar文件为多份小文件："><a href="#7-分割打的tar文件为多份小文件：" class="headerlink" title="7.分割打的tar文件为多份小文件："></a>7.分割打的tar文件为多份小文件：</h6><p>split</p><ul><li><p>-b Size -d tar-file-name prefix-name</p></li><li><p>-b 1M –d mybackup.tgz mybackup-parts</p></li><li><p>-b 1M mybackup.tgz mybackup-parts</p></li></ul><h6 id="8-合并tar分割的多个小文件："><a href="#8-合并tar分割的多个小文件：" class="headerlink" title="8.合并tar分割的多个小文件："></a>8.合并tar分割的多个小文件：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat mybackup-parts* &gt; mybackup.tar.gz</span><br></pre></td></tr></table></figure><h5 id="cpio"><a href="#cpio" class="headerlink" title="cpio"></a>cpio</h5><p>功能：复制文件从或到归档</p><p>cpio命令是通过重定向的方式将文件进行打包备份，还原恢复的工具，他可以解压以</p><p>“cpio”或者”tar”结尾的文件</p><p>cpio[option] &gt; 文件名或者设备名</p><p>cpio[option] &lt; 文件名或者设备名</p><p>选项</p><ul><li><p>-o     将文件拷贝打包成文件或者将文件输出到设备上</p></li><li><p>-i      解包，将打包文件解压或将设备上的备份还原到系统</p></li><li><p>-t      预览，查看文件内容或者输出到设备上的文件内容</p></li><li><p>-v     显示打包过程中的文件名称</p></li><li><p>-d     解包生产目录，在cpio还原时，自动的建立目录</p></li><li><p>-c     一种较新的存储方式</p></li></ul><p>示例：</p><p>将etc目录备份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ./etc -print |cpio -ov &gt;etc.cpio</span><br></pre></td></tr></table></figure><p>内容预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpio -tv &lt; etc.cpio</span><br></pre></td></tr></table></figure><p>解包文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpio -idv &lt;etc.cpio</span><br></pre></td></tr></table></figure><p>关于linux系统的文件查找和解压缩方法今天就先介绍到这里了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux系统文件查找与解压缩方法&quot;&gt;&lt;a href=&quot;#Linux系统文件查找与解压缩方法&quot; class=&quot;headerlink&quot; title=&quot;Linux系统文件查找与解压缩方法&quot;&gt;&lt;/a&gt;Linux系统文件查找与解压缩方法&lt;/h2&gt;&lt;blockquote&gt;

      
    
    </summary>
    
    
      <category term="文件查找" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE/"/>
    
      <category term="解压缩" scheme="http://yoursite.com/tags/%E8%A7%A3%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本编程基础（1）</title>
    <link href="http://yoursite.com/2018/04/10/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%EF%BC%881%EF%BC%89/"/>
    <id>http://yoursite.com/2018/04/10/shell脚本编程基础（1）/</id>
    <published>2018-04-10T11:00:00.000Z</published>
    <updated>2018-06-04T13:33:32.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="shell脚本编程基础（1）"><a href="#shell脚本编程基础（1）" class="headerlink" title="shell脚本编程基础（1）"></a>shell脚本编程基础（1）</h2><h3 id="一、编程基础"><a href="#一、编程基础" class="headerlink" title="一、编程基础"></a>一、编程基础</h3><h4 id="1-什么是程序？"><a href="#1-什么是程序？" class="headerlink" title="1.什么是程序？"></a>1.什么是程序？</h4><p>程序是指：指令+数据</p><p>程序编程风格可分为：</p><ul><li><p>过程式：以指令为中心，数据服务于指令（关注过程，小软件开发）</p></li><li><p>对象式：以数据为中心，指令服务于数据（关注结果，适合开发大型软件）</p></li></ul><h4 id="2-程序的执行方式"><a href="#2-程序的执行方式" class="headerlink" title="2.程序的执行方式"></a>2.程序的执行方式</h4><p>计算机：运行二进制命令</p><p>编程语言：</p><ul><li><p>低级：汇编</p></li><li><p>高级：</p></li></ul><p>编译：高级语言–&gt;编译器–&gt;目标代码 (由程序员完成编译器翻译过程，安全性相对好)</p><ul><li>java，C#</li></ul><p>解释：高级语言–&gt;解释器–&gt;机器代码 （由电脑完成解释器翻译过程，安全性不如编译型）</p><ul><li>shell，perl，python</li></ul><p>shell程序：提供了编程能力，解释执行</p><h4 id="3-编程基本概念"><a href="#3-编程基本概念" class="headerlink" title="3.编程基本概念"></a>3.编程基本概念</h4><p>编程逻辑处理方式：</p><ul><li><p>顺序执行</p></li><li><p>循环执行</p></li><li><p>选择执行</p></li></ul><p>shell编程：过程式、解释执行</p><p>编程语言的基本结构：种系统命令的组合</p><p>数据存储：变量、数组</p><p>表达式：a+b</p><p>语句：if</p><h3 id="二、脚本基本格式"><a href="#二、脚本基本格式" class="headerlink" title="二、脚本基本格式"></a>二、脚本基本格式</h3><h4 id="1-格式要求："><a href="#1-格式要求：" class="headerlink" title="1.格式要求："></a>1.格式要求：</h4><p>首行shebang机制（即声明脚本使用哪种编程语言）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#！/bin/python</span><br></pre></td></tr></table></figure><h4 id="2-shell脚本的用途有："><a href="#2-shell脚本的用途有：" class="headerlink" title="2.shell脚本的用途有："></a>2.shell脚本的用途有：</h4><ul><li><p>自动化常用命令</p></li><li><p>执行系统管理和故障排除</p></li><li><p>创建简单的应用程序</p></li><li><p>处理文本或文件</p></li></ul><h4 id="3-运行脚本："><a href="#3-运行脚本：" class="headerlink" title="3.运行脚本："></a>3.运行脚本：</h4><ul><li><p>1.给予执行权限，执行</p></li><li><p>2.直接运行解释器，将脚本作为解释器程序的参数运行</p></li></ul><h4 id="4-脚本规范："><a href="#4-脚本规范：" class="headerlink" title="4.脚本规范："></a>4.脚本规范：</h4><p>脚本代码开头约定：</p><ul><li><p>1.第一行一般为调用使用的语言</p></li><li><p>2.程序名，避免更改文件名为无法找到正确的文件</p></li><li><p>3.版本号</p></li><li><p>4.更改后的时间</p></li><li><p>5.作者相关信息</p></li><li><p>6.该程序的作用，及注意事项</p></li><li><p>7.最后是各版本的更新简要说明</p></li></ul><h4 id="5-脚本示例："><a href="#5-脚本示例：" class="headerlink" title="5.脚本示例："></a>5.脚本示例：</h4><pre><code>#!/bin/bash# ——————————————# Filename:    hello.sh # Revision:    1.1# Date:        2018/04/01# Author:      wangx# Email:       wangx@gmail.com# Website:     www.donlihuoguo.cn# Description: This is the first script# ——————————————# Copyright:   2018 wang# License:     GPL  echo “hello world”</code></pre><h4 id="6-脚本调试："><a href="#6-脚本调试：" class="headerlink" title="6.脚本调试："></a>6.脚本调试：</h4><ul><li><p>bash -n script  检查脚本的语法错误</p></li><li><p>bash -x script  调试脚本执行</p></li></ul><h3 id="三、变量"><a href="#三、变量" class="headerlink" title="三、变量"></a>三、变量</h3><h4 id="1-定义变量时，变量名不加-符号，如："><a href="#1-定义变量时，变量名不加-符号，如：" class="headerlink" title="1.定义变量时，变量名不加$符号，如："></a>1.定义变量时，变量名不加$符号，如：</h4><pre><code>my_name=”wangx”</code></pre><h4 id="2-变量命名规则："><a href="#2-变量命名规则：" class="headerlink" title="2.变量命名规则："></a>2.变量命名规则：</h4><ul><li><p>1.数字、字母、下划线，不能以数字开头</p></li><li><p>2.不能使用程序中的保留字：如if，for等</p></li><li><p>3.做到见名知意</p></li></ul><p>注意：</p><ul><li>引用变量一般需加$</li></ul><p>赋值变量：</p><ul><li><p>name=” ”   要加引号</p></li><li><p>存放多行字符时”$name”变量外加双引号可保留换行格式</p></li></ul><h4 id="3-bash变量的种类"><a href="#3-bash变量的种类" class="headerlink" title="3.bash变量的种类"></a>3.bash变量的种类</h4><p>局部变量、全局变量、本地变量、位置变量、特殊变量</p><ul><li><p>局部变量：只在当前shell进程生效，对当前shell之外其他shell进程，包括父shell和子shell都无效</p></li><li><p>全局变量：生效范围在当前shell进程及其子进程；父进程变量可以传给子进程，子进程变量不可向上传给父进程</p></li><li><p>数字变量：\$10以上的变量需要加花括号${10}</p></li><li><p>特殊变量：\$1,\$@,\$*,\$#,\$0等、</p></li><li><p>\$1,\$2,…：对应第1、第2参数，shift[n]换位置</p></li><li><p>$0：命令本身</p></li><li><p>$*：传递给脚本的所有参数，每个参数合为一个字符串</p></li><li><p>$@：传递给脚本的所有参数，每个参数为独立字符串</p></li><li><p>$#：传递给脚本的参数的个数</p></li><li><p>\$@$*只在被双引号包起来的时候才会有差异</p></li></ul><p>set–         清空所有位置变量</p><p>注：怎么判断变量前加不加$符号？</p><p>如果命令能识别变量就不加\$,如果命令不能识别变量加\$；</p><p>养成好习惯：编完脚本将变量用unset删掉；</p><p>（）中使用的命令为一次性的，小括号中相当于在子进程中执行命令</p><p>注：小括号中所说的子进程与常规的子进程不是一回事</p><p>例如：<code>x=1;echo $$;(echo $$)</code>中显示进程号一致</p><p>{ ；}中使用命令时在当前shell环境中执行，不开启子进程影响当前shell环境</p><h4 id="4-变量运算"><a href="#4-变量运算" class="headerlink" title="4.变量运算"></a>4.变量运算</h4><p>bash中的算术运算：help let</p><p>+，-，*，/，%取余，**乘方</p><p>实现算术运算：</p><ul><li><p>1.let var=算术表达式</p></li><li><p>2.var=$[算术表达式]</p></li><li><p>3.var=$((算术表达式))</p></li></ul><p>注：算术运算过程中，空格尽量删除</p><p>条件测试过程中，能加空格地方尽量加空格</p><p>正则条件测试时，正则表达式不加引号</p><h3 id="四、条件测试"><a href="#四、条件测试" class="headerlink" title="四、条件测试"></a>四、条件测试</h3><h4 id="1-测试命令："><a href="#1-测试命令：" class="headerlink" title="1.测试命令："></a>1.测试命令：</h4><pre><code>test EXPRESSION[ EXPRESSION ]</code></pre><p><code>[[ EXPRESSION ]]</code>   双括号一般用于左侧字符匹配右侧扩展正则表达式</p><p>注：EXPRESSION前后必须有空白字符</p><p>评估布尔声明，以便用在条件性执行中：</p><ul><li><p>若真，则返回0</p></li><li><p>若假，则返回1</p></li></ul><p>例如：<code>#a=1;b=2</code></p><pre><code>#[ $a -eq $b ]#echo $?#1#a=2;b=2#[ $a -eq $b ]#echo $?#0</code></pre><p>条件性的执行操作符</p><ul><li><p>&amp;&amp;代表条件性的AND THEN，前面执行结果$?=0时，继续执行&amp;&amp;后命令</p></li><li><p>||代表条件性的OR ELSE，前面执行结果$?不为0时，执行||后命令</p></li></ul><p>test  与[  ]效果相同，注意括号里内容两边需加空格</p><ul><li>-v VAR      变量VAR是否设置</li></ul><h4 id="2-数值测试："><a href="#2-数值测试：" class="headerlink" title="2.数值测试："></a>2.数值测试：</h4><ul><li><p>-gt    是否大于（greater-than）</p></li><li><p>-ge   是否大于等于（greater-than-or-equal）</p></li><li><p>-eq   是否等于（equal）</p></li><li><p>-ne   是否不等于（not-equal）</p></li><li><p>-lt     是否小于（less-than）</p></li><li><p>-le    是否小于等于（less-than-or-equal）</p></li></ul><h4 id="3-字符串测试："><a href="#3-字符串测试：" class="headerlink" title="3.字符串测试："></a>3.字符串测试：</h4><ul><li><p>==    是否等于</p></li><li><p>>       ascii码是否大于ascii码</p></li><li><p>&lt;       是否小于</p></li><li><p>!=     是否不等于</p></li><li><p>=~    左侧字符串是否能够被右侧的PATTERN所匹配</p></li></ul><p>注：使用PATTERN匹配时，需要加双括号[[ ]]；使用扩展的正则表达式，且正则表达式不能加引号</p><ul><li><p>-z      字符串是否为空，空为真，不空为假</p></li><li><p>-n     字符串是否为不空，不空为真，空为假</p></li></ul><p>注：用于字符串比较时的用到的操作应该都使用引号</p><p>字符串是否为空还可用[ “$name” == “” ]来测试。</p><h4 id="4-文件相关测试："><a href="#4-文件相关测试：" class="headerlink" title="4.文件相关测试："></a>4.文件相关测试：</h4><p>存在性测试：</p><ul><li><p>-a FILE     同-e</p></li><li><p>-e FILE 文件存在性测试，存在为真，否则为假</p></li></ul><h4 id="5-存在性及类别测试："><a href="#5-存在性及类别测试：" class="headerlink" title="5.存在性及类别测试："></a>5.存在性及类别测试：</h4><ul><li><p>-b FILE 是否存在且为块设备文件</p></li><li><p>-c FILE 是否存在且为字符设备文件</p></li><li><p>-d FILE 是否存在且为目录文件</p></li><li><p>-f FILE 是否存在且为普通文件</p></li><li><p>-h FILE 同-L</p></li><li><p>-L FILE      是否存在且为符号链接文件</p></li><li><p>-p FILE 是否存在且为管道文件</p></li><li><p>-S FILE 是否存在且为套接字文件</p></li></ul><h4 id="6-文件权限测试："><a href="#6-文件权限测试：" class="headerlink" title="6.文件权限测试："></a>6.文件权限测试：</h4><ul><li><p>-r FILE      是否存在且有可读权限</p></li><li><p>-w FILE 是否存在且有可写权限</p></li><li><p>-x FILE 是否存在且有可执行权限</p></li></ul><h4 id="7-文件特殊权限测试："><a href="#7-文件特殊权限测试：" class="headerlink" title="7.文件特殊权限测试："></a>7.文件特殊权限测试：</h4><ul><li><p>-u FILE 是否存在且拥有suid权限</p></li><li><p>-g FILE 是否存在且拥有sgid权限</p></li><li><p>-k FILE 是否存在且拥有sticky权限</p></li></ul><h4 id="8-文件大小测试："><a href="#8-文件大小测试：" class="headerlink" title="8.文件大小测试："></a>8.文件大小测试：</h4><ul><li>-s FILE 是否存在且非空</li></ul><h4 id="9-文件是否打开："><a href="#9-文件是否打开：" class="headerlink" title="9.文件是否打开："></a>9.文件是否打开：</h4><ul><li><p>-t fd：fd 文件描述符是否在终端已经打开</p></li><li><p>-N FILE 文件自从上一次被读取之后是否被修改过</p></li><li><p>-O FILE 当前有效用户是否为文件属主</p></li><li><p>-G FILE 当前有效用户是否文文件属组</p></li></ul><p>注意：文件测试后跟空字符时，也反馈为True，如果要保证一个文件存在且满足测试条件时，</p><p>应表示为：例：<code>[ -n “file” -a -d “file” ]</code></p><p>file文件是否存在且为目录文件</p><h4 id="10-双目测试："><a href="#10-双目测试：" class="headerlink" title="10.双目测试："></a>10.双目测试：</h4><ul><li><p>FILE1 -ef FILE2                 FILE1是否是FILE2的硬链接</p></li><li><p>FILE1 -nt FILE2                 FILE1是否新于FILE2（mtime）</p></li><li><p>FILE1 -ot FILE2                 FILE1是否旧于FILE2</p></li></ul><h4 id="11-Bash的组合测试条件："><a href="#11-Bash的组合测试条件：" class="headerlink" title="11.Bash的组合测试条件："></a>11.Bash的组合测试条件：</h4><h5 id="第一种方式："><a href="#第一种方式：" class="headerlink" title="第一种方式："></a>第一种方式：</h5><ul><li><p>COMMAND1 &amp;&amp; COMMAND2      并且</p></li><li><p>COMMAND1 || COMMAND2        或者</p></li><li><p>！COMMAND         非</p></li></ul><h5 id="第二种方式："><a href="#第二种方式：" class="headerlink" title="第二种方式："></a>第二种方式：</h5><ul><li><p>[ EXPRESSION -a EXPRESSION ]     并且</p></li><li><p>[ EXPRESSION -o EXPRESSION ]     或者</p></li><li><p>[ ！EXPRESSION ]          非</p></li></ul><p>注：优先级为：”!”最高，”-a”次之，”-o”最低</p><h5 id="短路与-amp-amp"><a href="#短路与-amp-amp" class="headerlink" title="短路与&amp;&amp;"></a>短路与&amp;&amp;</h5><ul><li><p>0&amp;&amp;0=0</p></li><li><p>0&amp;&amp;1=0</p></li><li><p>1&amp;&amp;0=0</p></li><li><p>1&amp;&amp;1=1</p></li></ul><p>cmd1 &amp;&amp; cmd2</p><p>如果cmd1为假，cmd2不需要执行，反之cmd1为真，需要cmd2执行</p><h5 id="短路或"><a href="#短路或" class="headerlink" title="短路或||"></a>短路或||</h5><ul><li><p>0||0=0</p></li><li><p>0||1=1</p></li><li><p>1||0=1</p></li><li><p>1||1=1</p></li></ul><p>cmd1 || cmd2</p><p>如果cmd1为真，cmd2不需要执行，反之cmd1为假，需要cmd2执行</p><h5 id="异或-XOR"><a href="#异或-XOR" class="headerlink" title="异或 XOR ^"></a>异或 XOR ^</h5><p>如果相同为假，反则为真</p><ul><li><p>0 ^ 1 = 1</p></li><li><p>1 ^ 0 = 1</p></li><li><p>1 ^ 1 = 0</p></li><li><p>0 ^ 0 = 0</p></li></ul><p>注意：[  ]和test用变量时，最好加双引号””避免出问题</p><pre><code>false || { echo cmd1 ; echo cmd2 ; }false || (echo cmd1 ; echo cmd2)</code></pre><h4 id="12-使用read命令来接受输入"><a href="#12-使用read命令来接受输入" class="headerlink" title="12.使用read命令来接受输入"></a>12.使用read命令来接受输入</h4><p>read         使用read来把输入值分配给一个或多个shell变量</p><ul><li><p>-p     指定要显示的提示</p></li><li><p>-s    静默输出，一般用于密码</p></li><li><p>-n     N指定输入的字符长度N</p></li><li><p>-d     ‘字符’输入结束符，类型与输入重定向的&lt;&lt;EOF</p></li><li><p>-t N  TIMEOUT为N秒，N秒内无输入将自动退出</p></li></ul><p>read命令从标准输入中读取单词，并给每个单词分配一个变量</p><p>例如：</p><p><code>read -p “Enter a filename:” FILE</code>    标准输入将赋予变量$FILE</p><p>read命令从标准输入中读取单词，并给每个单词分配一个变量</p><p>read 给多个变量赋值的方法：</p><p>（1）将多个变量输入一个文件中，用空格分开，输出重定向</p><pre><code>read a b c &lt; f</code></pre><p>（2）用“&gt;&gt;&gt;”分开：</p><pre><code>read a b c &lt;&lt;&lt; “x y z”</code></pre><h3 id="五、配置用户环境"><a href="#五、配置用户环境" class="headerlink" title="五、配置用户环境"></a>五、配置用户环境</h3><h4 id="1-bash的配置文件"><a href="#1-bash的配置文件" class="headerlink" title="1.bash的配置文件"></a>1.bash的配置文件</h4><p>按生效范围划分，存在两类：</p><h5 id="全局配置："><a href="#全局配置：" class="headerlink" title="全局配置："></a>全局配置：</h5><ul><li><p>/etc/profile</p></li><li><p>/etc/profile.d/*.sh</p></li><li><p>/etc/bashrc</p></li></ul><h5 id="个人配置："><a href="#个人配置：" class="headerlink" title="个人配置："></a>个人配置：</h5><ul><li><p>~/.profile</p></li><li><p>~/.bashrc</p></li></ul><h4 id="2-shell登录的两种方式："><a href="#2-shell登录的两种方式：" class="headerlink" title="2.shell登录的两种方式："></a>2.shell登录的两种方式：</h4><h5 id="交互式登录："><a href="#交互式登录：" class="headerlink" title="交互式登录："></a>交互式登录：</h5><ul><li><p>1.直接输入账号密码登录</p></li><li><p>2.su – username 切换的用户</p></li></ul><p>执行顺序：/etc/profile –&gt; /etc/profile.d/*.sh –&gt; ~/.bash_profile –&gt; ~/.bashrc–&gt; /etc/bashrc</p><h5 id="非交互式的登录："><a href="#非交互式的登录：" class="headerlink" title="非交互式的登录："></a>非交互式的登录：</h5><ul><li><p>1.su usernme</p></li><li><p>2.图形界面打开的终端</p></li><li><p>3.执行脚本</p></li><li><p>4.任何其他的bash实例</p></li></ul><p>执行顺序：~/.bashrc –&gt; /etc/bashrc –&gt; /etc/profile.d/*.sh</p><p>注：只在交互式登录生效：/etc/profile，~/.bash_profile</p><h5 id="配置执行文件按功能划分，存在两类："><a href="#配置执行文件按功能划分，存在两类：" class="headerlink" title="配置执行文件按功能划分，存在两类："></a>配置执行文件按功能划分，存在两类：</h5><p>profile类和bashrc类</p><p>Profile类：为交互式登录的shell提供配置</p><ul><li><p>全局生效：/etc/profile ，/etc/profile.d/*.sh</p></li><li><p>个人生效：~/.bash_profile</p></li></ul><p>功用：</p><ul><li><p>（1）用于定义环境变量</p></li><li><p>（2）运行命令或脚本</p></li></ul><p>Bashrc类：为非交互式和交互式登录的shell提供配置</p><ul><li><p>全局生效：/etc/bashrc</p></li><li><p>个人生效：~/.bashrc</p></li></ul><p>功用：</p><ul><li><p>（1）定义命令别名和函数</p></li><li><p>（2）定义本地变量</p></li></ul><p>修改profile和bashrc文件后使生效的两种方法：</p><ul><li><p>（1）重新启动shell进程</p></li><li><p>（2）.或sourc；例：.~/.bashrc</p></li></ul><p>注意： .或source执行脚本表示将在当前进程运行，而不是开启一个子进程运行（配置文件一般用此方式执行）</p><h5 id="bash执行脚本则是开启一个进程执行（运行脚本一般用此方式执行）"><a href="#bash执行脚本则是开启一个进程执行（运行脚本一般用此方式执行）" class="headerlink" title="bash执行脚本则是开启一个进程执行（运行脚本一般用此方式执行）"></a>bash执行脚本则是开启一个进程执行（运行脚本一般用此方式执行）</h5><p>Bash退出任务<br>保存在~./.bash_logout文件中（用户）</p><p>在退出登录shell时运行</p><p>可用于：</p><ul><li><p>创建自动备份</p></li><li><p>清除临时文件</p></li><li><p>清除操作历史等</p></li><li><p>特殊的变量$-</p><p>  #echo $-</p><p>  #hibBH</p></li><li><p>h：hash缓存功能；set -h，关闭hash功能；set +h，开启hash功能</p></li><li><p>i：代表交互式shell</p></li><li><p>m：打开监控模式</p></li><li><p>B：大括号扩展</p></li><li><p>H：history，命令操作历史</p></li></ul><h5 id="bash展开命令的优先级："><a href="#bash展开命令的优先级：" class="headerlink" title="bash展开命令的优先级："></a>bash展开命令的优先级：</h5><ul><li><p>把命令行分成单个命令词</p></li><li><p>展开别名</p></li><li><p>展开大括号{}</p></li><li><p>展开波浪符~</p></li><li><p>命令替换$()和</p></li><li><p>再次把命令行分成命令词</p></li><li><p>展开文件通配（*、？等）</p></li><li><p>I/O重定向</p></li><li><p>运行命令</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;shell脚本编程基础（1）&quot;&gt;&lt;a href=&quot;#shell脚本编程基础（1）&quot; class=&quot;headerlink&quot; title=&quot;shell脚本编程基础（1）&quot;&gt;&lt;/a&gt;shell脚本编程基础（1）&lt;/h2&gt;&lt;h3 id=&quot;一、编程基础&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="脚本编程" scheme="http://yoursite.com/tags/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>vim文本编辑器及文本处理常用命令</title>
    <link href="http://yoursite.com/2018/04/08/vim%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E5%8F%8A%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/04/08/vim文本编辑器及文本处理常用命令/</id>
    <published>2018-04-08T11:00:00.000Z</published>
    <updated>2018-06-04T12:48:52.630Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vim文本编辑器及文本处理常用命令"><a href="#vim文本编辑器及文本处理常用命令" class="headerlink" title="vim文本编辑器及文本处理常用命令"></a>vim文本编辑器及文本处理常用命令</h2><blockquote><p>Vim是从 vi发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p></blockquote><h3 id="一、文本编辑器的种类主要有"><a href="#一、文本编辑器的种类主要有" class="headerlink" title="一、文本编辑器的种类主要有"></a>一、文本编辑器的种类主要有</h3><ul><li><p>行编辑器：sed</p></li><li><p>全屏编辑器：nano，vi</p></li><li><p>vim – Vi Improved（vi文本编辑器的升级版）</p></li></ul><h3 id="二、Vim文本编辑器相关命令："><a href="#二、Vim文本编辑器相关命令：" class="headerlink" title="二、Vim文本编辑器相关命令："></a>二、Vim文本编辑器相关命令：</h3><p>Vim是从 vi发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><h4 id="1-vim打开文件："><a href="#1-vim打开文件：" class="headerlink" title="1.vim打开文件："></a>1.vim打开文件：</h4><p>vim[option]…FILE…</p><ul><li><p>+#    打开文件后，让光标处于第#行行首</p></li><li><p>-o     后跟多个文件可水平显示多个窗口</p></li><li><p>-O    后跟多个文件可垂直显示多个窗口</p></li><li><p>-b     以二进制方式打开文件</p></li><li><p>-d file1 file2… 比较多个文件</p></li></ul><p>注：当一个文件不存在时，用vim打开编辑存盘后会自动创建它</p><h4 id="2-vim的三种主要模式："><a href="#2-vim的三种主要模式：" class="headerlink" title="2.vim的三种主要模式："></a>2.vim的三种主要模式：</h4><ul><li><p>命令（normal）模式：默认模式，可移动光标，剪切/粘贴文本。左下角显示文本路径，行数，字符数，右下角显示光标位置</p></li><li><p>插入（insert）模式：也叫编辑模式，修改文本。左下角显示 –INSERT–</p></li><li><p>扩展命令（extended command）模式：保存、退出等。左下角显示 “：”</p></li></ul><h4 id="3-vim模式切换："><a href="#3-vim模式切换：" class="headerlink" title="3.vim模式切换："></a>3.vim模式切换：</h4><p>命令模式—&gt;插入模式</p><ul><li><p>i：在光标处输入</p></li><li><p>I：在光标所在行首输入</p></li><li><p>a：在光标所在处后输入</p></li><li><p>A：在光标所在行行尾输入</p></li><li><p>o：在光标所在行的下方打开一个新行</p></li><li><p>O：在光标所在行的上方打开一个新行</p></li></ul><p>插入模式—&gt;命令模式</p><ul><li>ESC</li></ul><p>命令模式—&gt;扩展命令模式</p><ul><li>：</li></ul><p>扩展命令模式—&gt;命令模式</p><ul><li>ESC，Enter</li></ul><h4 id="4-vim的其他一些模式："><a href="#4-vim的其他一些模式：" class="headerlink" title="4.vim的其他一些模式："></a>4.vim的其他一些模式：</h4><ul><li><p>替换（replace）模式：        命令模式下R切换，可随意替换字符；右下角显示–REPALCE–</p></li><li><p>可视化（visual）模式：v    切换面向字符的可视化模式;右下角显示–VISUAL–V  切换面向行的可视化模式</p></li><li><p>ctrl+v   面试块的可视化模式</p></li></ul><h4 id="5-vim关闭文件"><a href="#5-vim关闭文件" class="headerlink" title="5.vim关闭文件"></a>5.vim关闭文件</h4><p>扩展模式</p><p>按”：”从命令模式进入Ex模式</p><ul><li><p>wq   存盘退出</p></li><li><p>q       文本未修改，不存盘退出</p></li><li><p>q！  文本已被修改，想不存盘退出</p></li><li><p>w file      文件另存为file</p></li><li><p>r file 读取file文件内容到当前文件</p></li><li><p>！command    直接在扩展模式下执行命令</p></li><li><p>r！command  读入命令的输入到当前文件光标处</p></li></ul><p>命令模式下也可关闭文件（不推荐使用）</p><ul><li><p>ZZ     保存退出</p></li><li><p>ZQ    不保存退出</p></li></ul><h4 id="6-命令模式常用命令："><a href="#6-命令模式常用命令：" class="headerlink" title="6.命令模式常用命令："></a>6.命令模式常用命令：</h4><p>单词间跳转：</p><ul><li><p>w      下一个单词词首</p></li><li><p>e       下一个单词词尾</p></li><li><p>b       当前或前一个单词的词首</p></li></ul><p>当前页跳转：</p><ul><li><p>H      页首</p></li><li><p>M     页中间</p></li><li><p>L       页底</p></li></ul><p>行首行尾跳转：</p><ul><li><p>^       跳转至行首第一个非空白字符</p></li><li><p>0       跳转至行首</p></li><li><p>$       跳转至行</p></li></ul><p>行间移动：</p><ul><li><p>#G    调至第#行；扩展模式下可执行 ：G</p></li><li><p>G      最后一行</p></li><li><p>1G，gg    第一行</p></li></ul><p>命令模式下字符操作</p><ul><li><p>x：删除光标所在处字符</p></li><li><p>#x：删除从光标所在处开始#个字符</p></li><li><p>xp：交换光标所在处字符和它后面字符的位置（原理是剪切粘贴）</p></li><li><p>~：波浪符转换大小写</p></li><li><p>J：删除当前行后的换行符</p></li><li><p>r：替换光标所在处字符</p></li></ul><ul><li><p>d：删除命令</p></li><li><p>d$    当前光标删除至行尾</p></li><li><p>d^    当前光标删除到非空行首</p></li><li><p>d0    当前光标删除到行首</p></li><li><p>dw   删除单词</p></li><li><p>dd    删除光标所在的行</p></li><li><p>#dd  多行删除，一下删除#行</p></li></ul><ul><li><p>y：复制命令（用法类似d删除）</p></li><li><p>y$     复制当前光标到行尾</p></li><li><p>y^     复当前光标位置到非空行首</p></li><li><p>yw    复制单词</p></li><li><p>yy     复制光标所在的行</p></li></ul><ul><li><p>p：粘贴</p></li><li><p>p       粘贴至光标所在行下一行</p></li><li><p>P       粘贴至光标所在行上一行</p></li></ul><ul><li><p>u：撤销更改</p></li><li><p>#u    撤销之前多次修改</p></li><li><p>U      撤销光标落在这行后所有此行的修改</p></li><li><p>Ctrl+r       返回上次撤销</p></li></ul><h4 id="7-扩展命令模式常用命令："><a href="#7-扩展命令模式常用命令：" class="headerlink" title="7.扩展命令模式常用命令："></a>7.扩展命令模式常用命令：</h4><p>格式：地址定界+编辑命令</p><p>地址定界</p><ul><li><p>：#  跳到第#行</p></li><li><p>：#，#    第左侧第#行，到右侧第#行；2,5表示第2到第5行</p></li><li><p>：#，+#  从左侧第#行，加上右侧#的行；2，+3表示第2到5行</p></li><li><p>：.   当前行</p></li><li><p>$       最后一行</p></li><li><p>%      全文，相当于1，$</p></li><li><p>：/pat1/,/pat2/               从pat1匹配到的行开始，到第一次被pat2匹配到的行</p></li><li><p>：/pat1/，#   可混用</p></li></ul><p>使用方式：后跟一个编辑命令</p><ul><li><p>d       删除</p></li><li><p>y       复制</p></li><li><p>w file        将范围内行另存至指定文件中</p></li><li><p>r file 在指定位置插入匹配内容</p></li></ul><p>查找字符</p><ul><li><p>/PATTERN：从光标所在处向文件尾部查找</p></li><li><p>？PATTERN：从光标所在处向文件首部查找</p></li><li><p>n：与命令同方向</p></li><li><p>N：与命令反方向</p></li></ul><p>查找并替换</p><ul><li>s/要查找的内容/替换为的内容/修饰符</li></ul><p>修饰符：</p><ul><li><p>i：忽略大小写</p></li><li><p>g：全局替换每一行的第一次出现的匹配</p></li><li><p>gc：全局替换所有匹配，每次替换前询问</p></li></ul><p>查找替换的分隔符/可用其他分隔符代替：如#，@</p><p>命令模式</p><ul><li><p>u：撤销更改</p></li><li><p>ctrl+r        恢复上一次撤销</p></li><li><p>.        重复执行上一次操作</p></li></ul><h4 id="8-vim的剪贴板"><a href="#8-vim的剪贴板" class="headerlink" title="8.vim的剪贴板"></a>8.vim的剪贴板</h4><p>有26个命名剪贴板和一个无命名剪贴板，存放不同的剪切内容，可以不同会话间分享</p><ul><li><p>”myy 表示复制光标所在行到m剪贴板</p></li><li><p>“mp 表示将m剪贴板内容粘贴</p></li><li><p>3″tyy 表示复制3行内容到t剪贴板</p></li><li><p>“tp   表示将t剪贴板内容粘贴</p></li></ul><h4 id="9-vim多文件模式"><a href="#9-vim多文件模式" class="headerlink" title="9.vim多文件模式"></a>9.vim多文件模式</h4><p>vim FILE1 FILE2 FILE3</p><ul><li><p>：next     下一个文件</p></li><li><p>：prev     上一个文件</p></li><li><p>：first      第一个文件</p></li><li><p>：last       最后一个文件</p></li><li><p>：wall      保存所有文件</p></li><li><p>：qall       退出所有</p></li><li><p>：wqall   保存退出</p></li></ul><p>单文件的窗口分隔：方便对照文件内容</p><ul><li><p>ctrl+w放开后按s           水平分割</p></li><li><p>ctrl+w放开后按v          垂直分割</p></li><li><p>ctrl+w放开后按q          取消相邻窗口</p></li><li><p>ctrl+w放开后按w                取消全部窗口；与：wqall相同</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/QQ%E5%9B%BE%E7%89%8720180408193404.png" alt="enter image description here"></p><h3 id="三、定制vim的工作特性"><a href="#三、定制vim的工作特性" class="headerlink" title="三、定制vim的工作特性"></a>三、定制vim的工作特性</h3><h4 id="1-扩展命令模式下执行："><a href="#1-扩展命令模式下执行：" class="headerlink" title="1.扩展命令模式下执行："></a>1.扩展命令模式下执行：</h4><ul><li><p>set number      添加行号</p></li><li><p>set nonumber 取消行号</p></li></ul><p>此操作仅临时有效，退出重进vim后，操作失效，要想永久保存vim的工作特性，需写入配置文件中</p><h4 id="2-配置文件：使vim工作特性永久有效"><a href="#2-配置文件：使vim工作特性永久有效" class="headerlink" title="2.配置文件：使vim工作特性永久有效"></a>2.配置文件：使vim工作特性永久有效</h4><ul><li><p>全局：/etc/vimrc</p></li><li><p>个人：~/.vimrc</p></li></ul><h4 id="3-其他一些常用vim特性命令："><a href="#3-其他一些常用vim特性命令：" class="headerlink" title="3.其他一些常用vim特性命令："></a>3.其他一些常用vim特性命令：</h4><h5 id="忽略大小写"><a href="#忽略大小写" class="headerlink" title="忽略大小写"></a>忽略大小写</h5><ul><li><p>set ic        忽略大小写</p></li><li><p>set noic 取消忽略大小写</p></li></ul><h5 id="自动缩进"><a href="#自动缩进" class="headerlink" title="自动缩进"></a>自动缩进</h5><ul><li><p>set ai        自动和上一行对齐</p></li><li><p>set noai   取消对齐</p></li></ul><h5 id="文件格式转换"><a href="#文件格式转换" class="headerlink" title="文件格式转换"></a>文件格式转换</h5><ul><li><p>set fileformat=unix         Windows文件转换Linux文件</p></li><li><p>set fileformat=dos Linux文件转换Windows文件</p></li></ul><h5 id="设置光标所在行下划线"><a href="#设置光标所在行下划线" class="headerlink" title="设置光标所在行下划线"></a>设置光标所在行下划线</h5><ul><li><p>set cursorline           启用</p></li><li><p>set no cursorline     禁用</p></li></ul><h5 id="复制时保留格式："><a href="#复制时保留格式：" class="headerlink" title="复制时保留格式："></a>复制时保留格式：</h5><ul><li><p>set paste          启用</p></li><li><p>set nopaste              禁用</p></li></ul><h5 id="查看全部已配置的vim工作特性"><a href="#查看全部已配置的vim工作特性" class="headerlink" title="查看全部已配置的vim工作特性"></a>查看全部已配置的vim工作特性</h5><ul><li><p>：set        显示全部已配置set</p></li><li><p>：help     查看帮助</p></li></ul><h3 id="四、文本处理常用命令"><a href="#四、文本处理常用命令" class="headerlink" title="四、文本处理常用命令"></a>四、文本处理常用命令</h3><h4 id="cut-按列抽取文本"><a href="#cut-按列抽取文本" class="headerlink" title="cut            按列抽取文本"></a>cut            按列抽取文本</h4><ul><li><p>-d     指定分隔符</p></li><li><p>-f      指定第几列</p></li><li><p>–output-delimiter=’ ‘      指定单引号中符号作为分隔符</p></li></ul><h4 id="diff-比较两个文件直接的差别，后跟file1，file2"><a href="#diff-比较两个文件直接的差别，后跟file1，file2" class="headerlink" title="diff           比较两个文件直接的差别，后跟file1，file2"></a>diff           比较两个文件直接的差别，后跟file1，file2</h4><ul><li>-u</li></ul><h4 id="head"><a href="#head" class="headerlink" title="head"></a>head</h4><ul><li><p>-n     显示头n行</p></li><li><p>-c     显示头n个字节</p></li></ul><h4 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h4><ul><li><p>-n     显示最后n行</p></li><li><p>-c     显示最后n个字节</p></li><li><p>-f      跟踪文本的变化（追加内容），可写为tailf</p></li><li><p>-F     跟踪文件名</p></li></ul><h4 id="sort-排序"><a href="#sort-排序" class="headerlink" title="sort          排序"></a>sort          排序</h4><ul><li><p>-t      指定分隔符（类似cut -d）</p></li><li><p>-k     指定第几列（类似cut -f）</p></li><li><p>-n     以数字排序</p></li><li><p>-r      倒序排列</p></li><li><p>-f      忽略大小写</p></li><li><p>-u     删除重复的行压缩到一行</p></li><li><p>-R     随机排序</p></li></ul><h4 id="paste-合并两个文件同行号的列到一行"><a href="#paste-合并两个文件同行号的列到一行" class="headerlink" title="paste                合并两个文件同行号的列到一行"></a>paste                合并两个文件同行号的列到一行</h4><ul><li><p>-s      合并两个文件按一行显示</p></li><li><p>-d     指定分隔符，类似cut -d的用法</p></li></ul><h4 id="grep-基于行过滤的文本过滤工具（grep文本处理三剑客之一）"><a href="#grep-基于行过滤的文本过滤工具（grep文本处理三剑客之一）" class="headerlink" title="grep         基于行过滤的文本过滤工具（grep文本处理三剑客之一）"></a>grep         基于行过滤的文本过滤工具（grep文本处理三剑客之一）</h4><ul><li><p>-v     显示不被匹配到的行</p></li><li><p>-i      忽略字符大小写</p></li><li><p>-n     添加匹配到的行的行号</p></li><li><p>-c     统计被匹配到的行数</p></li><li><p>-o     仅显示匹配到的字符</p></li><li><p>-q     静默模式</p></li><li><p>-A#   包含此匹配行和后#行</p></li><li><p>-B#   包含此匹配行和前#行</p></li><li><p>-C#   包含此匹配行和前后#行</p></li><li><p>-e     实现多个匹配字符的或者（or）关系 -e a -e b：a或b</p></li><li><p>-w    匹配整个单词，数字、字母、下划线都算单词一部分</p></li><li><p>-r      递归目录</p></li><li><p>-E     使用ERE，扩展的正则表达式</p></li><li><p>-F     相当于fgrep</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;vim文本编辑器及文本处理常用命令&quot;&gt;&lt;a href=&quot;#vim文本编辑器及文本处理常用命令&quot; class=&quot;headerlink&quot; title=&quot;vim文本编辑器及文本处理常用命令&quot;&gt;&lt;/a&gt;vim文本编辑器及文本处理常用命令&lt;/h2&gt;&lt;blockquote&gt;

      
    
    </summary>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
      <category term="文本处理" scheme="http://yoursite.com/tags/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>文本三剑客之grep及正则表达式用法</title>
    <link href="http://yoursite.com/2018/04/07/%E6%96%87%E6%9C%AC%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8Bgrep%E5%8F%8A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/07/文本三剑客之grep及正则表达式用法/</id>
    <published>2018-04-07T11:00:00.000Z</published>
    <updated>2018-06-04T12:36:25.556Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文本三剑客之grep及正则表达式用法"><a href="#文本三剑客之grep及正则表达式用法" class="headerlink" title="文本三剑客之grep及正则表达式用法"></a>文本三剑客之grep及正则表达式用法</h2><h4 id="一、文本三剑客之grep介绍"><a href="#一、文本三剑客之grep介绍" class="headerlink" title="一、文本三剑客之grep介绍"></a>一、文本三剑客之grep介绍</h4><blockquote><p>grep （缩写来自Globally search a Regular Expression and Print）是一种强大的文本搜索工具，它能使用特定模式匹配（包括正则表达式）搜索文本，并默认输出匹配行。</p></blockquote><h5 id="1-Linux文本处理三剑客："><a href="#1-Linux文本处理三剑客：" class="headerlink" title="1.Linux文本处理三剑客："></a>1.Linux文本处理三剑客：</h5><ul><li><p>grep：文本过滤工具</p></li><li><p>sed：文本编辑工具（传送门）</p></li><li><p>awk：Linux上的实现gawk，文本报告生成器（传送门）</p></li></ul><h5 id="grep，基于行过滤的文本过滤工具"><a href="#grep，基于行过滤的文本过滤工具" class="headerlink" title="grep，基于行过滤的文本过滤工具"></a>grep，基于行过滤的文本过滤工具</h5><p>格式：<br>grep [OPTION]… PATTERN [FILE]…<br>option：</p><ul><li><p>-v     显示不被匹配到的行</p></li><li><p>-i      忽略字符大小写</p></li><li><p>-n     添加匹配到的行的行号</p></li><li><p>-c     统计被匹配到的行数</p></li><li><p>-o     仅显示匹配到的字符</p></li><li><p>-q     静默模式</p></li><li><p>-A#   包含此匹配行和后#行</p></li><li><p>-B#   包含此匹配行和前#行</p></li><li><p>-C#   包含此匹配行和前后#行</p></li><li><p>-e     实现多个匹配字符的或者（or）关系 -e a -e b：a或b</p></li><li><p>-w    匹配整个单词，数字、字母、下划线都算单词一部分</p></li><li><p>-r      递归目录</p></li><li><p>-E     使用ERE，扩展的正则表达式</p></li><li><p>-F     相当于fgrep</p></li></ul><p>grep工具之所以功能强大，是因为它支持正则表达式进行匹配，那什么又是正则表达式呢?</p><h4 id="二-正则表达式的相关概念"><a href="#二-正则表达式的相关概念" class="headerlink" title="二.正则表达式的相关概念"></a>二.正则表达式的相关概念</h4><h5 id="1-正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。"><a href="#1-正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。" class="headerlink" title="1.正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。"></a>1.正则表达式语言由两种基本字符类型组成：原义（正常）文本字符和元字符。</h5><p>元字符使正则表达式具有处理能力。所谓元字符就是指那些在正则表达式中具有特殊意义的专用字符，可以用来规定其前导字符（即位于元字符前面的字符）在目标对象中的出现模式</p><p>正则表达式（REGEXP）：由一类特殊字符及文本字符所编写的模式，其中有些字符（元字符）不表示字符表面意义，而表示控制或通配功能</p><h5 id="2-正则表达式与通配符的区别"><a href="#2-正则表达式与通配符的区别" class="headerlink" title="2.正则表达式与通配符的区别"></a>2.正则表达式与通配符的区别</h5><p>通配符匹配的是文件名中的字符，不能匹配文件的文本内容的字符串（详见前篇：带你认识Linux中的通配符），这时候就需要用到正则表达式。</p><h5 id="3-正则表达式分两类"><a href="#3-正则表达式分两类" class="headerlink" title="3.正则表达式分两类"></a>3.正则表达式分两类</h5><ul><li><p>基本正则表达式：BRE；只承认的元字符有^$.[]*其他字符识别为普通字符：()需要转义</p></li><li><p>扩展正则表达式：ERE；则添加了（）{}?+| 等      grep -E，egrep</p></li></ul><h5 id="4-正则表达式引擎"><a href="#4-正则表达式引擎" class="headerlink" title="4.正则表达式引擎"></a>4.正则表达式引擎</h5><ul><li><p>采用不同算法，检查处理正则表达式的软件模块</p></li><li><p>基于PCRE语言（逐渐没落）兼容的正则表达式</p></li></ul><h5 id="5-元字符分类"><a href="#5-元字符分类" class="headerlink" title="5.元字符分类"></a>5.元字符分类</h5><p>字符匹配、匹配次数、位置锚定、分组（帮助文档：man 7 regex）</p><h4 id="三、基本正则表达式（BRE）的元字符介绍："><a href="#三、基本正则表达式（BRE）的元字符介绍：" class="headerlink" title="三、基本正则表达式（BRE）的元字符介绍："></a>三、基本正则表达式（BRE）的元字符介绍：</h4><h5 id="1-字符匹配："><a href="#1-字符匹配：" class="headerlink" title="1.字符匹配："></a>1.字符匹配：</h5><ul><li><p>.        匹配任意单个字符，放在[]中就表示点</p></li><li><p>[]      匹配括号内任意单个字符</p></li><li><p>[^]    匹配指定范围外的任意单个字符</p></li><li><p>[:alnum:] 任意一个字母和数字</p></li><li><p>[:alpha:]  任意一个字母</p></li><li><p>[:lower:]  任意一个小写字母</p></li><li><p>[:upper:]  任意一个大写字母</p></li><li><p>[:digit:]    任意一个数字</p></li><li><p>[:space:]  水平或垂直空白字符</p></li><li><p>[:punct:]  标点符号</p></li></ul><p>注意：正则表达式使用字符集作为搜索条件时，一定要加双引号，如”[[:digit:]]”；否则正则表达式会将字符集作为一个个字符进行识别</p><p>转义符“\”使正则表达式中具有特殊含义的字符显示其本身，如.只表示小数点</p><h5 id="2-匹配次数（某个字符出现的次数）"><a href="#2-匹配次数（某个字符出现的次数）" class="headerlink" title="2.匹配次数（某个字符出现的次数）"></a>2.匹配次数（某个字符出现的次数）</h5><ul><li><p>*       匹配前面的字符任意次，包括0次（贪婪模式，尽可能长的匹配）</p></li><li><p>.*     任意长度的任意字符</p></li><li><p>\？   匹配前面的字符0或1次，可看做 {0,1}</p></li><li><p>+     匹配前面的字符至少1次，可看做{1，}（可实现懒惰模式）</p></li><li><p>{m}        精确匹配前面的字符m次</p></li><li><p>{m，}   至少匹配前面的字符m次</p></li><li><p>{,m}      至多匹配前面的字符m次</p></li><li><p>{m，n}匹配前面的字符m到n次</p></li></ul><h5 id="3-位置锚定"><a href="#3-位置锚定" class="headerlink" title="3.位置锚定"></a>3.位置锚定</h5><ul><li><p>^       行首锚定，用于模式最左侧</p></li><li><p>$       行尾锚定，用于模式最右侧</p></li><li><p>^$    表示空行</p></li><li><p>\&lt;或\b     单词的词首锚定</p></li><li><p>>或\b     单词的次尾锚定</p></li><li><p>\&lt;word> 匹配整个单词，同grep -w</p></li></ul><h5 id="4-分组"><a href="#4-分组" class="headerlink" title="4.分组"></a>4.分组</h5><ul><li><p>()将一个或多个字符捆绑在一起，当做一个整体进行处理，如：(root)+</p></li><li><p>分组括号中匹配到的内容会被正则表达式记录与内部变量中，这些变量命名方为：\1,\2,\3,…</p></li><li><p>\1表示从左侧起第一个左括号以及与之匹配右括号之间的模式所匹配到的字符</p></li></ul><ul><li>后向引用：\1表示的是前面匹配的结果而不是前面匹配的模式 例： <code>echo rootxxrbbt|grep ‘\(r..t\).*\1’</code>  \1代表root，而不是r..t</li></ul><h5 id="5-或者："><a href="#5-或者：" class="headerlink" title="5.或者：|"></a>5.或者：|</h5><p>例：a|b：a或b； C|cat：C或cat \（C|c\）at：Cat或cat</p><h4 id="四、扩展正则表达式（ERE）元字符介绍："><a href="#四、扩展正则表达式（ERE）元字符介绍：" class="headerlink" title="四、扩展正则表达式（ERE）元字符介绍："></a>四、扩展正则表达式（ERE）元字符介绍：</h4><p>egrep      同grep -E<br>扩展正则表达式（ERE）可理解为将基础正则表达式中的转义符全部去掉，其字符匹配与基础正则表达式（BRE）相同。</p><h5 id="1-次数匹配："><a href="#1-次数匹配：" class="headerlink" title="1.次数匹配："></a>1.次数匹配：</h5><ul><li><p>*       匹配前面字符任意次</p></li><li><p>？    0或1次，可看做{0,1}</p></li><li><p>+       1次或多次.可看做{1，}</p></li><li><p>{m}  匹配m次</p></li><li><p>{m,n}        匹配m到n次</p></li></ul><h5 id="2-位置锚定："><a href="#2-位置锚定：" class="headerlink" title="2.位置锚定："></a>2.位置锚定：</h5><ul><li><p>^       行首</p></li><li><p>$       行尾</p></li><li><p>\&lt;,\b        语首</p></li><li><p>>,\b       语尾</p></li></ul><h5 id="3-分组："><a href="#3-分组：" class="headerlink" title="3.分组："></a>3.分组：</h5><ul><li><p>（）</p></li><li><p>后向引用：\1,\2,…</p></li></ul><h5 id="4-或者："><a href="#4-或者：" class="headerlink" title="4.或者："></a>4.或者：</h5><ul><li><p>a|b  a或b</p></li><li><p>C|cat       C或cat</p></li><li><p>（C|c）at       Cat或cat</p></li></ul><h4 id="五、正则表达式中的元字符与通配符的区别"><a href="#五、正则表达式中的元字符与通配符的区别" class="headerlink" title="五、正则表达式中的元字符与通配符的区别"></a>五、正则表达式中的元字符与通配符的区别</h4><p>作用不同：通配符匹配的是文件名中的字符，而正则表达式匹配的是文件的文本内容的字符串；</p><p>两者之间有很多相同之处，也有不同点，其中：</p><h5 id="1-正则表达式元字符与通配符代表意义不同的有："><a href="#1-正则表达式元字符与通配符代表意义不同的有：" class="headerlink" title="1.正则表达式元字符与通配符代表意义不同的有："></a>1.正则表达式元字符与通配符代表意义不同的有：</h5><p>######通配符中：</p><ul><li><p>* 表示任意长度的任意字符</p></li><li><p>? 表示任意一个单个字符</p></li></ul><p>######正则表达式：</p><ul><li><p>*表示匹配前面的字符任意次</p></li><li><p>. 表示匹配任意一个单个字符</p></li><li><p>.*表示任意长度的任意字符</p></li></ul><p>#####2.正则表达式元字符与通配符含义相似的有：</p><ul><li><p>[]      匹配括号内任意单个字符</p></li><li><p>[^]    匹配指定范围外的任意单个字符</p></li><li><p>[:alnum:] 任意一个字母和数字</p></li><li><p>[:alpha:]  任意一个字母</p></li><li><p>[:lower:]  任意一个小写字母</p></li><li><p>[:upper:]  任意一个大写字母</p></li><li><p>[:digit:]    任意一个数字</p></li><li><p>[:space:]  水平或垂直空白字符</p></li><li><p>[:punct:]  标点符号</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文本三剑客之grep及正则表达式用法&quot;&gt;&lt;a href=&quot;#文本三剑客之grep及正则表达式用法&quot; class=&quot;headerlink&quot; title=&quot;文本三剑客之grep及正则表达式用法&quot;&gt;&lt;/a&gt;文本三剑客之grep及正则表达式用法&lt;/h2&gt;&lt;h4 id=&quot;一
      
    
    </summary>
    
    
      <category term="grep" scheme="http://yoursite.com/tags/grep/"/>
    
      <category term="正则表达式" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>浅谈几种IO重定向变形用法</title>
    <link href="http://yoursite.com/2018/04/05/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8DIO%E9%87%8D%E5%AE%9A%E5%90%91%E5%8F%98%E5%BD%A2%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/05/浅谈几种IO重定向变形用法/</id>
    <published>2018-04-05T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈几种IO重定向变形用法"><a href="#浅谈几种IO重定向变形用法" class="headerlink" title="浅谈几种IO重定向变形用法"></a>浅谈几种IO重定向变形用法</h2><h3 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h3><p>首先，我们来认识一下linux系统中的几种标准输入和输出</p><p>什么是标准输入和输出呢？</p><p>Linux给程序提供了三种I/O设备，即：</p><ul><li><p>标准输入（STDIN）  0            默认接受来自键盘的输入</p></li><li><p>标准输出（STDOUT） 1      默认输出到终端窗口</p></li><li><p>标准错误（STDERR） 2       默认输出到终端窗口</p></li></ul><p>同时linux中使用“&gt;”和“&gt;&gt;”将标准输出和标准错误重新定向到文件中：</p><ul><li><p>“&gt;”后跟重定向文件，文件内容会被覆盖</p></li><li><p>>       把标准输出重定向到文件</p></li><li><p>2&gt;    把标准错误重定向到文件</p></li><li><p>&amp;&gt;    把标准输出和错误都定向到文件</p></li><li><p>1&gt;&amp;2        把标准输出定向到标准错误（简单来讲，对的变成错的）</p></li><li><p>2&gt;&amp;1        把标准错误定向到标准标准输出（错的变成对的）</p></li></ul><ul><li><p>“&gt;&gt;”后跟重定向文件，是在原有内容基础上，追加内容</p></li><li><p>>&gt;    追加标准输出重定向到文件</p></li><li><p>2&gt;&gt;  追加标准错误重定向到文件</p></li><li><p>&amp;&gt;&gt; 追加标准输出和错误都定向到文件</p></li></ul><p>那么下面我们来讨论下几种重定向的变形用法：</p><p>首先我们先建file1-6的6个空文件<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%88%9B%E5%BB%BA%E7%A9%BA%E6%96%87%E4%BB%B6.png" alt="enter image description here"><br>这里我们看到:</p><p><code>ll /data/f1</code> 显示标准输出（f1文件详细信息）；</p><p><code>ll /erorr</code> 显示标准错误（提示无此目录）；<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%AD%A3%E7%A1%AE%E4%B8%8E%E9%94%99%E8%AF%AF.png" alt="enter image description here"></p><h3 id="二、实验"><a href="#二、实验" class="headerlink" title="二、实验"></a>二、实验</h3><h4 id="实验1"><a href="#实验1" class="headerlink" title="实验1"></a>实验1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file1 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file1.png" alt="enter image description here"></p><p>结果:屏幕无显示，标准输出和标准错误输入到file1文件中</p><h4 id="实验2"><a href="#实验2" class="headerlink" title="实验2"></a>实验2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 2&gt;&amp;1 &gt; /data/file2</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file2.png" alt="enter image description here"></p><p>结果:屏幕显示标准错误，标准输出输入到file2文件中</p><h4 id="实验3"><a href="#实验3" class="headerlink" title="实验3"></a>实验3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 2&gt; /data/file3 1&gt;&amp;2</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file3.png" alt="enter image description here"></p><p>结果:屏幕无显示，标准输出和标准错误输入到file3文件中</p><h4 id="实验4"><a href="#实验4" class="headerlink" title="实验4"></a>实验4</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 1&gt;&amp;2 &gt; /data/file4</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file4.png" alt="enter image description here"></p><p>结果:屏幕显示标准错误，标准输出输入到file4文件中</p><h4 id="实验5"><a href="#实验5" class="headerlink" title="实验5"></a>实验5</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file5</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file5.png" alt="enter image description here"></p><p>结果:屏幕显示标准错误，标准输出输入到file5文件中</p><h4 id="实验6"><a href="#实验6" class="headerlink" title="实验6"></a>实验6</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file6 1&gt;&amp;2</span><br></pre></td></tr></table></figure><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/file6.png" alt="enter image description here"></p><p>结果:屏幕显示标准输出和标准错误，file6文件为空</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>观察6个小实验我们发现:</p><p>实验1,3得出的结果完全相同，屏幕无显示，标准输出和标准错误输入到file文件中。得出此结果也有两种</p><p>执行顺序的可能性：</p><ul><li><p>可能性1：实验1可看做，标准输出先重定向到file文件中，标准错误然后重定向为标准输出再次重定向到file文件中；实验3可看做，标准错误先重定向到file文件中，标准输出然后重定向为标准错误再次重定向到file文件中，所以file文件中既有标准输入又有标准输出。</p></li><li><p>可能性2：实验1可看做，标准输出和错误都经过2&gt;&amp;1的重定向后，全变为标准输出，再输入进file1件中；实验3可看做，标准输出和错误都经过1&gt;&amp;2的重定向后，全变为标准错误，再输入file3文件中。于是我们有了实验6，ll /data/f1 /erorr &gt; /data/file6 1&gt;&amp;2，得出结果屏幕显示标准输出和标准错误，file6文件为空，由此可认为实验6执行了可能性2的执行过程。</p></li></ul><p>结论1:当有1&gt;&amp;2或2&gt;&amp;1处于重定向组合命令结尾时，输出结果全部先执行1&gt;&amp;2或2&gt;&amp;1，再执行前面的重定向。</p><p>实验2,4,5得出的结果完全相同，即屏幕显示标准错误，标准输出输入到file5文件中</p><p>三条命令分别为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 2&gt;&amp;1 &gt; /data/file2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr 1&gt;&amp;2 &gt; /data/file4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /data/f1 /erorr &gt; /data/file5</span><br></pre></td></tr></table></figure><p>我们是否可以这样认为:</p><p>结论2:当2&gt;&amp;1或1&gt;&amp;2处在重定向组合命令中间位置时，2&gt;&amp;1或1&gt;&amp;2是不起作用的，可以忽略掉（此结论待定）</p><p>现在再来看这个问题</p><p>下列哪个标准输出结果与其他选项不同：（   ）</p><p>A.cmd &gt;log 2&gt;&amp;1</p><p>B.cmd 2&gt;&amp;1 &gt;log</p><p>C.cmd &amp;&gt; log</p><p>D,cmd 2&gt;log 1&gt;&amp;2</p><p>小伙伴们，现在用以上结论去做这道题，是不是很easy了呢</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;浅谈几种IO重定向变形用法&quot;&gt;&lt;a href=&quot;#浅谈几种IO重定向变形用法&quot; class=&quot;headerlink&quot; title=&quot;浅谈几种IO重定向变形用法&quot;&gt;&lt;/a&gt;浅谈几种IO重定向变形用法&lt;/h2&gt;&lt;h3 id=&quot;一、简介&quot;&gt;&lt;a href=&quot;#一、简介&quot;
      
    
    </summary>
    
    
      <category term="IO重定向" scheme="http://yoursite.com/tags/IO%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件权限详解</title>
    <link href="http://yoursite.com/2018/04/04/Linux%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/04/04/Linux文件权限详解/</id>
    <published>2018-04-04T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux文件权限详解"><a href="#Linux文件权限详解" class="headerlink" title="Linux文件权限详解"></a>Linux文件权限详解</h2><blockquote><p>Linux系统中不仅是对用户与组根据UID,GID进行了管理，还对Linux系统中的文件，按照用户与组进行分类，针对不同的群体进行了权限管理，用他来确定谁能通过何种方式对文件和目录进行访问和操作。</p></blockquote><h3 id="一、文件权限"><a href="#一、文件权限" class="headerlink" title="一、文件权限"></a>一、文件权限</h3><h4 id="1-文件的权限针对三类对象进行定义"><a href="#1-文件的权限针对三类对象进行定义" class="headerlink" title="1.文件的权限针对三类对象进行定义"></a>1.文件的权限针对三类对象进行定义</h4><ul><li><p>r：读取文件内容</p></li><li><p>w：修改文件内容</p></li><li><p>x：执行权限对除二进制程序以外的文件没什么意义</p></li></ul><h4 id="2-每个文件针对每类访问者定义了三种主要权限"><a href="#2-每个文件针对每类访问者定义了三种主要权限" class="headerlink" title="2.每个文件针对每类访问者定义了三种主要权限"></a>2.每个文件针对每类访问者定义了三种主要权限</h4><ul><li><p>r：Read      读</p></li><li><p>w：Write      写</p></li><li><p>x：eXecute      执行</p></li></ul><p>另 X：针对目录加执行权限，文件不加执行权限（因文件具备执行权限有安全隐患）</p><p>注意：root账户不受文件权限的读写限制，执行权限受限制</p><h4 id="3-对于文件和目录来说，r，w，x有着不同的作用和含义"><a href="#3-对于文件和目录来说，r，w，x有着不同的作用和含义" class="headerlink" title="3.对于文件和目录来说，r，w，x有着不同的作用和含义"></a>3.对于文件和目录来说，r，w，x有着不同的作用和含义</h4><p> 针对文件：</p><ul><li><p>r：读取文件内容</p></li><li><p>w：修改文件内容</p></li><li><p>x：执行权限对除二进制程序以外的文件没什么意义</p></li></ul><p>针对目录：</p><p>目录本质可看做是存放文件列表、节点号等内容的文件</p><ul><li><p>r：查看目录下的文件列表</p></li><li><p>w：删除和创建目录下的文件</p></li><li><p>x：可以cd进入目录，能查看目录中文件的详细属性，能访问目录下文件内容（基础权限）</p></li></ul><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%9D%83%E9%99%90.png" alt="enter image description here"></p><h4 id="4-用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。"><a href="#4-用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。" class="headerlink" title="4.用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。"></a>4.用户获取文件权限的顺序：首先看是否为所有者，如果是，则后面权限不看；再看是否为所属组，如果是，则后面权限不看。</h4><h3 id="二、修改文件访问权限的方法"><a href="#二、修改文件访问权限的方法" class="headerlink" title="二、修改文件访问权限的方法"></a>二、修改文件访问权限的方法</h3><p>chmod              修改权限 change mode</p><h4 id="1-mode法"><a href="#1-mode法" class="headerlink" title="1.mode法"></a>1.mode法</h4><p>格式：chmod who opt per file</p><ul><li><p>who：u g o a（all）</p></li><li><p>opt：+ – =</p></li><li><p>per：r w x X</p></li></ul><h4 id="2-数字法"><a href="#2-数字法" class="headerlink" title="2.数字法"></a>2.数字法</h4><p>格式：chmod XXX file</p><ul><li><p>rwx rw- r–</p></li><li><p>111 110 100</p></li><li><p>7   6   4</p></li></ul><ul><li><p>r：4</p></li><li><p>w：2</p></li><li><p>x：1</p></li></ul><p>例：chmod 764 file        给file文件添加 rwxrw-r– 权限</p><p>chmod -R +X dir               给dir目录添加X执行权限，dir目录下文件不添加执行权限</p><p>（如果dir目录下有文件已具备执行权限，则添加该文件执行权限）</p><h3 id="三、UMASK值"><a href="#三、UMASK值" class="headerlink" title="三、UMASK值"></a>三、UMASK值</h3><p>作用：取消对应的权限，影响创建文件和目录的默认权限</p><p>对目录：</p><ul><li>umask+default=777（dir）</li></ul><p>对文件：</p><ul><li>666-umask：观察结果，如果有奇数，奇数位+1，偶数不变</li></ul><h3 id="四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）"><a href="#四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）" class="headerlink" title="四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）"></a>四、三种特殊权限suid、sgid、sticky（sticky权限工作环境中相对常用）</h3><h4 id="1-suid"><a href="#1-suid" class="headerlink" title="1.suid"></a>1.suid</h4><p>作用：给一个用户继承二进制程序所有者拥有的权限</p><p>suid权限位 位于所有者的执行权限位上，如果一个文件具有suid权限，则所有者执行位为s，文件表现为红色背景</p><p>例：<code>ll /usr/bin/passwd</code></p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E7%BA%A2%E8%89%B2suid.png" alt="enter image description here"></p><p>给file文件增加suid权限</p><ul><li><p>chmod u+s file</p></li><li><p>chmod 4755 file               suid数字法表示为4</p></li></ul><p>suid只适合作用在二进制程序上</p><h4 id="2-sgid"><a href="#2-sgid" class="headerlink" title="2.sgid"></a>2.sgid</h4><p>作用1：给一个用户继承二进制程序所有组拥有的权限</p><p>sgid权限位 位于所有组的执行权限位，如果一个文件具有suid权限，则所有组的执行位为s，文件表现为黄色背景</p><p>例：<code>ll which cat</code><br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E9%BB%84%E8%89%B2sgid.png" alt="enter image description here"></p><p>给file文件增加sgid权限</p><ul><li><p>chmod g+s file</p></li><li><p>chmod 2755 file               sgid数字法表示为2</p></li></ul><p>作用2：作用在目录上时，使一个目录下的新建的文件继承目录的所属组</p><h4 id="3-sticky"><a href="#3-sticky" class="headerlink" title="3.sticky"></a>3.sticky</h4><p> 作用：作用于目录上，此目录的文件只能被所有者删除</p><p>sticky权限位 位于其他的执行权限位上，如果一个文件具有sticky权限，则其他的执行位为t，目录表现为绿色背景</p><p>例：<code>ll -d /tmp</code><br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E7%BB%BF%E8%89%B2sticky.png" alt="enter image description here"></p><p>给dir目录添加sticky权限</p><ul><li><p>chmod o+t dir</p></li><li><p>chmod 1777 dir                sticky数字法表示为1</p></li></ul><h3 id="五、ACL访问控制列表"><a href="#五、ACL访问控制列表" class="headerlink" title="五、ACL访问控制列表"></a>五、ACL访问控制列表</h3><p>作用：实现更加灵活的权限管理，打破了三类用户的权限管理</p><h4 id="1-添加ACL权限"><a href="#1-添加ACL权限" class="headerlink" title="1.添加ACL权限"></a>1.添加ACL权限</h4><ul><li><p>setfacl -m u:wang:0 file 使wang账户对指定file文件无权限</p></li><li><p>setfacl -m u:mage:rw file       使mage账户对指定file文件有读写权限</p></li><li><p>setfacl -m g:g1:rw file 使g1组对指定file文件有读写权限</p></li><li><p>getfacl     file                     查看指定file文件的ACL权限</p></li></ul><p>ACL权限执行顺序类似于用户获取文件权限的顺序，getfacl顺序从上到下执行，一旦生效，下面的将不再生效（如果属于多个组，权限累加）</p><h4 id="2-删除ACL权限"><a href="#2-删除ACL权限" class="headerlink" title="2.删除ACL权限"></a>2.删除ACL权限</h4><ul><li><p>setfacl -x u:wang file      删除wang账户对指定file文件的ACL权限</p></li><li><p>setfacl -x g:g1 file   删除g1组对指定file文件的ACL权限</p></li></ul><h4 id="3-ACL权限下的mask"><a href="#3-ACL权限下的mask" class="headerlink" title="3.ACL权限下的mask"></a>3.ACL权限下的mask</h4><p>设置用户对指定文件所能拥有的最大权限（限高作用）</p><ul><li><p>setfacl -m mask::r file             使指定文件file所拥有的最大权限位读r</p></li><li><p>setfacl -x mask::r file               取消指定文件file的最大权限限制mask</p></li><li><p>setfacl -b f1                      取消f1文件所有的ACL权限</p></li></ul><p>ACL生效顺序：所有者、自定义用户、自定义组、其他人</p><h4 id="4-备份和恢复ACL权限"><a href="#4-备份和恢复ACL权限" class="headerlink" title="4.备份和恢复ACL权限"></a>4.备份和恢复ACL权限</h4><ul><li><p>getfacl -R /tmp/dir1&gt;acl.txt           将dir1目录下ACL权限备份</p></li><li><p>setfacl -R –set-file=acl.txt /tem/dir      恢复dir1目录下ACL权限</p></li></ul><h3 id="六、文件权限操作的常用命令"><a href="#六、文件权限操作的常用命令" class="headerlink" title="六、文件权限操作的常用命令"></a>六、文件权限操作的常用命令</h3><h4 id="1-chown-设置文件所有者（普通用户无法修改文件所有者）"><a href="#1-chown-设置文件所有者（普通用户无法修改文件所有者）" class="headerlink" title="1.chown              设置文件所有者（普通用户无法修改文件所有者）"></a>1.chown              设置文件所有者（普通用户无法修改文件所有者）</h4><ul><li><p>-R     递归</p></li><li><p>user：group   同时修改所有者，所有组</p></li></ul><h4 id="2-chgrp-设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）"><a href="#2-chgrp-设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）" class="headerlink" title="2.chgrp                设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）"></a>2.chgrp                设置文件所属组（普通用户要想该所属组，前提是文件所有者为自己，自己在所属组中）</h4><ul><li>-R     递归</li></ul><h4 id="3-chmod-设置指定文件权限"><a href="#3-chmod-设置指定文件权限" class="headerlink" title="3.chmod              设置指定文件权限"></a>3.chmod              设置指定文件权限</h4><ul><li><p>-R     递归</p></li><li><p>–reference=f1 f2 f3        参考f1文件权限设置f2，f3文件</p></li></ul><h4 id="4-chattr-给指定文件添加保护，避免root账户误操作"><a href="#4-chattr-给指定文件添加保护，避免root账户误操作" class="headerlink" title="4,chattr               给指定文件添加保护，避免root账户误操作"></a>4,chattr               给指定文件添加保护，避免root账户误操作</h4><ul><li><p>i      锁定文件，不能删除，不能改名，不能更改内容</p></li><li><p>-i      解锁+i</p></li><li><p>-a     锁定文件，不能删除，不能改名，但可追加内容（追加重定向）</p></li><li><p>-a     解锁+a</p></li><li><p>+A    指定文件读时间atime不再更改</p></li></ul><h4 id="5-lsattr-查看指定文件是否有锁定状态"><a href="#5-lsattr-查看指定文件是否有锁定状态" class="headerlink" title="5.lsattr                 查看指定文件是否有锁定状态"></a>5.lsattr                 查看指定文件是否有锁定状态</h4><h4 id="6-setfacl-设置文件ACL权限"><a href="#6-setfacl-设置文件ACL权限" class="headerlink" title="6.setfacl              设置文件ACL权限"></a>6.setfacl              设置文件ACL权限</h4><ul><li><p>-m mask::r file          使指定文件file所拥有的最大权限位读r</p></li><li><p>-x mask::r file            取消指定文件file的最大权限限制mask</p></li><li><p>-b f1                   取消f1文件所有的ACL权限</p></li><li><p>-R –set-file=acl.txt /tem/dir   恢复dir1目录下ACL权限</p></li></ul><h4 id="7-getfacl-查看文件ACL权限"><a href="#7-getfacl-查看文件ACL权限" class="headerlink" title="7.getfacl              查看文件ACL权限"></a>7.getfacl              查看文件ACL权限</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux文件权限详解&quot;&gt;&lt;a href=&quot;#Linux文件权限详解&quot; class=&quot;headerlink&quot; title=&quot;Linux文件权限详解&quot;&gt;&lt;/a&gt;Linux文件权限详解&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Linux系统中不仅是对用户与组根据UID
      
    
    </summary>
    
    
      <category term="文件权限" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户与组管理命令的易混淆点和重合点</title>
    <link href="http://yoursite.com/2018/04/03/Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4%E7%9A%84%E6%98%93%E6%B7%B7%E6%B7%86%E7%82%B9%E5%92%8C%E9%87%8D%E5%90%88%E7%82%B9/"/>
    <id>http://yoursite.com/2018/04/03/Linux用户与组管理命令的易混淆点和重合点/</id>
    <published>2018-04-03T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.521Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux用户与组管理命令的易混淆点和重合点"><a href="#Linux用户与组管理命令的易混淆点和重合点" class="headerlink" title="Linux用户与组管理命令的易混淆点和重合点"></a>Linux用户与组管理命令的易混淆点和重合点</h2><blockquote><p>Linux用户与组的管理命令主要有useradd、usermod、userdel、groupadd、groupmod、groupdel、groupmems、gpasswd、passwd、newgrp等等（详见上篇Linux用户与组的管理详解），其中每条命令也都有很多的可选项，对于初学者来说很容易造成混淆；此外，这些命令之间有很多相重合的用法，即：拥有多种命令可实现相同的需求的情况。</p></blockquote><h3 id="一、易混淆点：关于GID的改变"><a href="#一、易混淆点：关于GID的改变" class="headerlink" title="一、易混淆点：关于GID的改变"></a>一、易混淆点：关于GID的改变</h3><h4 id="1-改变一个用户的gid"><a href="#1-改变一个用户的gid" class="headerlink" title="1.改变一个用户的gid"></a>1.改变一个用户的gid</h4><pre><code>usermod -g[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#usermod -g 4322 wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=4322(mage) groups=4322(mage)</code></pre><p>此条命令改变了用户的主组，需注意的是新改变的主组需已存在</p><h4 id="2-临时改变一个用户的gid"><a href="#2-临时改变一个用户的gid" class="headerlink" title="2.临时改变一个用户的gid"></a>2.临时改变一个用户的gid</h4><pre><code>[wangx@CentOS6 ~]$iduid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023[wangx@CentOS6 ~]$newgrp mage[wangx@CentOS6 ~]$iduid=1666(wangx) gid=4322(mage) groups=4322(mage),1235(wangx) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023[wangx@CentOS6 ~]$id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><p>此条命令作用为切换当前登录用户的主组，注意是临时切换，重新登录后失效，使用id  user命令看到的还是切换前的主组</p><h4 id="3-改变组的gid"><a href="#3-改变组的gid" class="headerlink" title="3.改变组的gid"></a>3.改变组的gid</h4><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#groupmod -g 1236 wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1236(wangx) groups=1236(wangx)</code></pre><p>此条命令仅仅是改变了组的ID，组成员还是原来的组成员，没有变化。</p><h3 id="二、增、删辅助组的多种方式"><a href="#二、增、删辅助组的多种方式" class="headerlink" title="二、增、删辅助组的多种方式"></a>二、增、删辅助组的多种方式</h3><h4 id="1-指定用户user加入组group"><a href="#1-指定用户user加入组group" class="headerlink" title="1.指定用户user加入组group"></a>1.指定用户user加入组group</h4><p>groupmems -a user -g group    </p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#groupmems -a wangx -g mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><h4 id="2-将用户user添加至指定组group中"><a href="#2-将用户user添加至指定组group中" class="headerlink" title="2.将用户user添加至指定组group中"></a>2.将用户user添加至指定组group中</h4><p>gpasswd -a user group     </p><pre><code>[root@CentOS6 ~]#gpasswd -a wangx mageAdding user wangx to group mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><h4 id="3-为user用户添加辅助组"><a href="#3-为user用户添加辅助组" class="headerlink" title="3.为user用户添加辅助组"></a>3.为user用户添加辅助组</h4><p>注意：新的辅助组覆盖原辅助组<br>usermod -G</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)[root@CentOS6 ~]#usermod -G mage wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)</code></pre><h4 id="4-从group组中删除用户user"><a href="#4-从group组中删除用户user" class="headerlink" title="4.从group组中删除用户user"></a>4.从group组中删除用户user</h4><p>groupmems  -d  user  -g  group</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)[root@CentOS6 ~]#groupmems -d wangx -g mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)</code></pre><h4 id="5-将用户user从group组中删除"><a href="#5-将用户user从group组中删除" class="headerlink" title="5.将用户user从group组中删除"></a>5.将用户user从group组中删除</h4><p>gpasswd      -d   user  group</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)[root@CentOS6 ~]#gpasswd -d wangx mageRemoving user wangx from group mage[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)</code></pre><h4 id="6-两种方法均可删除所有辅助组"><a href="#6-两种方法均可删除所有辅助组" class="headerlink" title="6.两种方法均可删除所有辅助组"></a>6.两种方法均可删除所有辅助组</h4><p>usermod -G user user<br>usermod -G   “”   user</p><pre><code>[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx),4322(mage)[root@CentOS6 ~]#usermod -G wangx wangx[root@CentOS6 ~]#id wangxuid=1666(wangx) gid=1235(wangx) groups=1235(wangx)</code></pre><h3 id="三、其他的一些拥有多种命令可实现相同需求的情况"><a href="#三、其他的一些拥有多种命令可实现相同需求的情况" class="headerlink" title="三、其他的一些拥有多种命令可实现相同需求的情况"></a>三、其他的一些拥有多种命令可实现相同需求的情况</h3><h4 id="1-修改一个用户的shell类型（2种方法）"><a href="#1-修改一个用户的shell类型（2种方法）" class="headerlink" title="1.修改一个用户的shell类型（2种方法）"></a>1.修改一个用户的shell类型（2种方法）</h4><p>命令1：chsh             修改用户的shell</p><p>命令2：usermod -s  新的默认shell</p><h4 id="2-修改一个用户的描述信息（2种方法）"><a href="#2-修改一个用户的描述信息（2种方法）" class="headerlink" title="2.修改一个用户的描述信息（2种方法）"></a>2.修改一个用户的描述信息（2种方法）</h4><p>命令1：chfn              修改用户描述信息</p><p>命令2：usermod -c  新的用户描述信息</p><h4 id="3-修改一个账号下次登录自动修改密码（2种方法）"><a href="#3-修改一个账号下次登录自动修改密码（2种方法）" class="headerlink" title="3.修改一个账号下次登录自动修改密码（2种方法）"></a>3.修改一个账号下次登录自动修改密码（2种方法）</h4><p>命令1：chage -l wang    使wang账户口令立马失效，下次登录自动修改</p><p>命令2：passwd -e wang 使wang账户口令立马失效，下次登录自动修改</p><h4 id="4-给一个账号加锁（4种方法）"><a href="#4-给一个账号加锁（4种方法）" class="headerlink" title="4.给一个账号加锁（4种方法）"></a>4.给一个账号加锁（4种方法）</h4><p>命令1：usermod -L</p><p>命令2：passwd -l</p><p>命令3：usermod -U</p><p>命令4：passwd -u</p><h4 id="5-给一个账号指定最短使用期限（mindays）（2种方法）"><a href="#5-给一个账号指定最短使用期限（mindays）（2种方法）" class="headerlink" title="5.给一个账号指定最短使用期限（mindays）（2种方法）"></a>5.给一个账号指定最短使用期限（mindays）（2种方法）</h4><p>命令1：passwd -n</p><p>命令2：chage -m</p><h4 id="6-最大使用期限（maxdays）（2种方法）"><a href="#6-最大使用期限（maxdays）（2种方法）" class="headerlink" title="6.最大使用期限（maxdays）（2种方法）"></a>6.最大使用期限（maxdays）（2种方法）</h4><p>命令1：passwd -x</p><p>命令2：chage -M</p><h4 id="7-设置一个账号提前多少天开始警告（warndays）（2种方法）"><a href="#7-设置一个账号提前多少天开始警告（warndays）（2种方法）" class="headerlink" title="7.设置一个账号提前多少天开始警告（warndays）（2种方法）"></a>7.设置一个账号提前多少天开始警告（warndays）（2种方法）</h4><p>命令1：passwd -w</p><p>命令2：chage -W</p><h4 id="8-设置一个账号非活动期限（inactivedays）（3种方法）"><a href="#8-设置一个账号非活动期限（inactivedays）（3种方法）" class="headerlink" title="8.设置一个账号非活动期限（inactivedays）（3种方法）"></a>8.设置一个账号非活动期限（inactivedays）（3种方法）</h4><p>命令1：passwd -i</p><p>命令2：usermod -f</p><p>命令3：chage -I</p><h4 id="9-设置一个账号的有效期（expiredate）（2种方法）"><a href="#9-设置一个账号的有效期（expiredate）（2种方法）" class="headerlink" title="9.设置一个账号的有效期（expiredate）（2种方法）"></a>9.设置一个账号的有效期（expiredate）（2种方法）</h4><p>命令1：usermod -e YYYY-MM-DD    设置用户账号过期时间</p><p>命令2：chage -E YYYY-MM-DD 设置用户账号过期时间</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux用户与组管理命令的易混淆点和重合点&quot;&gt;&lt;a href=&quot;#Linux用户与组管理命令的易混淆点和重合点&quot; class=&quot;headerlink&quot; title=&quot;Linux用户与组管理命令的易混淆点和重合点&quot;&gt;&lt;/a&gt;Linux用户与组管理命令的易混淆点和重
      
    
    </summary>
    
    
      <category term="用户与组" scheme="http://yoursite.com/tags/%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>Linux用户与组管理详解</title>
    <link href="http://yoursite.com/2018/04/02/Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/04/02/Linux用户与组管理详解/</id>
    <published>2018-04-02T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux用户与组管理详解"><a href="#Linux用户与组管理详解" class="headerlink" title="Linux用户与组管理详解"></a>Linux用户与组管理详解</h2><blockquote><p>在linux系统上，用户管理是基于用户名和密码的方式进行资源的分配，了解和掌握用户与组的管理是从事运维工作所必须具备的能力，也是将来从事运维行业的重要工作之一。这里我将介绍Linux系统中用户与组的一些相关概念及管理用户与组的常见命令等：</p></blockquote><h4 id="安全3A"><a href="#安全3A" class="headerlink" title="安全3A"></a>安全3A</h4><p>Linux通过三个机制来保证用户的安全：</p><ul><li><p>Authentication：认证</p></li><li><p>Authorization：授权</p></li><li><p>Accouting|Audition：审计</p></li></ul><h4 id="用户user"><a href="#用户user" class="headerlink" title="用户user"></a>用户user</h4><p>令牌：token</p><p>Linux用户：Username</p><p>管理员：root，UID=0（拥有对系统的最高操作权限）</p><p>普通用户：</p><ul><li><p>系统用户：1-499,1-999（centos7）</p></li><li><p>登录用户：500+，1000+（centos7）</p></li></ul><h4 id="组-group："><a href="#组-group：" class="headerlink" title="组 group："></a>组 group：</h4><p>Linux组：Groupname/GID</p><p>管理员组：root，GID=0</p><p>普通组：</p><ul><li><p>系统组：1-499,1-999（centos7）</p></li><li><p>普通组：500+，1000+（centos7）</p></li></ul><p>在创建用户不指定组的情况下，默认创建一个与该用户名相同的组作为该用户的主组</p><h4 id="组的类别："><a href="#组的类别：" class="headerlink" title="组的类别："></a>组的类别：</h4><p>用户的主要组：</p><p>用户必须属于一个且只有一个主组</p><p>组名同用户名，且仅包含一个用户，私有组</p><p>用户的附加组：</p><p>一个用户可以属于零个或多个附加组</p><h4 id="安全上下文"><a href="#安全上下文" class="headerlink" title="安全上下文"></a>安全上下文</h4><p>进程所能够访问资源的权限取决于进程的运行者的身份</p><h4 id="用户和组的配置文件"><a href="#用户和组的配置文件" class="headerlink" title="用户和组的配置文件"></a>用户和组的配置文件</h4><ul><li><p>/etc/passwd：        存放用户及其属性信息</p></li><li><p>/etc/shadow：       存放用户密码及其相关信息</p></li><li><p>/etc/group：  存放组及属性信息</p></li><li><p>/etc/gshadow：     存放组密码及其相关信息</p></li><li><p>/etc/default/useradd：新建账户模板信息</p></li></ul><h4 id="etc-passwd"><a href="#etc-passwd" class="headerlink" title="/etc/passwd"></a>/etc/passwd</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/passwd.png" alt="enter image description here"></p><p>name：password:UID:GID:GECEO:directory:shell</p><ol><li><p>用户名</p></li><li><p>密码：显示为x</p></li><li><p>UID：用户ID</p></li><li><p>GID：组ID</p></li><li><p>描述信息：GECOS，可添加用户描述信息</p></li><li><p>家目录：用户家目录</p></li><li><p>shell类型：用户shell类型</p><h4 id="etc-shadow"><a href="#etc-shadow" class="headerlink" title="/etc/shadow"></a>/etc/shadow</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/shadow.png" alt="enter image description here"></p></li><li><p>用户名</p></li><li><p>密码加密：算法$6；!!表示账户锁定</p></li><li><p>上次修改密码时间：距离1970.1.1的天数</p></li><li><p>密码最小修改时间：距离下次修改密码至少需间隔的天数（0表示随时可变更）</p></li><li><p>密码最大修改时间：距离本次密码修改时间最多可间隔的天数（99999表示永不过期）</p></li><li><p>密码提醒时间：距离密码即将到期提前警告的天数</p></li><li><p>密码到期后宽限时间：密码到期后账户还能使用的天数</p></li><li><p>账户有效期：该账户可使用的日期</p></li><li><p>保留区域：保留将来可能增加的区域</p></li></ol><h4 id="etc-group"><a href="#etc-group" class="headerlink" title="/etc/group"></a>/etc/group</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/group.png" alt="enter image description here"></p><p>group_name:password:GID:user_list</p><ol><li><p>组名</p></li><li><p>组密码：普通用户加入某个组时需要的密码（不推荐设置密码）</p></li><li><p>GID：组ID</p></li><li><p>组成员：“,”作为分隔符</p></li></ol><h4 id="etc-gshadow"><a href="#etc-gshadow" class="headerlink" title="/etc/gshadow"></a>/etc/gshadow</h4><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/gshadow.png" alt="enter image description here"></p><p>group_name:encrypted_password:administrators:members</p><ol><li><p>组名</p></li><li><p>组密码</p></li><li><p>组管理员（组长）</p></li><li><p>组成员：“,”作为分隔符</p></li></ol><h4 id="etc-default-useradd"><a href="#etc-default-useradd" class="headerlink" title="/etc/default/useradd"></a>/etc/default/useradd</h4><ol><li><p>GROUP=100                     创建用户无指定组时默认所属的组users</p></li><li><p>HOME=/home                          创建用户默认家目录路径</p></li><li><p>INACTIVE=-1                    创建用户时默认没有宽限时间</p></li><li><p>EXPIRE=                             创建用户时默认有效期</p></li><li><p>SHELL=/bin/bash                      创建用户时默认shell类型</p></li><li><p>SKEL=/etc/skel                          创建用户时家目录模板</p></li><li><p>CREATE_MAIL_SPOOL=yes             创建用户时默认创建邮箱</p></li></ol><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><ul><li><p>vipw         等同于vi /etc/passwd</p></li><li><p>vigr           等同于vi /etc/group</p></li><li><p>pwck        检查passwd文件格式错误</p></li><li><p>grpck        检查group文件格式错误</p></li></ul><h3 id="用户与组的管理命令"><a href="#用户与组的管理命令" class="headerlink" title="用户与组的管理命令"></a>用户与组的管理命令</h3><p>用户管理命令及常用选项：</p><h4 id="useradd"><a href="#useradd" class="headerlink" title="useradd"></a>useradd</h4><p>etc/default/useradd存放创建用户时的默认信息</p><ul><li><p>-u     指定uid（生产环境中多台服务器保证程序是同一UID）</p></li><li><p>-o     不检查UID的唯一性，需配合-u使用（不建议UID一样）</p></li><li><p>-g     创建用户时指定主组</p></li><li><p>-c  创建用户时添加描述</p></li><li><p>-d     创建用户时指定家目录路径，二层目录（生产环境中创建给服务用的账户可能会用到）</p></li><li><p>-s      创建用户时指定shell类型/etc/shells</p></li><li><p>-r      创建系统用户（默认不创建家目录）</p></li><li><p>-m    强行创建家目录，用于系统用户，配合-r使用（生产环境中为服务生成系统用户）-M         强行不创建家目录，用于普通用户</p></li><li><p>-G     创建用户时加入到多个辅助组里，多个辅助组用“，”分开</p></li><li><p>-N   创建一个用户名和主组名不同的用户，默认users作为主组</p></li><li><p>-p    创建用户添加密码（不建议此种方式添加口令，口令会在shadow文件中明文）</p></li></ul><h4 id="usermod"><a href="#usermod" class="headerlink" title="usermod"></a>usermod</h4><ul><li><p>-u     修改UID</p></li><li><p>-g     修改GID（组需存在）</p></li><li><p>-G     修改辅助组（会将原来的辅助组覆盖），如果要保留原辅助组配合-a使用</p></li><li><p>-s      新的默认shell</p></li><li><p>-c     新的注释信息</p></li><li><p>-d     新家目录不会自动创建；若要创建新家目录并移动原家数据，同时使用-m选项（-m -d有顺序）</p></li><li><p>-l      新的用户名</p></li><li><p>-L     用户加锁</p></li><li><p>-U    用户解锁（centos6以后禁止此方式解锁）</p></li></ul><h4 id="userdel"><a href="#userdel" class="headerlink" title="userdel"></a>userdel</h4><ul><li>-r      删除用户的所有文件，家目录及邮箱（工作中不建议用，建议保留数据）</li></ul><h3 id="组帐号维护命令及常用选项"><a href="#组帐号维护命令及常用选项" class="headerlink" title="组帐号维护命令及常用选项"></a>组帐号维护命令及常用选项</h3><h4 id="groupadd"><a href="#groupadd" class="headerlink" title="groupadd"></a>groupadd</h4><ul><li><p>-g     指明GID号创建组</p></li><li><p>-r      创建系统组group（centos6：ID&lt;500、centos7：ID&lt;1000）</p></li></ul><h4 id="groupmod"><a href="#groupmod" class="headerlink" title="groupmod"></a>groupmod</h4><ul><li><p>-n     新的组名</p></li><li><p>-g     新的GID</p></li></ul><h4 id="groupdel-删除组（前提没有用户以此组为主组）"><a href="#groupdel-删除组（前提没有用户以此组为主组）" class="headerlink" title="groupdel 删除组（前提没有用户以此组为主组）"></a>groupdel 删除组（前提没有用户以此组为主组）</h4><h4 id="groupmems-查看指定组的成员"><a href="#groupmems-查看指定组的成员" class="headerlink" title="groupmems     查看指定组的成员"></a>groupmems     查看指定组的成员</h4><ul><li><p>-g     更改为指定组（只有root）</p></li><li><p>-a     指定用户加入组</p></li><li><p>-d     从组中删除用户</p></li><li><p>-p     从组中清除所有成员</p></li><li><p>-l      显示组成员列表（读取的/etc/group文件中对应组的最后一个字段的全部内容）</p></li></ul><h4 id="gpasswd-给组添加口令"><a href="#gpasswd-给组添加口令" class="headerlink" title="gpasswd           给组添加口令"></a>gpasswd           给组添加口令</h4><ul><li><p>-a user     将user添加至指定组中</p></li><li><p>-d user     从指定组中移除用户user</p></li><li><p>-A user1，user2…  设置有管理权限的用户列表（设置组管理员）</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux用户与组管理详解&quot;&gt;&lt;a href=&quot;#Linux用户与组管理详解&quot; class=&quot;headerlink&quot; title=&quot;Linux用户与组管理详解&quot;&gt;&lt;/a&gt;Linux用户与组管理详解&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在linux系统上，用户管
      
    
    </summary>
    
    
      <category term="用户与组" scheme="http://yoursite.com/tags/%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>带你认识Linux中的通配符</title>
    <link href="http://yoursite.com/2018/04/01/%E5%B8%A6%E4%BD%A0%E8%AE%A4%E8%AF%86Linux%E4%B8%AD%E7%9A%84%E9%80%9A%E9%85%8D%E7%AC%A6/"/>
    <id>http://yoursite.com/2018/04/01/带你认识Linux中的通配符/</id>
    <published>2018-04-01T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="带你认识Linux中的通配符"><a href="#带你认识Linux中的通配符" class="headerlink" title="带你认识Linux中的通配符"></a>带你认识Linux中的通配符</h2><blockquote><p>所谓的通配是指：显示以指定条件的文件，英文名为glob。通配符是一种特殊语句，用来模糊搜索文件。当查找文件夹时，可以使用它来代替一个或多个真正字符它使得文件管理更加快速，便捷，大大提升了工作效率。</p></blockquote><p>通配符是一种特殊语句，用来模糊搜索文件。当查找文件夹时，可以使用它来代替一个或多个真正字符它使得文件管理更加快速，便捷，大大提升了工作效率。</p><p>常用的通配符有  *   ?   []  等（可通过man 7 glob的帮助文档来查看所有通配符）</p><h4 id="1-表示任意长度的任意字符"><a href="#1-表示任意长度的任意字符" class="headerlink" title="1. * 表示任意长度的任意字符"></a>1. * 表示任意长度的任意字符</h4><p>例：     <code>ls -d /etc/a*</code>    </p><p>显示/etc目录下所有以a开头的文件与目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%98%9F%E5%8F%B7.png" alt="enter image description here"></p><h4 id="2-表示任意单个字符"><a href="#2-表示任意单个字符" class="headerlink" title="2. ? 表示任意单个字符"></a>2. ? 表示任意单个字符</h4><p>例：<code>ls  a?b</code></p><p>显示当前目录下所有以a开头中间有一个字符b结尾的文件<br>a10b 中间夹2个字符，因此不显示<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E9%97%AE%E5%8F%B7.png" alt="enter image description here"></p><h4 id="3-匹配指定范围内任意单个字符"><a href="#3-匹配指定范围内任意单个字符" class="headerlink" title="3. [] 匹配指定范围内任意单个字符"></a>3. [] 匹配指定范围内任意单个字符</h4><p>例：<code>ls -d /etc/[mn]*</code></p><p>显示/etc目录下所有以m开头或者n开头的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/3-2.png" alt="enter image description here"></p><h4 id="4-a-Z-：表示任意一个单个字母"><a href="#4-a-Z-：表示任意一个单个字母" class="headerlink" title="4.[a-Z]：表示任意一个单个字母"></a>4.[a-Z]：表示任意一个单个字母</h4><p>例：<code>ls -d*[a-Z]</code></p><p>显示目录下所有以字母开头的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%AD%97%E6%AF%8D-2.png" alt="enter image description here"></p><h4 id="5-0-9-：表示任意单个数字"><a href="#5-0-9-：表示任意单个数字" class="headerlink" title="5.[0-9]：表示任意单个数字"></a>5.[0-9]：表示任意单个数字</h4><p>例：<code>ls -d f[0-9]</code></p><p>显示当前目录下所有以f开头后跟任意一个数字的文件和目录<br>f16因含两个数字，则不予显示</p><p><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%95%B0%E5%AD%97.png" alt="enter image description here"></p><h4 id="6-匹配除指定范围以外的任意单个字符"><a href="#6-匹配除指定范围以外的任意单个字符" class="headerlink" title="6.[^]匹配除指定范围以外的任意单个字符"></a>6.[^]匹配除指定范围以外的任意单个字符</h4><p>例：<code>ls  -d   [^a]*</code></p><p>显示当前目录下所有不是a开头的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E9%99%A4.png" alt="enter image description here"><br>注意：对字符集或数字集取反时，托字符^加在括号内；如：[^0-9], [^[:alpha:]]</p><h4 id="7-alpha-表示所有的字母（不区分大小写）"><a href="#7-alpha-表示所有的字母（不区分大小写）" class="headerlink" title="7.[:alpha:]表示所有的字母（不区分大小写）"></a>7.[:alpha:]表示所有的字母（不区分大小写）</h4><p>例：<code>ls -d *[[:alpha:]]</code></p><p>显示当前目录下所有以字母结尾（不区分大小写）的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%AD%97%E6%AF%8D%E5%AD%97%E7%AC%A6%E9%9B%86.png" alt="enter image description here"></p><h4 id="8-digit-表示任意单个数字，效果同-0-9"><a href="#8-digit-表示任意单个数字，效果同-0-9" class="headerlink" title="8.[:digit:]表示任意单个数字，效果同[0-9]"></a>8.[:digit:]表示任意单个数字，效果同[0-9]</h4><p>例：<code>ls f[[:digit:]]</code></p><p>显示当前目录下所有f开头，单个数字结尾的文件，值得注意的是：[:digit:]只代表单个数字，f16文件因为f后跟两个数字，则不予显示<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6%E9%9B%86.png" alt="enter image description here"></p><h4 id="9-lower-表示任意单个小写字母"><a href="#9-lower-表示任意单个小写字母" class="headerlink" title="9.[:lower:]表示任意单个小写字母"></a>9.[:lower:]表示任意单个小写字母</h4><p>例：<code>ls -d [[:lower:]]*[[:lower:]]</code></p><p>显示所有当前目录下以小字字母开头且以小写字母结尾的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%B0%8F%E5%86%99%E5%AD%97%E6%AF%8D%E5%AD%97%E7%AC%A6%E9%9B%86.png" alt="enter image description here"></p><h4 id="10-upper-表示任意单个大写字母"><a href="#10-upper-表示任意单个大写字母" class="headerlink" title="10.[:upper:]表示任意单个大写字母"></a>10.[:upper:]表示任意单个大写字母</h4><p>例：<code>ls -d a*[[:upper:]]</code></p><p>显示当前目录下 所有以a开头并以一个大写字母结尾的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/%E5%A4%A7%E5%86%99%E5%AD%97%E6%AF%8D%E5%AD%97%E7%AC%A6%E9%9B%86.png" alt="enter image description here"></p><h4 id="11-alnum-表示任意单个字母或数字"><a href="#11-alnum-表示任意单个字母或数字" class="headerlink" title="11.[:alnum:]表示任意单个字母或数字"></a>11.[:alnum:]表示任意单个字母或数字</h4><p>例：<code>ls -d [[:alnum:]]</code></p><p>显示当前目录下 所有以字母或数字结尾的文件和目录<br><img src="http://www.178linux.com/wp-content/uploads/2018/04/T2H17KYXSPA7ORCX5.png" alt="enter image description here"></p><p>到此为止，常用的通配符使用方法就介绍到这里了，小伙伴们以后查找文件是不是更容易了呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;带你认识Linux中的通配符&quot;&gt;&lt;a href=&quot;#带你认识Linux中的通配符&quot; class=&quot;headerlink&quot; title=&quot;带你认识Linux中的通配符&quot;&gt;&lt;/a&gt;带你认识Linux中的通配符&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;所谓的通配是指：显
      
    
    </summary>
    
    
      <category term="通配符" scheme="http://yoursite.com/tags/%E9%80%9A%E9%85%8D%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件系统简介</title>
    <link href="http://yoursite.com/2018/03/30/Linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2018/03/30/Linux文件系统简介/</id>
    <published>2018-03-30T11:00:00.000Z</published>
    <updated>2018-06-04T11:56:12.523Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux文件系统简介"><a href="#Linux文件系统简介" class="headerlink" title="Linux文件系统简介"></a>Linux文件系统简介</h2><blockquote><p>“一切皆是文件”是Linux基本哲学思想之一，可见文件系统在linux系统中的重要性，学好文件系统将为以后深入研究与学习Linux系统奠定良好的基础。</p></blockquote><h4 id="一、目录文件管理"><a href="#一、目录文件管理" class="headerlink" title="一、目录文件管理"></a>一、目录文件管理</h4><ul><li><p>/                         根目录每个文件和目录都从这里开始</p></li><li><p>/bin                   基本程序，一般为普通用户可执行的程序</p></li><li><p>/boot                 静态文件，系统文件</p></li><li><p>/dev                  存放硬件设备文件</p></li><li><p>/etc                   存放配置文件</p></li><li><p>/lib64                库文件</p></li><li><p>/media              挂载点</p></li><li><p>/mnt                 管理员手动挂载点</p></li><li><p>/opt                   第三方软件包</p></li><li><p>/sbin                 管理员运行的程序</p></li><li><p>/srv                   服务器相关数据</p></li><li><p>/tmp                  存放临时文件</p></li><li><p>/usr                   第二层目录结构</p></li><li><p>/var                   存放变化的文件，如/var/log存放日志</p></li><li><p>/home                家目录，存放用户信息</p></li><li><p>/root                  管理员的家目录‘’</p></li><li><p>/lost+found       分区为ext4具有（如centos6）</p></li><li><p>/misc                  实现光盘的自动挂载</p></li><li><p>/sys                    硬件相关信息</p></li><li><p>/proc                  存储内存中的状态信息</p></li><li><p>/selinux             安全策略（生产环境中一般禁用）</p></li></ul><h4 id="二、文件颜色"><a href="#二、文件颜色" class="headerlink" title="二、文件颜色"></a>二、文件颜色</h4><p>Linux系统通过不同的颜色来对文件进行区别，其中：</p><ul><li><p>蓝色                   —代表目录</p></li><li><p>绿色                   —可执行程序</p></li><li><p>红色                   —打包文件，压缩文件</p></li><li><p>浅蓝色               —链接文件（快捷方式）</p></li><li><p>粉色                   —套接字文件</p></li><li><p>浅黄色               —管道文件</p></li></ul><h4 id="三、文件类型"><a href="#三、文件类型" class="headerlink" title="三、文件类型"></a>三、文件类型</h4><ul><li><p>–                         普通文件</p></li><li><p>d                         目录文件</p></li><li><p>b                         块设备</p></li><li><p>c                         字符设备</p></li><li><p>l                          符号链接文件</p></li><li><p>p                         管道文件pipe</p></li><li><p>s                         套接字文件socket</p><h4 id="四、文件时间戳"><a href="#四、文件时间戳" class="headerlink" title="四、文件时间戳"></a>四、文件时间戳</h4><p>通过stat file 命令查看file文件时间戳：</p></li><li><p>mtime               文件最后修改时间</p></li><li><p>atime                 文件最后读取时间</p></li><li><p>ctime                 文件元数据最后发生变化的时间，如权限，所有组的变化</p></li></ul><h4 id="五、常用文件通配符"><a href="#五、常用文件通配符" class="headerlink" title="五、常用文件通配符"></a>五、常用文件通配符</h4><ul><li><p>*                       匹配零个或多个字符</p></li><li><p>？                       匹配任何单个字符</p></li><li><p>~                         当前用户家目录</p></li><li><p>[0-9]                  表示数字</p></li><li><p>[^0-9]               除数字以外</p></li><li><p>[a-z]                   小写字母</p></li><li><p>[A-Z]                 大写字母</p></li><li><p>[:digit:]              任意数字</p></li><li><p>[:lower:]            任意小写字母</p></li><li><p>[:upper:]           任意大写字母</p></li><li><p>[:alpha:]            任意大小写字母</p></li><li><p>[:alnum:]          任意数字或字母</p></li></ul><h4 id="六、节点编号inode"><a href="#六、节点编号inode" class="headerlink" title="六、节点编号inode"></a>六、节点编号inode</h4><p>Linux系统的文件数据都储存在块（block），此外还需有个地方来储存文件的元信息，比如文件权限、创建者、创建日期等。这种储存文件元信息的区域就叫做inode。</p><p>节点编号也是宝贵的资源，查看指针节点占用情况：df -i</p><p>每个节点编号占4字节</p><ul><li><p>直接指针：前12个指针为直接指针</p></li><li><p>一级指针：可保存4096/4=1024个指针，可存储文件大小1024*4096=4MB</p></li><li><p>二级指针：可存储文件大小1024<em>1024</em>4096=4GB</p></li><li><p>三级指针：可存储文件大小1024<em>1024</em>1024*4096=4TB</p></li></ul><h4 id="七、常用文件管理命令"><a href="#七、常用文件管理命令" class="headerlink" title="七、常用文件管理命令"></a>七、常用文件管理命令</h4><ol><li><p>ls 显示文件信息</p><p> -a 包含隐藏文件</p><p> -l 显示文件详细信息，可写为ll</p><p> -s 从大到小排列</p><p> -r 倒序排列</p><p> -d 只显示目录自身属性</p><p> -d */ 只显示当前目录下文件夹</p><p> -m MODE: 创建目录时直接指定权限</p></li><li><p>touch 创建文件</p><p> -a 仅改变atime和ctime</p><p> -m 仅改变mtime和ctime</p><p> -t[[CC]YY]MMDDhhmm[.ss] 指定atime和mtime的时间戳</p><p> -c 如果文件不存在，则不予创建</p></li></ol><ol start="3"><li><p>mkdir 创建目录</p><p> -p 存在于不报错，且可自动创建所需的各目录</p><p> -v 显示过程</p></li></ol><ol start="4"><li><p>cp 复制</p><p> -a 复制全部信息，用于备份；可复制特殊文件如字符文件，块文件</p><p> -i 覆盖前提示</p><p> -r 递归复制</p><p> -v 显示过程</p><p> -u 只复制源比目标更新文件或目标不存在的文件</p><p> –backup=numbered 目标存在，覆盖前先备份加数字后缀（建议加别名）</p></li><li><p>mv 移动或重命名文件（mv只支持单个文件重命名，rename可批量改名）</p><p> -i 移动前提示</p><p> -r 递归</p><p> -v 显示过程</p></li></ol><ol start="6"><li><p>rm 删除</p><p> -f 不去询问直接删除</p><p> -i 删除前交互提示</p><p> -r 递归</p></li></ol><p>好了，相信看完这些，您对Linux的文件系统已经有了一定的了解，是否对“一切皆是文件”有了自己的理解呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux文件系统简介&quot;&gt;&lt;a href=&quot;#Linux文件系统简介&quot; class=&quot;headerlink&quot; title=&quot;Linux文件系统简介&quot;&gt;&lt;/a&gt;Linux文件系统简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;“一切皆是文件”是Linux基本哲学思想之
      
    
    </summary>
    
    
      <category term="文件系统" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
</feed>
